
----nook hd+ hack

とりあえず、gcc入手。
どうも、
 gcc-4.9-arm-linux-gnueabihf
というのが、debian sidには標準装備。

aptitude install  gcc-4.9-arm-linux-gnueabihf

したら、当たり前なのだが、

以下のパッケージには満たされていない依存関係があります:
 gcc-4.9-arm-linux-gnueabihf : 依存: libgcc-4.9-dev:armhf (= 4.9.2-10)[仮想パッケージです]


といわれる。armhfアーキテクチャが追加されていないため。

https://wiki.debian.org/Multiarch/HOWTO
をみつつかくにん。

dpkg --print-architecture
amd64

あじゃぱー。

dpkg --add-architecture armhf

※例に上がっているとおりで藁。考える奴は多い。

sudo apt-get update -o Acquire::Pdiffs=false     

ぼくちん、debian-sidなので、-o Acquire::Pdiffs=false する。

再度
aptitude install  gcc-4.9-arm-linux-gnueabihf
以下の新規パッケージがインストールされます:
  binutils-arm-linux-gnueabihf{a} cpp-4.9-arm-linux-gnueabihf{a} gcc-4.9-arm-linux-gnueabihf gcc-4.9-base:armhf{a} libasan1:armhf{a} 
  libatomic1:armhf{a} libc6:armhf{a} libc6-dev:armhf{a} libgcc-4.9-dev:armhf{a} libgcc1:armhf{a} libgomp1:armhf{a} 
  libstdc++6:armhf{a} libubsan0:armhf{a} linux-libc-dev:armhf{a} 
更新: 0 個、新規インストール: 14 個、削除: 0 個、保留: 21 個。
22.0 M バイトのアーカイブを取得する必要があります。展開後に 81.8 M バイトのディスク領域が新たに消費されます。
先に進みますか? [Y/n/?] 

おお！うまくいった。こんな感じ。

dpkg -L gcc-4.9-arm-linux-gnueabihf
/.
/usr
/usr/share
/usr/share/man
/usr/share/man/man1
/usr/share/man/man1/arm-linux-gnueabihf-gcc-ar-4.9.1.gz
/usr/share/man/man1/arm-linux-gnueabihf-gcc-nm-4.9.1.gz
/usr/share/man/man1/arm-linux-gnueabihf-gcc-ranlib-4.9.1.gz
/usr/share/doc
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/NEWS.html
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/NEWS.gz
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/gomp
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/gomp/changelog.gz
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/README.ssp
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/gcc
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/gcc/changelog.gz
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/changelog.gz
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/README.Bugs
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/sanitizer
/usr/share/doc/cpp-4.9-arm-linux-gnueabihf/sanitizer/changelog.gz
/usr/bin
/usr/bin/arm-linux-gnueabihf-gcc-ar-4.9
/usr/bin/arm-linux-gnueabihf-gcc-ranlib-4.9
/usr/bin/arm-linux-gnueabihf-gcov-4.9
/usr/bin/arm-linux-gnueabihf-gcc-nm-4.9
/usr/bin/arm-linux-gnueabihf-gcc-4.9
/usr/lib
/usr/lib/gcc
/usr/lib/gcc/arm-linux-gnueabihf
/usr/lib/gcc/arm-linux-gnueabihf/4.9
/usr/lib/gcc/arm-linux-gnueabihf/4.9/lto1
/usr/lib/gcc/arm-linux-gnueabihf/4.9/libsanitizer.spec
/usr/lib/gcc/arm-linux-gnueabihf/4.9/collect2
/usr/lib/gcc/arm-linux-gnueabihf/4.9/lto-wrapper
/usr/lib/gcc/arm-linux-gnueabihf/4.9/libgomp.spec
/usr/share/doc/gcc-4.9-arm-linux-gnueabihf

つ、つぎは、u-bootだハァハァ。

mkdir disto-build
cd disto-build
cp -a ../distro/x-loader .


env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make distclean
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make distclean
make: arm-linux-gnueabihf-gcc: コマンドが見つかりませんでした
find . -type f \
	\( -name 'core' -o -name '*.bak' -o -name '*~' \
	-o -name '*.o'  -o -name '*.a'  \) -print \
	| xargs rm -f
find . -type f \
	\( -name .depend -o -name '*.srec' -o -name '*.bin' \) \
	-print \
	| xargs rm -f
rm -f cpu/omap4/start.o *.bak tags TAGS
rm -fr *.*~
rm -f x-load x-load.map x-load.bin System.map x-load.bin.ift signGP MLO
rm -f include/asm/proc include/asm/arch include/version_autogenerated.h
rm -f include/config.h include/config.mk
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 09:34:25午前 
~/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/ env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make bn_ovation_config
rm -f include/config.h include/config.mk
Configuring for bn_ovation board...
echo "/* Automatically generated - do not edit */" >./include/config.h; \
echo "#include <configs/bn_ovation.h>" >>./include/config.h;
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 09:34:35午前 
~/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/ env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make ift              
make: arm-linux-gnueabihf-gcc: コマンドが見つかりませんでした
arm-linux-gnueabihf-gcc -Wa,-gstabs -D__ASSEMBLY__ -g  -Os -ffunction-sections -fdata-sections -mthumb -mthumb-interwork   -fno-strict-aliasing  -fno-common -ffixed-r8 -msoft-float  -D__KERNEL__ -DTEXT_BASE=0x40304350 -I/home/nojima/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/include -fno-builtin -ffreestanding -nostdinc -isystem  -pipe  -DCONFIG_ARM -D__ARM__ -march=armv7-a -mabi=apcs-gnu -c -o cpu/omap4/start.o /home/nojima/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/cpu/omap4/start.S
make: arm-linux-gnueabihf-gcc: コマンドが見つかりませんでした
/home/nojima/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/config.mk:171: recipe for target 'cpu/omap4/start.o' failed
make: *** [cpu/omap4/start.o] Error 127

>make: arm-linux-gnueabihf-gcc: コマンドが見つかりませんでした

なんだとう！まあ、正しくは、
/usr/bin/arm-linux-gnueabihf-gcc-4.9
だからな。これを直す。

どうも、x-loader/config.mkが、gcc指定する際にバカやるみたい。

あー、x-loader/config.mkみると、
------------ここから--------------
#
 94 # Include the make variables (CC, etc...)
 95 #
 96 AS  = $(CROSS_COMPILE)as
 97 LD  = $(CROSS_COMPILE)ld
 98 CC  = $(CROSS_COMPILE)gcc
 99 CPP = $(CC) -E
100 AR  = $(CROSS_COMPILE)ar
101 NM  = $(CROSS_COMPILE)nm
102 STRIP   = $(CROSS_COMPILE)strip
103 OBJCOPY = $(CROSS_COMPILE)objcopy
104 OBJDUMP = $(CROSS_COMPILE)objdump
105 RANLIB  = $(CROSS_COMPILE)RANLIB
106 
------------ここから--------------
なのが、全部いけない。

いろいろなおすー＞やめる。

あー、しまった。
aptitude install gcc-arm-linux-gnueabihf
で上の命名規則になるらしい。
（alternativeで互換はかるみたい）

もいちどやったらコンパイル通った。

みると、arとか何ら問題なくgcc-arm-linux-gnueabihf-arとかになり、さらにコマンドがあったらしい。

うおお、MLOできてんやんか。

じゃ、じゃぁ、u-bootで。
http://forum.xda-developers.com/nook-hd/development/hd-boot-v2014-07-boot-scripting-t2888098

これみながら、usb-ttyつきのu-bootのビルドをするぜ。

1241  env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make distclean
 1242  env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make omap4_ovation_eng_config
 1243  env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make -j2 u-boot.bin
 1244  env ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- make clean
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 10:02:58午前 
~/prog/nooter/nook-hd/u-boot/nook-hdplus-uboot-with-usbtty/u-boot/ gzip --best -vk u-boot.bin 
u-boot.bin:	 41.0% -- replaced with u-boot.bin.gz
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 10:03:15午前 
~/prog/nooter/nook-hd/u-boot/nook-hdplus-uboot-with-usbtty/u-boot/ mkimage -A arm -O linux -T kernel -C gzip -a 0x88000000 -e 0x88000000 -n "2nd Bootloader" -d u-boot.bin.gz uImage
Image Name:   2nd Bootloader
Created:      Sun Jan 25 10:04:00 2015
Image Type:   ARM Linux Kernel Image (gzip compressed)
Data Size:    113270 Bytes = 110.62 kB = 0.11 MB
Load Address: 88000000
Entry Point:  88000000

あっさりできた。

http://forum.xda-developers.com/showthread.php?t=2062613&page=68
をみると、omap3はブータブルsdカードを作るにはいろいろ小細工が必要だったが、
どうもomap4からは、

 - FATパーティションをつくる。
 - FATでフォーマット
 - ブータブルフラグを最初のパーティションに立てる。
 - MLOとか、u-bootとかのファイルをコピー

でブートできるらしい。どんだけ脆弱性あるんだ...?

--->
あー、ブートしないわー。
 
一応、ファクトリーリセットすればOKとかいうが、やってみたけど全然NG。
http://forum.xda-developers.com/showpost.php?p=54696371&postcount=157

試しにciannogenmodで試してみる。
(See. http://wiki.cyanogenmod.org/w/Install_CM_for_hummingbird)
---------------------------------
wget http://forum.xda-developers.com/attachment.php?attachmentid=1703906&d=1360015429

~/prog/nooter/nook-hd/cianogenmod/ ls
NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).zip
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:36:50午前 
~/prog/nooter/nook-hd/cianogenmod/ unzip NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-\(02.03.13\).zip 
Archive:  NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).zip
  inflating: NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).img  l^H
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:37:48午前 
~/prog/nooter/nook-hd/cianogenmod/ ls
NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).img  NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).zip
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:37:51午前 
~/prog/nooter/nook-hd/cianogenmod/ ls -l
合計 3844532
-rw-r--r-- 1 nojima nojima 3923458560  2月  2  2013 NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).img
-rw-r----- 1 nojima nojima    9478534  1月 25 11:36 NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-(02.03.13).zip
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:37:53午前 
~/prog/nooter/nook-hd/cianogenmod/ mkdir tmp
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:38:01午前 
~/prog/nooter/nook-hd/cianogenmod/ sudo kpartx -a NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-\(02.03.13\).img 
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:38:25午前 
~/prog/nooter/nook-hd/cianogenmod/ mount /dev/mapper/loop0p1 tmp
mount: only root can do that
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:38:49午前 
~/prog/nooter/nook-hd/cianogenmod/ sudo mount /dev/mapper/loop0p1 tmp
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:38:52午前 
~/prog/nooter/nook-hd/cianogenmod/ cd tmp 
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:38:54午前 
~/prog/nooter/nook-hd/cianogenmod/tmp/ ls -l
合計 5948
-rwxr-xr-x 1 root root  131072 12月 27  2012 MLO*
-rwxr-xr-x 1 root root 3526780 12月 28  2012 kernel*
-rwxr-xr-x 1 root root 1857862  2月  2  2013 ramdisk.cwm*
-rwxr-xr-x 1 root root  262144 12月 27  2012 u-boot.bin*
-rwxr-xr-x 1 root root  305232 12月 27  2012 uImage*
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:38:55午前 
~/prog/nooter/nook-hd/cianogenmod/tmp/ cd ..
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:39:23午前 
~/prog/nooter/nook-hd/cianogenmod/ sudo umount tmp                    
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 11:39:34午前 
~/prog/nooter/nook-hd/cianogenmod/ sudo kpartx -d NookHD-bootable-CWM-6027-for-emmc-stock-4GB-rev3-\(02.03.13\).img
loop deleted : /dev/loop0

------------------------------------

とおもったら、これ、Nook HDで、Nook HD+じゃないー。

HD+はこっち。
http://wiki.cyanogenmod.org/w/Install_CM_for_ovation#Installing_CyanogenMod_from_recovery

がー、いろいろ面倒なので、cyanogenmodでブートできるか試す。

http://forum.xda-developers.com/showthread.php?t=2317500

こちらのやり方にしたがってSDカード作ったら...うは、動いた...

ちきしょー、なんだよう！なんで、俺のMLOが、u-bootが動かないんだぁ？

さっくり動くじゃねーか! CMW recoveryが！

ちょっと意地悪してみようかな...まずは、u-bootから入れ替えてみる。

とりあえず、

sudo dd if=/dev/sdb1 of=cyanogenmod-cwm-nook-hd-backups.img bs=1024
2097152+0 レコード入力
2097152+0 レコード出力
2147483648 バイト (2.1 GB) コピーされました、 112.58 秒、 19.1 MB/秒
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 01:10:45午後 
~/prog/nooter/nook-hd/cyanogenmod/ ls
NookHDplus-CWM-6036-for-internal-memory-rev2-(03-08-14).zip       bootfiles/             cyanogenmod-cwm-nook-hd-backups.img  tmp/
NookHDplus-bootable-CWM-6028-for-stock-BOOTFILES-r4-05.15.13.rar  cm-10.2.1-ovation.zip  gapps-jb-20130813-signed.zip
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 01:10:56午後 
~/prog/nooter/nook-hd/cyanogenmod/ ls -l
合計 2299440
-rw-r--r-- 1 nojima nojima    6141563  1月 25 12:49 NookHDplus-CWM-6036-for-internal-memory-rev2-(03-08-14).zip
-rw-r--r-- 1 nojima nojima    5915593  7月 25  2014 NookHDplus-bootable-CWM-6028-for-stock-BOOTFILES-r4-05.15.13.rar
drwxr-xr-x 2 nojima nojima       4096  1月 25 12:47 bootfiles/
-rw-r--r-- 1 nojima nojima  192744585  2月  1  2014 cm-10.2.1-ovation.zip
-rw-r--r-- 1 root   root   2147483648  1月 25 13:10 cyanogenmod-cwm-nook-hd-backups.img
-rw-r--r-- 1 nojima nojima       7490  1月 25 12:46 gapps-jb-20130813-signed.zip
drwxr-xr-x 2 nojima nojima       4096  1月 25 12:47 tmp/
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 01:10:59午後 
~/prog/nooter/nook-hd/cyanogenmod/ gzip cyanogenmod-cwm-nook-hd-backups.img 

して、まずはバックアップ。

次に、全zipファイルをsdカードから消去して、
/prog/nooter/nook-hd/cyanogenmod/tmp/ ls -l
合計 6212
-rwxr-xr-x 1 nojima nojima  131072  1月 25 12:47 MLO*
-rwxr-xr-x 1 nojima nojima 3899456  1月 25 12:48 kernel*
-rwxr-xr-x 1 nojima nojima 1822850  1月 25 12:48 ramdisk*
-rwxr-xr-x 1 nojima nojima  262144  1月 25 12:48 u-boot.bin*
-rwxr-xr-x 1 nojima nojima  237380  1月 25 12:48 uImage*

これだけにして、再度SDカードからリブートしてみたら、
問題なくCWM立ち上がった。

次にMLOをビルドしたものといれかえてみよう！

あー、MLO入れ替えたら、stock ROM(内臓ROMの方）がたちあがっちゃった...
ダメらしい。

armhfがだめかもね。

一回もどしてみる。

うっは、戻すとうごくよ！

ちなみに、
~/prog/nooter/nook-hd/cyanogenmod/tmp/ ls
LOST.DIR/  MLO*  kernel*  ramdisk*  u-boot.bin*  uImage*
でMLO上書きしただけだけど問題なく動いた。

--->つまり、LOST.DIRとかできていても関係なし。

ためしに、u-boot.bin.gzとuImageいれてみよう。

あれ？電源はいらないぞ？

むー、電源なんどか長押しで戻るカンジ...

結論：armhfがダメかも。

sudo aptitude purge gcc-4.9-base:armhf libasan1:armhf libatomic1:armhf libc6:armhf libc6-dev:armhf libgcc-4.9-dev:armhf libgcc1:armhf libgomp1:armhf libstdc++6:armhf libubsan0:armhf linux-libc-dev:armhf

dpkg --remove-architecture armhf

でさっくり消去。


█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 01:50:00午後 
~/prog/nooter/nook-hd/cyanogenmod/ sudo dpkg --add-architecture armel
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 01:50:17午後 
~/prog/nooter/nook-hd/cyanogenmod/ sudo apt-get update -o Acquire::Pdiffs=false   

~/prog/nooter/nook-hd/nook-hd-hdplus/ sudo aptitude install crossbuild-essential-armel
以下の新規パッケージがインストールされます:
  binutils-arm-linux-gnueabi{a} cpp-4.9-arm-linux-gnueabi{a} crossbuild-essential-armel dpkg-cross{a} g++-4.9-arm-linux-gnueabi{a} 
  g++-arm-linux-gnueabi{a} gcc-4.9-arm-linux-gnueabi{a} gcc-4.9-base:armel{a} gcc-arm-linux-gnueabi{a} libasan1:armel{a} 
  libatomic1:armel{a} libc6:armel{a} libc6-dev:armel{a} libconfig-auto-perl{a} libconfig-inifiles-perl{a} 
  libdebian-dpkgcross-perl{a} libgcc-4.9-dev:armel{a} libgcc1:armel{a} libgomp1:armel{a} libstdc++-4.9-dev:armel{a} 
  libstdc++6:armel{a} libubsan0:armel{a} libyaml-libyaml-perl{a} libyaml-perl{a} linux-libc-dev:armel{a} 
更新: 0 個、新規インストール: 25 個、削除: 0 個、保留: 28 個。
29.2 M バイトのアーカイブを取得する必要があります。展開後に 114 M バイトのディスク領域が新たに消費されます。
先に進みますか? [Y/n/?] Y
取得: 1 http://ftp.debian.or.jp/debian/ sid/main gcc-4.9-base armel 4.9.2-10 [160 kB]
取得: 2 http://ftp.debian.or.jp/debian/ sid/main libgcc1 armel 1:4.9.2-10 [41.4 kB]
取得: 3 http://ftp.debian.or.jp/debian/ sid/main libc6 armel 2.19-13 [4,271 kB]
取得: 4 http://ftp.debian.or.jp/debian/ sid/main libstdc++6 armel 4.9.2-10 [234 kB]                                                      
取得: 5 http://ftp.debian.or.jp/debian/ sid/main libasan1 armel 4.9.2-10 [165 kB]                                                        
取得: 6 http://ftp.debian.or.jp/debian/ sid/main libatomic1 armel 4.9.2-10 [6,742 B]                                                     
取得: 7 http://ftp.debian.or.jp/debian/ sid/main libgomp1 armel 4.9.2-10 [36.5 kB]                                                       
取得: 8 http://ftp.debian.or.jp/debian/ sid/main libubsan0 armel 4.9.2-10 [68.5 kB]                                                      
取得: 9 http://ftp.debian.or.jp/debian/ sid/main linux-libc-dev armel 3.16.7-ckt4-1 [965 kB]                

まず、MLOリビルドして突っ込んでみるか。

rm -rf x-loader
cp -a ../distro/x-loader .
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make distclean
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make bn_ovation_config
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make ift              

おお、できた。

いったん、全部SDカードに戻してCWMが動くことを確認。

次にMLOを入れ替える。

ありゃ、ダメだ...あがってこねー。なんじゃ？何がいけんのだ？

まあ、ダメモトでu-bootとか入れ替えてみるかー。

env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make distclean
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make omap4_ovation_eng_config
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make -j2 u-boot.bin
env ARCH=arm CROSS_COMPILE=arm-linux-gnueabi- make clean

なんてこった。あからさまに上がってこんなーぁ。

んー、調べるとcyanogenmodとビルドしたMLOのサイズがあからさまに違いすぎ。

~/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/ ls -l MLO
-rw-r--r-- 1 nojima nojima 20188  1月 25 13:57 MLO
█▓▒░nojima@nightmare░▒▓██▓▒░ 日  1月 25 04:05:55午後 
~/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/ ls -l ../../../cyanogenmod/bootfiles/MLO 
-rw-r--r-- 1 nojima nojima 131072 11月 30  2012 ../../../cyanogenmod/bootfiles/MLO

131kbytes vs 20kbなので、何かうまくビルドできなかった？

なんでこんなに大きさ違うのか？について考察。

/prog/nooter/nook-hd/nook-hd-hdplus/distro-build/x-loader/ file x-load
x-load: ELF 32-bit LSB executable, ARM, version 1, statically linked, not stripped

で、

-rwxr-xr-x 1 nojima nojima 141820  1月 25 16:09 x-load*

ということなので、x-load本体で141kもある。つまり、build-logをみると、
arm-linux-gnueabi-objcopy --gap-fill=0xff -O binary x-load x-load.bin
がx-load.binの実行結果なので、こちらのcopyが行われたときにざっくり消えた。

ちなみにx-load.iftというのが、MLOそのもので、signGPコマンドで、
特別なバイナリヘッダをつけたbinファイルを作ってる。
特別なバイナリヘッダはsignGP.cのconfig変数が該当。

MLOの内容がcyanogenmod由来のものとまるで違うので、ショック。
最初のヘッダすらまるで違う...

--->そもそもB&N側のソースのx-loaderに梱包のsignGPは、
CHSETTINGSなものを頑張るが、CWM梱包のMLOはまったく別物。
これってどうやって持ってきたんだ?そもそもB&N側のx-loaderは
正しい内容なのか？



こりゃ、cyanogenmodから全部ひっぱってくるのが正解か?

cyanogenmodのメイク方法
http://wiki.cyanogenmod.org/w/Development

で、nook hd plus用は、
http://wiki.cyanogenmod.org/w/Build_for_ovation


 Using these, you can build both CyangenMod and ClockworkMod recovery image from source code, and then install them both to your device.
だとさ。なので、CWMもコンパイルできるらしい。ヤター！

が、

 repo init -u https://github.com/CyanogenMod/android.git -b cm-11.0
 repo sync

したらすげえ量DLだ...orz

----
debian-develつらつらみてて、
gnss-sdrのITPを見つけたので、しらべたら、
http://gnss-sdr.org/documentation/general-overview
ってことで、なんと！gnu-radioつかってGPS電波直接うけてGPSなことしちゃおう！
というすさまじいプロジェクトだった...まぢか。

--------------
evolutionがthnikpadのtrackpointで超使いにくいので悩んでいたが、
※スクロールが吹っ飛ぶなど
gpointing-device-settingsで、ホイールエミュレーション
を活用したら超良かった。中ボタンにホイールモード割り当てで
問題なし。ホイールモードであれば、大量のメールのスクロール
とかまったく問題がなかった。


