# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: 9.20120608\n"
"POT-Creation-Date: 2012-05-18 11:05-0400\n"
"PO-Revision-Date: 2012-08-20 10:28+0900\n"
"Last-Translator: Takahide Nojima <nozzy123nozzy@gmail.com>\n"
"Language-Team: Debian JP Project Documentation Team <debian-doc@debian.or.jp>\n"
"Language: Japanease\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: debhelper.pod:1 dh:3 dh_auto_build:3 dh_auto_clean:3 dh_auto_configure:3
#: dh_auto_install:3 dh_auto_test:3 dh_bugfiles:3 dh_builddeb:3 dh_clean:3
#: dh_compress:3 dh_desktop:3 dh_fixperms:3 dh_gconf:3 dh_gencontrol:3
#: dh_icons:3 dh_install:3 dh_installcatalogs:3 dh_installchangelogs:3
#: dh_installcron:3 dh_installdeb:3 dh_installdebconf:3 dh_installdirs:3
#: dh_installdocs:3 dh_installemacsen:3 dh_installexamples:3
#: dh_installifupdown:3 dh_installinfo:3 dh_installinit:3 dh_installlogcheck:3
#: dh_installlogrotate:3 dh_installman:3 dh_installmanpages:3 dh_installmenu:3
#: dh_installmime:3 dh_installmodules:3 dh_installpam:3 dh_installppp:3
#: dh_installudev:3 dh_installwm:3 dh_installxfonts:3 dh_link:3 dh_lintian:3
#: dh_listpackages:3 dh_makeshlibs:3 dh_md5sums:3 dh_movefiles:3 dh_perl:3
#: dh_prep:3 dh_python:3 dh_scrollkeeper:3 dh_shlibdeps:3 dh_strip:3
#: dh_suidregister:3 dh_testdir:3 dh_testroot:3 dh_undocumented:3
#: dh_usrlocal:3
msgid "NAME"
msgstr "名前"

#. type: textblock
#: debhelper.pod:3
msgid "debhelper - the debhelper tool suite"
msgstr "debhelper - debhelper ツール一式です"

#. type: =head1
#: debhelper.pod:5 dh:12 dh_auto_build:12 dh_auto_clean:13
#: dh_auto_configure:12 dh_auto_install:15 dh_auto_test:13 dh_bugfiles:12
#: dh_builddeb:12 dh_clean:12 dh_compress:13 dh_desktop:12 dh_fixperms:12
#: dh_gconf:12 dh_gencontrol:12 dh_icons:13 dh_install:13
#: dh_installcatalogs:14 dh_installchangelogs:12 dh_installcron:12
#: dh_installdeb:12 dh_installdebconf:12 dh_installdirs:12 dh_installdocs:12
#: dh_installemacsen:12 dh_installexamples:12 dh_installifupdown:12
#: dh_installinfo:12 dh_installinit:12 dh_installlogcheck:12
#: dh_installlogrotate:12 dh_installman:13 dh_installmanpages:13
#: dh_installmenu:12 dh_installmime:12 dh_installmodules:14 dh_installpam:12
#: dh_installppp:12 dh_installudev:13 dh_installwm:12 dh_installxfonts:12
#: dh_link:13 dh_lintian:12 dh_listpackages:12 dh_makeshlibs:12 dh_md5sums:13
#: dh_movefiles:12 dh_perl:14 dh_prep:12 dh_python:13 dh_scrollkeeper:12
#: dh_shlibdeps:13 dh_strip:13 dh_suidregister:7 dh_testdir:12 dh_testroot:7
#: dh_undocumented:12 dh_usrlocal:15
msgid "SYNOPSIS"
msgstr "書式"

#. type: textblock
#: debhelper.pod:7
msgid ""
"B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<-s>] [B<--no-act>] [B<-p>I<package>] "
"[B<-N>I<package>] [B<-P>I<tmpdir>]"
msgstr ""
"B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<-s>] [B<--no-act>] [B<-p>I<package>] "
"[B<-N>I<package>] [B<-P>I<tmpdir>]"

#. type: =head1
#: debhelper.pod:9 dh:16 dh_auto_build:16 dh_auto_clean:17
#: dh_auto_configure:16 dh_auto_install:19 dh_auto_test:17 dh_bugfiles:16
#: dh_builddeb:16 dh_clean:16 dh_compress:17 dh_desktop:16 dh_fixperms:16
#: dh_gconf:16 dh_gencontrol:16 dh_icons:17 dh_install:17
#: dh_installcatalogs:18 dh_installchangelogs:16 dh_installcron:16
#: dh_installdeb:16 dh_installdebconf:16 dh_installdirs:16 dh_installdocs:16
#: dh_installemacsen:16 dh_installexamples:16 dh_installifupdown:16
#: dh_installinfo:16 dh_installinit:16 dh_installlogcheck:16
#: dh_installlogrotate:16 dh_installman:17 dh_installmanpages:17
#: dh_installmenu:16 dh_installmime:16 dh_installmodules:18 dh_installpam:16
#: dh_installppp:16 dh_installudev:17 dh_installwm:16 dh_installxfonts:16
#: dh_link:17 dh_lintian:16 dh_listpackages:16 dh_makeshlibs:16 dh_md5sums:17
#: dh_movefiles:16 dh_perl:18 dh_prep:16 dh_python:17 dh_scrollkeeper:16
#: dh_shlibdeps:17 dh_strip:17 dh_suidregister:11 dh_testdir:16 dh_testroot:11
#: dh_undocumented:16 dh_usrlocal:19
msgid "DESCRIPTION"
msgstr "説明"

#. type: textblock
#: debhelper.pod:11
msgid ""
"Debhelper is used to help you build a Debian package. The philosophy behind "
"debhelper is to provide a collection of small, simple, and easily understood "
"tools that are used in F<debian/rules> to automate various common aspects of "
"building a package. This means less work for you, the packager.  It also, to "
"some degree means that these tools can be changed if Debian policy changes, "
"and packages that use them will require only a rebuild to comply with the "
"new policy."
msgstr ""
"debhelperは、Debianパッケージの構築を支援するために使用されます。debhelper"
"は、小さく、単純で、簡単に理解できるツールであり、F<debian/rules>にて利用さ"
"れ、パッケージの構築について共通の処理を機械的に行う事を基本的としています。"
"つまり、debhelperを使うことにより、パッケージを作成しようとしている人の負担を"
"減らせます。また、Debianポリシーが変わった時には、これらツールも変更されま"
"す。その為、debhelperを利用して作成されたパッケージであれば、単に再構築作業を"
"するだけで、新しいポリシーに合わせることができます。"

#. type: textblock
#: debhelper.pod:19
msgid ""
"A typical F<debian/rules> file that uses debhelper will call several "
"debhelper commands in sequence, or use L<dh(1)> to automate this process. "
"Examples of rules files that use debhelper are in F</usr/share/doc/debhelper/"
"examples/>"
msgstr ""
"debhelperを利用している典型的なF<debian/rules>ファイルは、debhelperコマンドを"
"順に呼び出すようにするか、あるいは、L<dh(1)>を使って一連のdebhelper呼び出しを"
"機械的に行わせるようにします。debhelperを使ったrulesファイルの例はF</usr/"
"share/doc/debhelper/examples/>にあります。"

#. type: textblock
#: debhelper.pod:23
msgid ""
"To create a new Debian package using debhelper, you can just copy one of the "
"sample rules files and edit it by hand. Or you can try the B<dh-make> "
"package, which contains a L<dh_make|dh_make(1)> command that partially "
"automates the process. For a more gentle introduction, the B<maint-guide> "
"Debian package contains a tutorial about making your first package using "
"debhelper."
msgstr ""
"debhelperを使ってDebian パッケージを作成するには、サンプルのrulesファイルをコ"
"ピーし、修正するだけです。あるいはB<dh-make>パッケージを利用してみてくださ"
"い。このパッケージにはL<dh_make|dh_make(1)>コマンドが含まれており、これらの作"
"業をある程度機械的に行う事ができます。もう少し親切な文章が入ったパッケージと"
"して、B<maint-guide>パッケージがあり、こちらにはdebhelperを使ってはじめてパッ"
"ケージを作る人向けのチュートリアルが含まれています。"

#. type: =head1
#: debhelper.pod:29
msgid "DEBHELPER COMMANDS"
msgstr "DEBHELPERコマンド"

#. type: textblock
#: debhelper.pod:31
msgid ""
"Here is the list of debhelper commands you can use. See their man pages for "
"additional documentation."
msgstr ""
"以下に利用できるdebhelperコマンドの一覧を載せます。詳しい説明は個々のコマンド"
"に付属のmanページを参照ください。"

#. type: textblock
#: debhelper.pod:36
msgid "#LIST#"
msgstr "#LIST#"

#. type: =head2
#: debhelper.pod:40
msgid "Deprecated Commands"
msgstr "廃止されたコマンド一覧"

#. type: textblock
#: debhelper.pod:42
msgid "A few debhelper commands are deprecated and should not be used."
msgstr "廃止されており、使うべきでないdebhelperコマンド一覧"

#. type: textblock
#: debhelper.pod:46
msgid "#LIST_DEPRECATED#"
msgstr "#LIST_DEPRECATED#"

#. type: =head2
#: debhelper.pod:50
msgid "Other Commands"
msgstr "他のコマンド"

#. type: textblock
#: debhelper.pod:52
msgid ""
"If a program's name starts with B<dh_>, and the program is not on the above "
"lists, then it is not part of the debhelper package, but it should still "
"work like the other programs described on this page."
msgstr ""
"プログラムの名前がB<dh_>で始まり、先のリストにないものは、debhelperパッケージ"
"付属のプログラムではありません。しかしながら、このような名前を持つコマンド"
"は、本ドキュメントで述べる他のプログラムのように動作する事が求められます。"

#. type: =head1
#: debhelper.pod:56
msgid "DEBHELPER CONFIG FILES"
msgstr "DEBHELPER 設定ファイル"

#. type: textblock
#: debhelper.pod:58
msgid ""
"Many debhelper commands make use of files in F<debian/> to control what they "
"do. Besides the common F<debian/changelog> and F<debian/control>, which are "
"in all packages, not just those using debhelper, some additional files can "
"be used to configure the behavior of specific debhelper commands. These "
"files are typically named debian/I<package>.foo (where I<package> of course, "
"is replaced with the package that is being acted on)."
msgstr ""
"debhelperのコマンドは、F<debian/>ディレクトリ以下にあるファイルを元にどんな動"
"作をすべきかを判定します。さらにパッケージに共通に含まれているF<debian/"
"changelog>やF<debian/control>以外に、特定のdebhelperコマンドの動作を制御でき"
"るファイルもあります。これらファイルは、大抵debian/I<package>.foo というファ"
"イル名となります(I<package>は、処理しようとしているパッケージ名に変更してくだ"
"さい）"

#. type: textblock
#: debhelper.pod:65
msgid ""
"For example, B<dh_installdocs> uses files named F<debian/package.docs> to "
"list the documentation files it will install. See the man pages of "
"individual commands for details about the names and formats of the files "
"they use.  Generally, these files will list files to act on, one file per "
"line. Some programs in debhelper use pairs of files and destinations or "
"slightly more complicated formats."
msgstr ""
"例えば、B<dh_installdocs>は、F<debian/package.docs>というファイルを利用して、"
"インストールすべき文章のリストを得ようとします。コマンドのmanページを参照すれ"
"ば、各々のコマンドがどんなフォーマットのどんな名前のファイルを利用するのかが"
"判ります。多くの場合、これのファイルには、コマンドにより処理すべきファイル名"
"を１行に１つの形式で列挙したものになります。また、処理対象のファイルと処理し"
"た後のファイル名を対にして記載する形式のdebhelperプログラムや、あるいは、もう"
"すこし複雑な形式のファイルを利用するdebhelperプログラムもあります。"

#. type: textblock
#: debhelper.pod:72
msgid ""
"Note for the first (or only) binary package listed in F<debian/control>, "
"debhelper will use F<debian/foo> when there's no F<debian/package.foo> file."
msgstr ""
"もし、とあるバイナリパッケージがF<debian/control>に列挙されている一番目の（あ"
"るいは唯一の）バイナリパッケージであり、さらに、F<debian/package.foo>ファイル"
"が見つからない場合、debhelperはF<debian/foo>ファイルを利用して動作します。"

#. type: textblock
#: debhelper.pod:76
msgid ""
"In some rare cases, you may want to have different versions of these files "
"for different architectures or OSes. If files named debian/I<package>.foo."
"I<ARCH> or debian/I<package>.foo.I<OS> exist, where I<ARCH> and I<OS> are "
"the same as the output of \"B<dpkg-architecture -qDEB_HOST_ARCH>\" / "
"\"B<dpkg-architecture -qDEB_HOST_ARCH_OS>\", then they will be used in "
"preference to other, more general files."
msgstr ""
"まれにあることとして、これらのファイルを、異なるアーキテクチャ、異なるOS用に"
"それぞれ用意したい場合があります。もしファイル名がdebian/I<package>.foo."
"I<ARCH>だったり、debian/I<package>.foo.I<OS>のものが存在すると、\"B<dpkg-"
"architecture -qDEB_HOST_ARCH>\"/\"B<dpkg-architecture -qDEB_HOST_ARCH_OS>\"で"
"それぞれ指定したI<ARCH> とI<OS> を含むものが、通常のファイルよりも優先的に使"
"われます。"

#. type: textblock
#: debhelper.pod:83
msgid ""
"Mostly, these config files are used to specify lists of various types of "
"files. Documentation or example files to install, files to move, and so on.  "
"When appropriate, in cases like these, you can use standard shell wildcard "
"characters (B<?> and B<*> and B<[>I<..>B<]> character classes) in the "
"files.  You can also put comments in these files; lines beginning with B<#> "
"are ignored."
msgstr ""
"多くの場合、これらの設定ファイルは、いろいろな種類のファイルを列挙して指定す"
"るのに使われます。例えばインストールすべきドキュメントやexampleのファイルで"
"あったり、移動すべきファイルだったり等となります。シェルのワイルドカード文字"
"列(B<?>、B<*>及びB<[>I<..>B<]>文字クラス）をファイルに含める事ができ、状況次"
"第ではこちらが望ましい事もあります。また、行頭がB<#>で始まる行は無視される事"
"を利用して、コメントを記載できます。"

#. type: textblock
#: debhelper.pod:90
#, fuzzy
msgid ""
"The syntax of these files is intentionally kept very simple to make them "
"easy to read, understand, and modify. If you prefer power and complexity, "
"you can make the file executable, and write a program that outputs whatever "
"content is appropriate for a given situation. When you do so, the output is "
"not further processed to expand wildcards or strip comments."
msgstr ""
"これらファイルの文法は意図的にシンプルにしており、読みやすく、理解しやすく、"
"修正しやすいようにしてあります。もし、より強力でより複雑な事をしたければ、こ"
"れらファイルに実行許可を付与し、状況にあった出力結果をするプログラムを記入し"
"てください。ただ、この場合の出力結果は、後の処理でワイルドカードは展開され"
"ず、コメントも取り除かれない事に気をつけてください。"

#. type: =head1
#: debhelper.pod:96
msgid "SHARED DEBHELPER OPTIONS"
msgstr "DEBHELPER間で共有されるオプション"

#. type: textblock
#: debhelper.pod:98
msgid ""
"The following command line options are supported by all debhelper programs."
msgstr ""
"以下に列挙するコマンドラインオプションは全debhelperプログラムでサポートされて"
"います。"

#. type: =item
#: debhelper.pod:102
msgid "B<-v>, B<--verbose>"
msgstr "B<-v>, B<--verbose>"

#. type: textblock
#: debhelper.pod:104
msgid ""
"Verbose mode: show all commands that modify the package build directory."
msgstr ""
"饒舌モード。パッケージビルドディレクトリを変更するようなコマンドを全部表示し"
"ます。"

#. type: =item
#: debhelper.pod:106 dh:66
msgid "B<--no-act>"
msgstr "B<--no-act>"

#. type: textblock
#: debhelper.pod:108
msgid ""
"Do not really do anything. If used with -v, the result is that the command "
"will output what it would have done."
msgstr ""
"実際の処理をしない状態になります。-vオプションと併用すると、実際にコマンドが"
"今からどんな処理を行うかを見ることができます。"

#. type: =item
#: debhelper.pod:111
msgid "B<-a>, B<--arch>"
msgstr "B<-a>, B<--arch>"

#. type: textblock
#: debhelper.pod:113
msgid ""
"Act on architecture dependent packages that should be built for the build "
"architecture."
msgstr ""
"アーキテクチャ依存パッケージを、ビルド環境のアーテキクチャの元で構築するよう"
"に作用します。"

#. type: =item
#: debhelper.pod:116
msgid "B<-i>, B<--indep>"
msgstr "B<-i>, B<--indep>"

#. type: textblock
#: debhelper.pod:118
msgid "Act on all architecture independent packages."
msgstr "全アーキテクチャ非依存パッケージに関して動作します。"

#. type: =item
#: debhelper.pod:120
msgid "B<-p>I<package>, B<--package=>I<package>"
msgstr "B<-p>I<package>, B<--package=>I<package>"

#. type: textblock
#: debhelper.pod:122
msgid ""
"Act on the package named I<package>. This option may be specified multiple "
"times to make debhelper operate on a given set of packages."
msgstr ""
"I<package>で指定されたパッケージに対して処理を行います。複数のパッケージを"
"debhelperに処理させるときには、繰り返し列挙して指定してください。"

#. type: =item
#: debhelper.pod:125
msgid "B<-s>, B<--same-arch>"
msgstr "B<-s>, B<--same-arch>"

#. type: textblock
#: debhelper.pod:127
msgid ""
"This used to be a smarter version of the B<-a> flag, but the B<-a> flag is "
"now equally smart."
msgstr ""
"これはより賢いB<-a>フラグとして使われていました。しかしながら現在ではB<-a>は"
"同じぐらい賢くなりました。"

#. type: =item
#: debhelper.pod:130
msgid "B<-N>I<package>, B<--no-package=>I<package>"
msgstr "B<-N>I<package>, B<--no-package=>I<package>"

#. type: textblock
#: debhelper.pod:132
msgid ""
"Do not act on the specified package even if an B<-a>, B<-i>, or B<-p> option "
"lists the package as one that should be acted on."
msgstr ""
"B<-a>, B<-i>, B<-p> が指定されていても、指定されているパッケージには処理を行"
"わないようにします。"

#. type: =item
#: debhelper.pod:135
msgid "B<--remaining-packages>"
msgstr "B<--remaining-packages>"

#. type: textblock
#: debhelper.pod:137
msgid ""
"Do not act on the packages which have already been acted on by this "
"debhelper command earlier (i.e. if the command is present in the package "
"debhelper log).  For example, if you need to call the command with special "
"options only for a couple of binary packages, pass this option to the last "
"call of the command to process the rest of packages with default settings."
msgstr ""
"すでにdebhelperコマンドにより処理が行われているものについては処理しないように"
"します(つまり、debhelperのログにコマンドの記録があるものは処理しない）例え"
"ば、２つのバイナリパッケージだけに対して特別なオプション付きでコマンドを呼び"
"出し、残りのパッケージに対しては、本オプションをつけてコマンドを呼び出し、特"
"に指定無き場合の設定による処理を行うという事ができます。"

#. type: =item
#: debhelper.pod:143
msgid "B<--ignore=>I<file>"
msgstr "B<--ignore=>I<file>"

#. type: textblock
#: debhelper.pod:145
msgid ""
"Ignore the specified file. This can be used if F<debian/> contains a "
"debhelper config file that a debhelper command should not act on. Note that "
"F<debian/compat>, F<debian/control>, and F<debian/changelog> can't be "
"ignored, but then, there should never be a reason to ignore those files."
msgstr ""
"特定のファイルを無視します。F<debian/>以下に実際にはdebhelperコマンドが実行し"
"ては困るようなdebhelper設定ファイルがあるような時に利用できます。ただ、"
"F<debian/compat>,F<debian/control>,F<debian/changelog>は無視する事ができませ"
"ん。これは、動作の都合上、これらのファイルを無視するわけにはいかないからで"
"す。"

#. type: textblock
#: debhelper.pod:150
msgid ""
"For example, if upstream ships a F<debian/init> that you don't want "
"B<dh_installinit> to install, use B<--ignore=debian/init>"
msgstr ""
"実際に使う例として、アップストリームが F<debian/init>を提供しているのに"
"B<dh_installinit> でインストールしたくないような時、B<--ignore=debian/init>を"
"使うことになります。"

#. type: =item
#: debhelper.pod:153
msgid "B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>"
msgstr "B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>"

#. type: textblock
#: debhelper.pod:155
msgid ""
"Use I<tmpdir> for package build directory. The default is debian/I<package>"
msgstr ""
"I<tmpdir>をパッケージビルドディレクトリとして利用します。特に指定無き場合では"
"debian/I<package>ディレクトリが使われます。"

#. type: =item
#: debhelper.pod:157
msgid "B<--mainpackage=>I<package>"
msgstr "B<--mainpackage=>I<package>"

#. type: textblock
#: debhelper.pod:159
msgid ""
"This little-used option changes the package which debhelper considers the "
"\"main package\", that is, the first one listed in F<debian/control>, and "
"the one for which F<debian/foo> files can be used instead of the usual "
"F<debian/package.foo> files."
msgstr ""
"このあまり使われないオプションは、debhelperコマンドが\"main package\"としてみ"
"なすパッケージ、つまり、F<debian/control>の最初に記載されたパッケージを、変更"
"するものです。こちらにより、F<debian/package.foo>ファイルの代わりにF<debian/"
"foo>ファイルが使われるようになります。"

#. type: =item
#: debhelper.pod:164
msgid "B<-O=>I<option>|I<bundle>"
msgstr "B<-O=>I<option>|I<bundle>"

#. type: textblock
#: debhelper.pod:166
msgid ""
"This is used by L<dh(1)> when passing user-specified options to all the "
"commands it runs. If the command supports the specified option or option "
"bundle, it will take effect. If the command does not support the option (or "
"any part of an option bundle), it will be ignored."
msgstr ""
"指定したオプションを、L<dh(1)>により後に実行されるすべてのコマンドへ、引き渡"
"すようになります。もし実行されるコマンドにて、指定されたオプションがサポート"
"されていたり、内蔵されていたりすれば、その効力が発揮されます。もしコマンド"
"が、本オプションに指定されたオプションをサポートしていなかったり（あるいは、"
"どれも内蔵していなかったり）する場合は、無視されます。"

#. type: =head1
#: debhelper.pod:173
msgid "COMMON DEBHELPER OPTIONS"
msgstr "DEBHELPERに共通のオプション"

#. type: textblock
#: debhelper.pod:175
msgid ""
"The following command line options are supported by some debhelper "
"programs.  See the man page of each program for a complete explanation of "
"what each option does."
msgstr ""
"debhelperのプログラムには、以下に示すコマンドラインオプションをサポートするも"
"のがあります。「オプションがそれぞれ何をするか」についての完全な説明は、各々"
"のコマンドのmanページを参照ください。"

#. type: =item
#: debhelper.pod:181
msgid "B<-n>"
msgstr "B<-n>"

#. type: textblock
#: debhelper.pod:183
msgid "Do not modify F<postinst>, F<postrm>, etc. scripts."
msgstr "F<postinst>,F<postrm>等のスクリプトを変更しません"

#. type: =item
#: debhelper.pod:185 dh_compress:52 dh_install:81 dh_installchangelogs:68
#: dh_installdocs:75 dh_installexamples:41 dh_link:62 dh_makeshlibs:81
#: dh_md5sums:37 dh_shlibdeps:30 dh_strip:39
msgid "B<-X>I<item>, B<--exclude=>I<item>"
msgstr "B<-X>I<item>, B<--exclude=>I<item>"

#. type: textblock
#: debhelper.pod:187
msgid ""
"Exclude an item from processing. This option may be used multiple times, to "
"exclude more than one thing."
msgstr ""
"処理の対象からitemを除外します。このオプションを複数個指定することにより、複"
"数のitemを除外することができます。"

#. type: =item
#: debhelper.pod:190 dh_bugfiles:54 dh_compress:59 dh_installdirs:35
#: dh_installdocs:70 dh_installexamples:36 dh_installinfo:35 dh_installman:65
#: dh_link:57
msgid "B<-A>, B<--all>"
msgstr "B<-A>, B<--all>"

#. type: textblock
#: debhelper.pod:192
msgid ""
"Makes files or other items that are specified on the command line take "
"effect in ALL packages acted on, not just the first."
msgstr ""
"コマンドラインで指定したファイルや他のitemを、最初に処理するパッケージだけで"
"なく、処理予定の全ッケージに対しても指定されるようにします。"

#. type: =head1
#: debhelper.pod:197
msgid "BUILD SYSTEM OPTIONS"
msgstr "ビルドシステム用オプション"

#. type: textblock
#: debhelper.pod:199
msgid ""
"The following command line options are supported by all of the "
"B<dh_auto_>I<*> debhelper programs. These programs support a variety of "
"build systems, and normally heuristically determine which to use, and how to "
"use them.  You can use these command line options to override the default "
"behavior.  Typically these are passed to L<dh(1)>, which then passes them to "
"all the B<dh_auto_>I<*> programs."
msgstr ""
"全B<dh_auto_>I<*>のdebhelperプログラムがサポートするコマンドラインオプション"
"を以下に記載します。B<dh_auto_>I<*>は様々なビルドシステムをサポートし、通常は"
"試行錯誤によりどのビルドシステムが使われるかを決定し、またどのように使われる"
"べきかも決定します。以下のコマンドラインオプションを指定することにより、"
"B<dh_auto_>I<*>の動作を変更する事ができます。通常は、L<dh(1)>に指定する事によ"
"り、F<dh(1)>により実行されるすべてのB<dh_auto_>I<*>プログラムへこれらオプショ"
"ンをまとめて渡します。"

#. type: =item
#: debhelper.pod:208
msgid "B<-S>I<buildsystem>, B<--buildsystem=>I<buildsystem>"
msgstr "B<-S>I<buildsystem>, B<--buildsystem=>I<buildsystem>"

#. type: textblock
#: debhelper.pod:210
msgid ""
"Force use of the specified I<buildsystem>, instead of trying to auto-select "
"one which might be applicable for the package."
msgstr ""
"指定したビルドシステム(I<buildsystem>)を必ず使うように指示します。こちらによ"
"り、パッケージにあわせて機械的に選択されるI<ビルドシステム>は使われなくなりま"
"す。"

#. type: =item
#: debhelper.pod:213
msgid "B<-D>I<directory>, B<--sourcedirectory=>I<directory>"
msgstr "B<-D>I<directory>, B<--sourcedirectory=>I<directory>"

#. type: textblock
#: debhelper.pod:215
msgid ""
"Assume that the original package source tree is at the specified "
"I<directory> rather than the top level directory of the Debian source "
"package tree."
msgstr ""
"オリジナルのソースツリーを、Debianソースパッケージツリーではなく、"
"I<directory>に指定します。"

#. type: =item
#: debhelper.pod:219
msgid "B<-B>[I<directory>], B<--builddirectory=>[I<directory>]"
msgstr "B<-B>[I<directory>], B<--builddirectory=>[I<directory>]"

#. type: textblock
#: debhelper.pod:221
msgid ""
"Enable out of source building and use the specified I<directory> as the "
"build directory. If I<directory> parameter is omitted, a default build "
"directory will chosen."
msgstr ""
"ビルドディレクトリをソースディレクトリ以外の場所で行えるようにし、"
"I<directory>をビルドディレクトリとして利用するように指定します。もし"
"I<directory>パラメタが省略された場合は、特に指定無き場合のビルドディレクトリ"
"が利用されます。"

#. type: textblock
#: debhelper.pod:225
msgid ""
"If this option is not specified, building will be done in source by default "
"unless the build system requires or prefers out of source tree building.  In "
"such a case, the default build directory will be used even if B<--"
"builddirectory> is not specified."
msgstr ""
"このオプションが指定されない場合、ビルドシステムがソースツリー以外での構築を"
"必要としていたり、あるいは、そちらが望ましいと判断されたりしない限りにおい"
"て、ソースディレクトリ内部で構築が行われます。そのような場合は、B<--"
"builddirectory>が指定されていないときと同じように、特に指定無き場合のビルド"
"ディレクトリが利用されます"

#. type: textblock
#: debhelper.pod:230
msgid ""
"If the build system prefers out of source tree building but still allows in "
"source building, the latter can be re-enabled by passing a build directory "
"path that is the same as the source directory path."
msgstr ""
"ビルドシステムが、自動的にソースディレクトリ以外の場所で構築を選択してしまう"
"にもかかわらずソースディレクトリでの構築が可能な場合、ソースディレクトリのパ"
"スを本オプション経由でビルドディレクトリとして指定すると、ソースディレクトリ"
"内で構築を行うようにすることができます。"

#. type: =item
#: debhelper.pod:234
msgid "B<--parallel>"
msgstr "B<--parallel>"

#. type: textblock
#: debhelper.pod:236
msgid ""
"Enable parallel builds if underlying build system supports them.  The number "
"of parallel jobs is controlled by the B<DEB_BUILD_OPTIONS> environment "
"variable (L<Debian Policy, section 4.9.1>) at build time. It might also be "
"subject to a build system specific limit."
msgstr ""
"もしシステムがサポート可能であれば、並列ビルドを行うように指示するものです。"
"どれだけの数を並列でビルドするかについては、構築時にB<DEB_BUILD_OPTIONS>環境"
"変数で指定します（L<Debian ポリシーマニュアル、4.9.1章>。）なお、並列ビルドに"
"ついてはシステム上の制約の影響を受けます。"

#. type: textblock
#: debhelper.pod:241
msgid ""
"If this option is not specified, debhelper currently defaults to not "
"allowing parallel package builds."
msgstr ""
"もしこのオプションが指定されていないと、debhelperは並列ビルドを行いません。"

#. type: =item
#: debhelper.pod:244
msgid "B<--max-parallel=>I<maximum>"
msgstr "B<--max-parallel=>I<maximum>"

#. type: textblock
#: debhelper.pod:246
msgid ""
"This option implies B<--parallel> and allows further limiting the number of "
"jobs that can be used in a parallel build. If the package build is known to "
"only work with certain levels of concurrency, you can set this to the "
"maximum level that is known to work, or that you wish to support."
msgstr ""
"このオプションはB<--parallel>とともに利用し、並列ビルドにおける並列数の上限を"
"引き上げます。もしパッケージがとある並列数の元でしか並列ビルドできないことが"
"わかっている場合は、このオプションを使って最大限の並列数を指定したり、あるい"
"は必要な並列数を指定することができます。"

#. type: =item
#: debhelper.pod:251 dh:62
msgid "B<--list>, B<-l>"
msgstr "B<--list>, B<-l>"

#. type: textblock
#: debhelper.pod:253
msgid ""
"List all build systems supported by debhelper on this system. The list "
"includes both default and third party build systems (marked as such). Also "
"shows which build system would be automatically selected, or which one is "
"manually specified with the B<--buildsystem> option."
msgstr ""
"このシステムでdebhelperによりサポートされているビルドシステムの全リストが表示"
"されます。このリストは特に指定なき場合のビルドシステム、あるいはサードパー"
"ティーのビルドシステム（そのようにマークされていればですが）の両方を含んでい"
"ます。また、どちらのビルドシステムが機械的に利用されるか、あるいは、B<--"
"buildsystem> で手動で指定されたどのビルドシステムが利用されるかについても表示"
"します。"

#. type: =head1
#: debhelper.pod:260
#, fuzzy
msgid "COMPATIBILITY LEVELS"
msgstr "互換性レベル"

#. type: textblock
#: debhelper.pod:262
msgid ""
"From time to time, major non-backwards-compatible changes need to be made to "
"debhelper, to keep it clean and well-designed as needs change and its author "
"gains more experience. To prevent such major changes from breaking existing "
"packages, the concept of debhelper compatibility levels was introduced. You "
"tell debhelper which compatibility level it should use, and it modifies its "
"behavior in various ways."
msgstr ""
"時が経るにつれ、後方互換性を崩すような大きな変更をdebhelperにする必要がありま"
"した。これは、Debianの状況の変化に対応する為にdebhelperの構造を綺麗なままに維"
"持することであったり、よりうまく設計しなおす事であったり、各々のdebhelperコマ"
"ンドの作者がよりうまく開発をすすめる為となります。すでに存在するパッケージに"
"これらの変更が影響を与えないようにするため、互換性レベルという考え方が提案さ"
"れています。こちらにより、debhelperにどの互換性レベルを使うべきかを指定でき、"
"こちらに合わせてdebhelperコマンドの動作は様々に変化します。"

#. type: textblock
#: debhelper.pod:269
msgid ""
"Tell debhelper what compatibility level to use by writing a number to "
"F<debian/compat>. For example, to turn on v9 mode:"
msgstr ""
"debhelperにどんな互換性レベルで動作させるかを指定するには、互換性レベルに対応"
"した番号をF<debian/compat>に記載します。例えば、v9モードを有効にするには次の"
"様にします。"

#. type: verbatim
#: debhelper.pod:272
#, no-wrap
msgid ""
"  % echo 9 > debian/compat\n"
"\n"
msgstr ""
"  % echo 9 > debian/compat\n"
"\n"

#. type: textblock
#: debhelper.pod:274
msgid ""
"Your package will also need a versioned build dependency on a version of "
"debhelper equal to (or greater than) the compatibility level your package "
"uses. So for compatibility level 9, ensure debian/control has:"
msgstr ""
"構築しようとしているパッケージが利用している互換性レベル以上のバージョンを持"
"つdebhelperプログラムをビルド依存として設定する必要があります。互換性レベル9"
"を指定するなら、debian/controlファイルに以下を記述願います。"

#. type: verbatim
#: debhelper.pod:278
#, no-wrap
msgid ""
"  Build-Depends: debhelper (>= 9)\n"
"\n"
msgstr ""
"  Build-Depends: debhelper (>= 9)\n"
"\n"

#. type: textblock
#: debhelper.pod:280
msgid ""
"Unless otherwise indicated, all debhelper documentation assumes that you are "
"using the most recent compatibility level, and in most cases does not "
"indicate if the behavior is different in an earlier compatibility level, so "
"if you are not using the most recent compatibility level, you're advised to "
"read below for notes about what is different in earlier compatibility levels."
msgstr ""
"特に指定無き場合、debhelper付属の文章は、一番新しい互換性レベルを利用している"
"事を前提としています。多くの場合、以前の互換性レベルではどう動作が異なるかに"
"ついて言及していません。最新の互換性レベルを使わない場合、以前の互換性レベル"
"とどのように振る舞いが違うのかについて、以下の説明を参照する事をおすすめしま"
"す。"

#. type: textblock
#: debhelper.pod:287
msgid "These are the available compatibility levels:"
msgstr "利用可能な互換性レベルは以下の通りです。"

#. type: =item
#: debhelper.pod:291
msgid "v1"
msgstr "v1"

#. type: textblock
#: debhelper.pod:293
msgid ""
"This is the original debhelper compatibility level, and so it is the default "
"one. In this mode, debhelper will use F<debian/tmp> as the package tree "
"directory for the first binary package listed in the control file, while "
"using debian/I<package> for all other packages listed in the F<control> file."
msgstr ""
"これはdebhelperが元来持つ互換性レベルとなります。特に指定無き場合の互換性レベ"
"ルはこのレベルとなります。このモードでは、debhelperはF<debian/tmp>を、control"
"ファイルの最初に記載したバイナリパッケージのビルドディレクトリとして利用しよ"
"うとします。また、debian/I<package>をF<control>内に指定されている全パッケージ"
"対して適用します。"

#. type: textblock
#: debhelper.pod:298 debhelper.pod:305 debhelper.pod:328 debhelper.pod:357
msgid "This mode is deprecated."
msgstr "本モードは廃止されました。"

#. type: =item
#: debhelper.pod:300
msgid "v2"
msgstr "v2"

#. type: textblock
#: debhelper.pod:302
msgid ""
"In this mode, debhelper will consistently use debian/I<package> as the "
"package tree directory for every package that is built."
msgstr ""
"このモードを指定すると、debian/I<package>を全てのパッケージのビルドディレクト"
"リとして常に利用するようになります。"

#. type: =item
#: debhelper.pod:307
msgid "v3"
msgstr "v3"

#. type: textblock
#: debhelper.pod:309
msgid "This mode works like v2, with the following additions:"
msgstr ""
"このモードはv2のモードと同じ動作をしますが、以下に述べる追加機能があります。"

#. type: =item
#: debhelper.pod:313 debhelper.pod:318 debhelper.pod:322 debhelper.pod:336
#: debhelper.pod:341 debhelper.pod:346 debhelper.pod:351 debhelper.pod:365
#: debhelper.pod:369 debhelper.pod:374 debhelper.pod:378 debhelper.pod:390
#: debhelper.pod:395 debhelper.pod:401 debhelper.pod:407 debhelper.pod:420
#: debhelper.pod:427 debhelper.pod:431 debhelper.pod:435 debhelper.pod:448
#: debhelper.pod:452 debhelper.pod:460 debhelper.pod:465 debhelper.pod:479
#: debhelper.pod:484 debhelper.pod:491 debhelper.pod:496 debhelper.pod:501
#: debhelper.pod:505 debhelper.pod:511 debhelper.pod:516 debhelper.pod:521
#: debhelper.pod:536
msgid "-"
msgstr "-"

#. type: textblock
#: debhelper.pod:315
msgid ""
"Debhelper config files support globbing via B<*> and B<?>, when appropriate. "
"To turn this off and use those characters raw, just prefix with a backslash."
msgstr ""
"debhelperの設定ファイルは、B<*>やB<?>のワイルドカードによるファイル名指定が利"
"用できます。この機能を停止し、これらワイルドカード文字をそのままの文字として"
"扱うには、バックスラッシュをこれら文字の前に置いてください。"

#. type: textblock
#: debhelper.pod:320
msgid ""
"B<dh_makeshlibs> makes the F<postinst> and F<postrm> scripts call "
"B<ldconfig>."
msgstr ""
"B<dh_makeshlibs>により、F<postinst>やF<postrm>スクリプトがB<ldconfig>を呼び出"
"すようになります。"

#. type: textblock
#: debhelper.pod:324
msgid ""
"Every file in F<etc/> is automatically flagged as a conffile by "
"B<dh_installdeb>."
msgstr ""
"B<dh_installdeb>は、機械的に、F<etc/>以下のすべてのファイルをconffileとして扱"
"います。"

#. type: =item
#: debhelper.pod:330
msgid "v4"
msgstr "v4"

#. type: textblock
#: debhelper.pod:332
msgid "Changes from v3 are:"
msgstr "v3との変更点："

#. type: textblock
#: debhelper.pod:338
msgid ""
"B<dh_makeshlibs -V> will not include the Debian part of the version number "
"in the generated dependency line in the shlibs file."
msgstr ""
"B<dh_makeshlibs -V> はshlibsファイル内の生成された依存関係を示す行のバージョ"
"ン番号に、debian用の番号を含めないようになりました。"

#. type: textblock
#: debhelper.pod:343
msgid ""
"You are encouraged to put the new B<${misc:Depends}> into F<debian/control> "
"to supplement the B<${shlibs:Depends}> field."
msgstr ""
"F<debian/control>へ、B<${shlibs:Depends}>の他に、新たにB<${misc:Depends}>を指"
"定することが推奨されるようになりました"

#. type: textblock
#: debhelper.pod:348
msgid ""
"B<dh_fixperms> will make all files in F<bin/> directories and in F<etc/init."
"d> executable."
msgstr ""
"B<dh_fixperms>により、F<bin/> ディレクトリ、及び、F<etc/init.d>以下にあるすべ"
"てのファイルに実行権限が付与されるようになりました。"

#. type: textblock
#: debhelper.pod:353
msgid "B<dh_link> will correct existing links to conform with policy."
msgstr ""
"B<dh_link>は、すでに存在するリンクであってもdebianポリシーマニュアルに従うよ"
"うに、リンクを修正するようになりました。"

#. type: =item
#: debhelper.pod:359
msgid "v5"
msgstr "v5"

#. type: textblock
#: debhelper.pod:361
msgid "Changes from v4 are:"
msgstr "v4からの変更点："

#. type: textblock
#: debhelper.pod:367
msgid "Comments are ignored in debhelper config files."
msgstr "debhelper設定ファイルにてコメントは無視されるようになりました。"

#. type: textblock
#: debhelper.pod:371
msgid ""
"B<dh_strip --dbg-package> now specifies the name of a package to put "
"debugging symbols in, not the packages to take the symbols from."
msgstr ""
"B<dh_strip --dbg-package>により、デバッグ用シンボルテーブルへパッケージの名前"
"を指定できるようになりました。以前はデバッグ用シンボルテーブルからパッケージ"
"の名前を取り出していました。"

#. type: textblock
#: debhelper.pod:376
msgid "B<dh_installdocs> skips installing empty files."
msgstr "B<dh_installdocs> は、空のファイルをインストールしなくなりました。"

#. type: textblock
#: debhelper.pod:380
msgid "B<dh_install> errors out if wildcards expand to nothing."
msgstr ""
"ワイルドカードに該当するファイルが無い時は、B<dh_install>はエラーを出力するよ"
"うになりました。"

#. type: =item
#: debhelper.pod:384
msgid "v6"
msgstr "v6"

#. type: textblock
#: debhelper.pod:386
msgid "Changes from v5 are:"
msgstr "v5からの変更点:"

#. type: textblock
#: debhelper.pod:392
msgid ""
"Commands that generate maintainer script fragments will order the fragments "
"in reverse order for the F<prerm> and F<postrm> scripts."
msgstr ""
"メンテナンス用スクリプトの断片を生成するコマンドは、F<prerm>とF<postrm>スクリ"
"プト用に断片を逆順に並び替えるようになりました。"

#. type: textblock
#: debhelper.pod:397
msgid ""
"B<dh_installwm> will install a slave manpage link for F<x-window-manager.1."
"gz>, if it sees the man page in F<usr/share/man/man1> in the package build "
"directory."
msgstr ""
"B<dh_installwm>はF<x-window-manager.1.gz>という副次的なmanページへ、リンクを"
"作るようになりました。これはパッケージビルドディレクトリ内のF<usr/share/man/"
"man1>ディレクトリにmanページがある場合に行われます。"

#. type: textblock
#: debhelper.pod:403
msgid ""
"B<dh_builddeb> did not previously delete everything matching "
"B<DH_ALWAYS_EXCLUDE>, if it was set to a list of things to exclude, such as "
"B<CVS:.svn:.git>. Now it does."
msgstr ""
"B<dh_builddeb>は、B<CVS:.svn:.git>のように、除外する対象を列挙して"
"B<DH_ALWAYS_EXCLUDE>に指定しても、該当する対象を前もって削除しませんでした。"
"しかしながら、本互換性レベルの元では、この場合でもきちんと削除するようになり"
"ました。"

#. type: textblock
#: debhelper.pod:409
msgid ""
"B<dh_installman> allows overwriting existing man pages in the package build "
"directory. In previous compatibility levels it silently refuses to do this."
msgstr ""
"B<dh_installman>は、パッケージビルドディレクトリにすでに存在するmanページを上"
"書きしても良くなりました。これより以前の互換性レベルの元では、このような動作"
"は何の警告もなく拒絶されていました。"

#. type: =item
#: debhelper.pod:414
msgid "v7"
msgstr "v7"

#. type: textblock
#: debhelper.pod:416
msgid "Changes from v6 are:"
msgstr "v6からの変更点:"

#. type: textblock
#: debhelper.pod:422
msgid ""
"B<dh_install>, will fall back to looking for files in F<debian/tmp> if it "
"doesn't find them in the current directory (or wherever you tell it look "
"using B<--sourcedir>). This allows B<dh_install> to interoperate with "
"B<dh_auto_install>, which installs to F<debian/tmp>, without needing any "
"special parameters."
msgstr ""
"もし、F<debian/tmp>以下にあるようなファイルが、カレントディレクトリにない場合"
"（もしくは、B<--sourcedir>で指定したディレクトリにない場合）、B<dh_install>は"
"F<debian/tmp>を探しにいくようになりました。この振る舞いの変更により、"
"B<dh_install>に特に何か引数を指定しなくても、F<debian/tmp>にインストールしよ"
"うとするB<dh_auto_install>と協調して動作することができるようになりました。"

#. type: textblock
#: debhelper.pod:429
msgid "B<dh_clean> will read F<debian/clean> and delete files listed there."
msgstr ""
"B<dh_clean>はF<debian/clean>を解釈し、そこにリストされているファイルを消すよ"
"うになりました。"

#. type: textblock
#: debhelper.pod:433
msgid "B<dh_clean> will delete toplevel F<*-stamp> files."
msgstr ""
"B<dh_clean>はビルドディレクトリの最上位の階層にあるF<*-stamp>ファイルを消すよ"
"うになりました。"

#. type: textblock
#: debhelper.pod:437
msgid ""
"B<dh_installchangelogs> will guess at what file is the upstream changelog if "
"none is specified."
msgstr ""
"B<dh_installchangelogs>は何も指定しなくても、どのファイルがアップストリームの"
"changelogであるかを推定するようになりました。"

#. type: =item
#: debhelper.pod:442
msgid "v8"
msgstr "v8"

#. type: textblock
#: debhelper.pod:444
msgid "Changes from v7 are:"
msgstr "v7からの変更点："

#. type: textblock
#: debhelper.pod:450
msgid ""
"Commands will fail rather than warning when they are passed unknown options."
msgstr ""
"未定義のオプションを渡そうとすると、警告文を出して処理続行することよりも、エ"
"ラーにして処理を失敗させるようになりました。"

#. type: textblock
#: debhelper.pod:454
msgid ""
"B<dh_makeshlibs> will run B<dpkg-gensymbols> on all shared libraries that it "
"generates shlibs files for. So B<-X> can be used to exclude libraries.  "
"Also, libraries in unusual locations that B<dpkg-gensymbols> would not have "
"processed before will be passed to it, a behavior change that can cause some "
"packages to fail to build."
msgstr ""
"B<dh_makeshlibs>は、shlibsファイルを作成する為に、B<dpkg-gensymbols>をすべて"
"の共有ライブラリに対して実行するようになりました。B<-X>を指定すると実行を除外"
"するライブラリを指定できます。また、通常ではない場所にライブラリがある為"
"B<dh_makeshlibs>へ引き渡す前にB<dpkg-gensymbols>が処理できないような場合、"
"パッケージの構築が失敗に終わるようになりました。"

#. type: textblock
#: debhelper.pod:462
msgid ""
"B<dh> requires the sequence to run be specified as the first parameter, and "
"any switches come after it. Ie, use \"B<dh $@ --foo>\", not \"B<dh --foo $@>"
"\"."
msgstr ""
"B<dh>は最初のパラメタとして、一連の処理の名前を指定し、その次にオプションを記"
"載しなければならなくなりました。つまり、\"B<dh $@ --foo>\"が正しく、\"B<dh --"
"foo $@>\"は間違いとなります。"

#. type: textblock
#: debhelper.pod:467
msgid ""
"B<dh_auto_>I<*> prefer to use Perl's B<Module::Build> in preference to "
"F<Makefile.PL>."
msgstr ""
"B<dh_auto_>I<*>はF<Makefile.PL>ファイルよりも、PerlのB<Module::Build>モジュー"
"ルを優先して利用するようになりました。"

#. type: =item
#: debhelper.pod:471
msgid "v9"
msgstr "v9"

#. type: textblock
#: debhelper.pod:473
msgid "This is the recommended mode of operation."
msgstr "利用にあたってはこのモードを使うことを推奨します。"

#. type: textblock
#: debhelper.pod:475
msgid "Changes from v8 are:"
msgstr "v8からの変更点:"

#. type: textblock
#: debhelper.pod:481
msgid ""
"Multiarch support. In particular, B<dh_auto_configure> passes multiarch "
"directories to autoconf in --libdir and --libexecdir."
msgstr ""
"multiarchをサポートします。特にB<dh_auto_configure>はautoconfコマンドへ--"
"libdirや--libexecdirにmultiarch用途のディレクトリを引き渡すようになります。"

#. type: textblock
#: debhelper.pod:486
msgid ""
"dh is aware of the usual dependencies between targets in debian/rules.  So, "
"\"dh binary\" will run any build, build-arch, build-indep, install, etc "
"targets that exist in the rules file. There's no need to define an explicit "
"binary target with explicit dependencies on the other targets."
msgstr ""
"dhコマンドはdebian/rulesに記載されているターゲット間に普通に存在する依存性に"
"気を使います。そのため、\"dh binary\"はrulesファイルに存在するbuild,build-"
"arch,build-indep,install等のターゲットを実行していきます。つまり、他のター"
"ゲットに関する依存関係をいちいち細かく明示したbinaryターゲットを用意する必要"
"はありません。"

#. type: textblock
#: debhelper.pod:493
msgid ""
"B<dh_strip> compresses debugging symbol files to reduce the installed size "
"of -dbg packages."
msgstr ""
"B<dh_strip>はデバッグシンボルファイルを圧縮し、-dbgパッケージのインストール時"
"に必要とする容量を削減します。"

#. type: textblock
#: debhelper.pod:498
msgid ""
"B<dh_auto_configure> does not include the source package name in --"
"libexecdir when using autoconf."
msgstr ""
"B<dh_auto_configure>は、autoconfを使ったときに、--libexecdirにソースパッケー"
"ジ名を追加しなくなりました。"

#. type: textblock
#: debhelper.pod:503
msgid "B<dh> does not default to enabling --with=python-support"
msgstr ""
"B<dh>は--with=python-supportオプションを、特に指定無き場合は、無効にするよう"
"になりました。"

#. type: textblock
#: debhelper.pod:507
msgid ""
"All of the B<dh_auto_>I<*> debhelper programs and B<dh> set environment "
"variables listed by B<dpkg-buildflags>, unless they are already set."
msgstr "B<dh_auto_>I<*>全部とB<dh>コマンドはB<dpkg-buildflags>にて指定される環境変数を設定します。なお、この場合、すでに該当する環境変数が設定されている場合は設定されません。"

#. type: textblock
#: debhelper.pod:513
msgid ""
"B<dh_auto_configure> passes B<dpkg-buildflags> CFLAGS, CPPFLAGS, and LDFLAGS "
"to perl F<Makefile.PL> and F<Build.PL>"
msgstr ""
"B<dh_auto_configure>は、B<dpkg-buildflags>によって設定されるCFLAGS、"
"CPPFLAGS、LDFLAGSパラメタをF<Makefile.PL>や、F<Build.PL>へ引き渡します。"

#. type: textblock
#: debhelper.pod:518
msgid ""
"B<dh_strip> puts separated debug symbols in a location based on their build-"
"id."
msgstr ""
"B<dh_strip>はビルドidに基づく場所に、デバッグシンボルを分離して設置します。"

#. type: textblock
#: debhelper.pod:523
msgid ""
"Executable debhelper config files are run and their output used as the "
"configuration."
msgstr ""
"なお実行可能権限を付与したdebhelper用の設定ファイルは実行されるようになりま"
"す。そして、その出力結果を設定内容として扱うようになります。"

#. type: =item
#: debhelper.pod:528
msgid "v10"
msgstr "v10"

#. type: textblock
#: debhelper.pod:530
msgid ""
"This compatibility level is still open for development; use with caution."
msgstr ""
"この互換性レベルは未だ開発中の状態です。使う場合は注意して使ってください。"

#. type: textblock
#: debhelper.pod:532
msgid "Changes from v9 are:"
msgstr "v9との変更点："

#. type: textblock
#: debhelper.pod:538
msgid "None yet.."
msgstr "検討中..."

#. type: =head1
#: debhelper.pod:544 dh_auto_test:45 dh_installcatalogs:59 dh_installdocs:116
#: dh_installemacsen:67 dh_installexamples:53 dh_installinit:128
#: dh_installman:82 dh_installmime:51 dh_installmodules:60 dh_installudev:55
#: dh_installwm:54 dh_installxfonts:37 dh_movefiles:64 dh_strip:68
#: dh_usrlocal:49
msgid "NOTES"
msgstr "特記事項"

#. type: =head2
#: debhelper.pod:546
msgid "Multiple binary package support"
msgstr "複数のバイナリパッケージのサポート"

#. type: textblock
#: debhelper.pod:548
msgid ""
"If your source package generates more than one binary package, debhelper "
"programs will default to acting on all binary packages when run. If your "
"source package happens to generate one architecture dependent package, and "
"another architecture independent package, this is not the correct behavior, "
"because you need to generate the architecture dependent packages in the "
"binary-arch F<debian/rules> target, and the architecture independent "
"packages in the binary-indep F<debian/rules> target."
msgstr ""
"ソースパッケージが１つ以上のバイナリパッケージを生成する場合、debhelperは特に"
"指定の無い場合、実行時にすべてのバイナリパッケージを生成します。この場合ソー"
"スパッケージが、アーキテクチャ依存パッケージとアーキテクチャ非依存パッケージ"
"を同時に生成するとしたら、この振る舞いは間違いとなります。というのも、"
"F<debian/rules>には、アーキテクチャ依存パッケージを生成するならbinary-arch"
"ターゲットを使って生成する必要があり、アーキテクチャ非依存のパッケージなら、"
"binary-indepターゲットで生成する必要がある為です。"

#. type: textblock
#: debhelper.pod:556
msgid ""
"To facilitate this, as well as give you more control over which packages are "
"acted on by debhelper programs, all debhelper programs accept the B<-a>, B<-"
"i>, B<-p>, and B<-s> parameters. These parameters are cumulative.  If none "
"are given, debhelper programs default to acting on all packages listed in "
"the control file."
msgstr ""
"これを容易にするため、また、debhelperプログラムによりどのパッケージに作用させ"
"るかを細かくコントロール出きるようにする為、debhelperプログラムはB<-a>、B<-"
"i>、 B<-p>、B<-s> パラメタを解釈できるようになっています。これらパラメタは一"
"度に指定してもかまいません。ただ、何も指定しないと、debhelperプログラムは、"
"controlファイルに列挙されたすべてのパッケージに対して処理を行います。"

#. type: =head2
#: debhelper.pod:562
msgid "Automatic generation of Debian install scripts"
msgstr "Debianインストール用スクリプトの機械的な生成"

#. type: textblock
#: debhelper.pod:564
msgid ""
"Some debhelper commands will automatically generate parts of Debian "
"maintainer scripts. If you want these automatically generated things "
"included in your existing Debian maintainer scripts, then you need to add "
"B<#DEBHELPER#> to your scripts, in the place the code should be added.  "
"B<#DEBHELPER#> will be replaced by any auto-generated code when you run "
"B<dh_installdeb>."
msgstr ""
"debhelperコマンドには、Debianメンテナスクリプトの一部を機械的に生成するものが"
"あります。もし、すでにあるDebianメンテナスクリプトに機械的に何かが含まれるよ"
"うにしたければ、スクリプト中の含まれて欲しい部分にB<#DEBHELPER#>を記載してく"
"ださい。B<#DEBHELPER#>はB<dh_installdeb>が実行されるときに機械的に生成された"
"コードと置き換えられます。"

#. type: textblock
#: debhelper.pod:571
msgid ""
"If a script does not exist at all and debhelper needs to add something to "
"it, then debhelper will create the complete script."
msgstr ""
"スクリプトがまったく存在しないにもかかわらず、debhelperがスクリプトに追加する"
"ものがあると判断した場合は、debhelperは該当のスクリプト全部を生成します。"

#. type: textblock
#: debhelper.pod:574
msgid ""
"All debhelper commands that automatically generate code in this way let it "
"be disabled by the -n parameter (see above)."
msgstr ""
"先述の-nパラメタを指定すると、今まで述べたdebhelperプログラムのスクリプトの機"
"械的な生成を止めさせる事ができます。"

#. type: textblock
#: debhelper.pod:577
msgid ""
"Note that the inserted code will be shell code, so you cannot directly use "
"it in a Perl script. If you would like to embed it into a Perl script, here "
"is one way to do that (note that I made sure that $1, $2, etc are set with "
"the set command):"
msgstr ""
"シェルスクリプトによりコードを挿入する手法は、perlスクリプト相手には直接行う"
"事はできないという事に注意する必要があります。もし何かをperlスクリプトに埋め"
"込みたい場合、以下に１つの方法を述べます（$1,$2等はsetコマンドにより設定され"
"る事に注意してください）"

#. type: verbatim
#: debhelper.pod:582
#, no-wrap
msgid ""
"  my $temp=\"set -e\\nset -- @ARGV\\n\" . << 'EOF';\n"
"  #DEBHELPER#\n"
"  EOF\n"
"  system ($temp) / 256 == 0\n"
"  \tor die \"Problem with debhelper scripts: $!\";\n"
"\n"
msgstr ""
"  my $temp=\"set -e\\nset -- @ARGV\\n\" . << 'EOF';\n"
"  #DEBHELPER#\n"
"  EOF\n"
"  system ($temp) / 256 == 0\n"
"  \tor die \"Problem with debhelper scripts: $!\";\n"
"\n"

#. type: =head2
#: debhelper.pod:588
msgid "Automatic generation of miscellaneous dependencies."
msgstr "その他依存関係の機械的な生成"

#. type: textblock
#: debhelper.pod:590
msgid ""
"Some debhelper commands may make the generated package need to depend on "
"some other packages. For example, if you use L<dh_installdebconf(1)>, your "
"package will generally need to depend on debconf. Or if you use "
"L<dh_installxfonts(1)>, your package will generally need to depend on a "
"particular version of xutils. Keeping track of these miscellaneous "
"dependencies can be annoying since they are dependent on how debhelper does "
"things, so debhelper offers a way to automate it."
msgstr ""
"debhelperは他のパッケージに依存するようなパッケージを作成することがあります。"
"例えば、L<dh_installdebconf(1)>を使うと、構築したパッケージはdebconfパッケー"
"ジにも依存するようになります。あるいはL<dh_installxfonts(1)>を使うと、特定の"
"バージョンのxutilsに依存することになります。これらの依存関係を追跡するのは、"
"debhelperがどのように処理を行うかにもよるため、面倒なことになりがちです。こう"
"いった事を解決するため、debhelperは機械的に依存関係を解決する機能があります。"

#. type: textblock
#: debhelper.pod:598
msgid ""
"All commands of this type, besides documenting what dependencies may be "
"needed on their man pages, will automatically generate a substvar called B<"
"${misc:Depends}>. If you put that token into your F<debian/control> file, it "
"will be expanded to the dependencies debhelper figures you need."
msgstr ""
"他のパッケージに依存するようなパッケージを生成するdebhelperコマンドは、何に依"
"存するかについてmanページに記載してある他に、B<${misc:Depends}>と呼ばれる変数"
"を、機械的に生成した依存情報と置き換えます。もしF<debian/control>にこの変数を"
"指定すれば、debhelperは必要とする依存関係を機械的に展開するようになります。"

#. type: textblock
#: debhelper.pod:603
msgid ""
"This is entirely independent of the standard B<${shlibs:Depends}> generated "
"by L<dh_makeshlibs(1)>, and the B<${perl:Depends}> generated by L<dh_perl(1)"
">.  You can choose not to use any of these, if debhelper's guesses don't "
"match reality."
msgstr ""
"この変数は、L<dh_makeshlibs(1)>により生成されたB<${shlibs:Depends}>変数とは"
"まったく関連を持ちません。また、L<dh_perl(1)>により生成されたB<${perl:"
"Depends}>変数とも同様となります。debhelperコマンドの推定結果が現実に合わない"
"場合は、これらを使わないようにしても良いです。"

#. type: =head2
#: debhelper.pod:608
msgid "Package build directories"
msgstr "パッケージビルドディレクトリ"

#. type: textblock
#: debhelper.pod:610
msgid ""
"By default, all debhelper programs assume that the temporary directory used "
"for assembling the tree of files in a package is debian/I<package>."
msgstr ""
"特に指定無き場合、debhelperプログラム群は、一時利用のディレクトリとして、"
"debian/I<package>ディレクトリを利用し、ここにパッケージに含める予定のファイル"
"を集めます。"

#. type: textblock
#: debhelper.pod:613
msgid ""
"Sometimes, you might want to use some other temporary directory. This is "
"supported by the B<-P> flag. For example, \"B<dh_installdocs -Pdebian/tmp>"
"\", will use B<debian/tmp> as the temporary directory. Note that if you use "
"B<-P>, the debhelper programs can only be acting on a single package at a "
"time. So if you have a package that builds many binary packages, you will "
"need to also use the B<-p> flag to specify which binary package the "
"debhelper program will act on."
msgstr ""
"別の一時利用のディレクトリを利用したくなる時があります。この場合、B<-P>を利用"
"してください。例えば、\"B<dh_installdocs　-Pdebian/tmp>\"を指定すると、"
"B<debian/tmp>を一時利用のディレクトリとして利用できます。ただ、B<-P>を使う"
"と、debhelperプログラムは、一度に１つのパッケージの処理しかできなくなります。"
"その為、複数のバイナリパッケージを生成するような場合は、B<-p>オプションを併用"
"して、どノバイナリパッケージに対してdebhelperが作用するかを指定する必要があり"
"ます。"

#. type: =head2
#: debhelper.pod:621
msgid "udebs"
msgstr "udebパッケージについて"

#. type: textblock
#: debhelper.pod:623
msgid ""
"Debhelper includes support for udebs. To create a udeb with debhelper, add "
"\"B<Package-Type: udeb>\" to the package's stanza in F<debian/control>.  "
"Debhelper will try to create udebs that comply with debian-installer policy, "
"by making the generated package files end in F<.udeb>, not installing any "
"documentation into a udeb, skipping over F<preinst>, F<postrm>, F<prerm>, "
"and F<config> scripts, etc."
msgstr ""
"debhelperはudebもサポートします。debhelperによりudebパッケージを作成するに"
"は、\"B<Package-Type: udeb>\"をF<debian/control>のパッケージ定義に加えてくだ"
"さい。debhelperはudebファイルをdebian-installerポリシーにあわせて構築します。"
"つまり、パッケージの拡張子がF<.udeb>となるファイルを作成し、いかなるドキュメ"
"ントも省き、F<preinst>、F<postrm>、 F<prerm>、F<config> スクリプトも省略しま"
"す。"

#. type: =head1
#: debhelper.pod:630
msgid "ENVIRONMENT"
msgstr "環境変数"

#. type: =item
#: debhelper.pod:634
msgid "B<DH_VERBOSE>"
msgstr "B<DH_VERBOSE>"

#. type: textblock
#: debhelper.pod:636
msgid ""
"Set to B<1> to enable verbose mode. Debhelper will output every command it "
"runs that modifies files on the build system."
msgstr ""
"この環境変数にB<1>を指定すると冗長表示モードの動作となります。debhelperは、現"
"行のビルドシステムにて、ファイルを変更するようなコマンドの全てについて表示を"
"行うようになります。"

#. type: =item
#: debhelper.pod:639
msgid "B<DH_COMPAT>"
msgstr "B<DH_COMPAT>"

#. type: textblock
#: debhelper.pod:641
msgid ""
"Temporarily specifies what compatibility level debhelper should run at, "
"overriding any value in F<debian/compat>."
msgstr ""
"この環境変数は、どんな互換性レベルでdebhelperを実行するかを一時的に指定するも"
"のです。こちらを指定するとF<debian/compat>の値は無視されます。"

#. type: =item
#: debhelper.pod:644
msgid "B<DH_NO_ACT>"
msgstr "B<DH_NO_ACT>"

#. type: textblock
#: debhelper.pod:646
msgid "Set to B<1> to enable no-act mode."
msgstr "B<1>に設定すると、何もしない(no-act)モードになります。"

#. type: =item
#: debhelper.pod:648
msgid "B<DH_OPTIONS>"
msgstr "B<DH_OPTIONS>"

#. type: textblock
#: debhelper.pod:650
msgid ""
"Anything in this variable will be prepended to the command line arguments of "
"all debhelper commands."
msgstr ""
"この環境変数に指定したものは、debhelperコマンドの末尾に全て指定されるようにな"
"ります。"

#. type: textblock
#: debhelper.pod:653
msgid ""
"When using L<dh(1)>, it can be passed options that will be passed on to each "
"debhelper command, which is generally better than using DH_OPTIONS."
msgstr ""
"L<dh(1)>を使えば、指定したオプションを続いて呼び出されるdebhelperコマンドに引"
"き渡すことができます。こちらの方が通常はDH_OPTIONSを使うよりも良い方法となり"
"ます。"

#. type: =item
#: debhelper.pod:656
msgid "B<DH_ALWAYS_EXCLUDE>"
msgstr "B<DH_ALWAYS_EXCLUDE>"

#. type: textblock
#: debhelper.pod:658
msgid ""
"If set, this adds the value the variable is set to to the B<-X> options of "
"all commands that support the B<-X> option. Moreover, B<dh_builddeb> will "
"B<rm -rf> anything that matches the value in your package build tree."
msgstr ""
"こちらが設定されていると、B<-X>オプションをサポートするすべてのコマンドに対"
"し、B<-X>オプションの値として環境変数の値を指定します。さらに、B<dh_builddeb>"
"コマンドはビルドツリーの元で環境変数の値に基づくパターンにマッチするもの全部"
"をB<rm -rf>するようになります。"

#. type: textblock
#: debhelper.pod:662
msgid ""
"This can be useful if you are doing a build from a CVS source tree, in which "
"case setting B<DH_ALWAYS_EXCLUDE=CVS> will prevent any CVS directories from "
"sneaking into the package you build. Or, if a package has a source tarball "
"that (unwisely) includes CVS directories, you might want to export "
"B<DH_ALWAYS_EXCLUDE=CVS> in F<debian/rules>, to make it take effect wherever "
"your package is built."
msgstr ""
"これはCVSソースツリーからパッケージ構築をする場合に便利な場合があります。例え"
"ば、B<DH_ALWAYS_EXCLUDE=CVS>を指定すれば、全CVSディレクトリが構築の際に検索さ"
"れるのを防ぐことができます。あるいは、ソースのtar玉にすでにCVSディレクトリが"
"含まれている（賢いことではないのですが）場合、F<debian/rules>に"
"B<DH_ALWAYS_EXCLUDE=CVS>環境変数をexportしておくコードを入れる事により、パッ"
"ケージを構築しようとする場所全部で、効力を発揮するようになります。"

#. type: textblock
#: debhelper.pod:669
msgid ""
"Multiple things to exclude can be separated with colons, as in "
"B<DH_ALWAYS_EXCLUDE=CVS:.svn>"
msgstr ""
"除外したいものを複数指定したい場合は、コロンで区切ってください。例を挙げるな"
"ら、B<DH_ALWAYS_EXCLUDE=CVS:.svn>のようになります。"

#. type: =head1
#: debhelper.pod:674 dh:893 dh_auto_build:47 dh_auto_clean:50
#: dh_auto_configure:52 dh_auto_install:85 dh_auto_test:59 dh_bugfiles:122
#: dh_builddeb:124 dh_clean:142 dh_compress:206 dh_desktop:31 dh_fixperms:127
#: dh_gconf:99 dh_gencontrol:82 dh_icons:65 dh_install:258
#: dh_installcatalogs:116 dh_installchangelogs:171 dh_installcron:77
#: dh_installdeb:144 dh_installdebconf:126 dh_installdirs:86
#: dh_installdocs:307 dh_installemacsen:124 dh_installexamples:106
#: dh_installifupdown:69 dh_installinfo:77 dh_installinit:256
#: dh_installlogcheck:78 dh_installlogrotate:50 dh_installman:261
#: dh_installmanpages:197 dh_installmenu:87 dh_installmime:95
#: dh_installmodules:124 dh_installpam:59 dh_installppp:65 dh_installudev:115
#: dh_installwm:108 dh_installxfonts:87 dh_link:228 dh_lintian:57
#: dh_listpackages:30 dh_makeshlibs:258 dh_md5sums:90 dh_movefiles:170
#: dh_perl:146 dh_prep:60 dh_python:280 dh_scrollkeeper:28 dh_shlibdeps:171
#: dh_strip:242 dh_suidregister:117 dh_testdir:44 dh_testroot:27
#: dh_undocumented:28 dh_usrlocal:114
msgid "SEE ALSO"
msgstr "参考"

#. type: =item
#: debhelper.pod:678
msgid "F</usr/share/doc/debhelper/examples/>"
msgstr "F</usr/share/doc/debhelper/examples/>"

#. type: textblock
#: debhelper.pod:680
msgid "A set of example F<debian/rules> files that use debhelper."
msgstr "debhelperを使うときのF<debian/rules>ファイルの例が格納されています。"

#. type: =item
#: debhelper.pod:682
msgid "L<http://kitenet.net/~joey/code/debhelper/>"
msgstr "L<http://kitenet.net/~joey/code/debhelper/>"

#. type: textblock
#: debhelper.pod:684
msgid "Debhelper web site."
msgstr "DebhelperのWebサイトとなります。"

#. type: =head1
#: debhelper.pod:688 dh:899 dh_auto_build:53 dh_auto_clean:56
#: dh_auto_configure:58 dh_auto_install:91 dh_auto_test:65 dh_bugfiles:130
#: dh_builddeb:130 dh_clean:148 dh_compress:212 dh_desktop:37 dh_fixperms:133
#: dh_gconf:105 dh_gencontrol:88 dh_icons:71 dh_install:264
#: dh_installcatalogs:122 dh_installchangelogs:177 dh_installcron:83
#: dh_installdeb:150 dh_installdebconf:132 dh_installdirs:92
#: dh_installdocs:313 dh_installemacsen:130 dh_installexamples:112
#: dh_installifupdown:75 dh_installinfo:83 dh_installlogcheck:84
#: dh_installlogrotate:56 dh_installman:267 dh_installmanpages:203
#: dh_installmenu:95 dh_installmime:101 dh_installmodules:130 dh_installpam:65
#: dh_installppp:71 dh_installudev:121 dh_installwm:114 dh_installxfonts:93
#: dh_link:234 dh_lintian:65 dh_listpackages:36 dh_makeshlibs:264
#: dh_md5sums:96 dh_movefiles:176 dh_perl:152 dh_prep:66 dh_python:286
#: dh_scrollkeeper:34 dh_shlibdeps:177 dh_strip:248 dh_suidregister:123
#: dh_testdir:50 dh_testroot:33 dh_undocumented:34 dh_usrlocal:120
msgid "AUTHOR"
msgstr "作者"

#. type: textblock
#: debhelper.pod:690 dh:901 dh_auto_build:55 dh_auto_clean:58
#: dh_auto_configure:60 dh_auto_install:93 dh_auto_test:67 dh_builddeb:132
#: dh_clean:150 dh_compress:214 dh_fixperms:135 dh_gencontrol:90
#: dh_install:266 dh_installchangelogs:179 dh_installcron:85 dh_installdeb:152
#: dh_installdebconf:134 dh_installdirs:94 dh_installdocs:315
#: dh_installemacsen:132 dh_installexamples:114 dh_installifupdown:77
#: dh_installinfo:85 dh_installinit:264 dh_installlogrotate:58
#: dh_installman:269 dh_installmanpages:205 dh_installmenu:97
#: dh_installmime:103 dh_installmodules:132 dh_installpam:67 dh_installppp:73
#: dh_installudev:123 dh_installwm:116 dh_installxfonts:95 dh_link:236
#: dh_listpackages:38 dh_makeshlibs:266 dh_md5sums:98 dh_movefiles:178
#: dh_prep:68 dh_shlibdeps:179 dh_strip:250 dh_suidregister:125 dh_testdir:52
#: dh_testroot:35 dh_undocumented:36
msgid "Joey Hess <joeyh@debian.org>"
msgstr "Joey Hess <joeyh@debian.org>"

#. type: textblock
#: dh:5
msgid "dh - debhelper command sequencer"
msgstr "dh - debhelper コマンドシーケンサ"

#. type: textblock
#: dh:14
msgid ""
"B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] "
"[S<I<debhelper options>>]"
msgstr ""
"B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] "
"[S<I<debhelper options>>]"

#. type: textblock
#: dh:18
msgid ""
"B<dh> runs a sequence of debhelper commands. The supported I<sequence>s "
"correspond to the targets of a F<debian/rules> file: B<build-arch>, B<build-"
"indep>, B<build>, B<clean>, B<install-indep>, B<install-arch>, B<install>, "
"B<binary-arch>, B<binary-indep>, and B<binary>."
msgstr ""
"B<dh>は一連のdebhelperコマンドを起動します。F<debian/rules> ファイルに記載さ"
"れたターゲットに関わるI<sequence>をサポートします。サポートしているターゲット"
"は、 B<build-arch>、B<build-indep>、 B<build>、 B<clean>、B<install-indep>、 "
"B<install-arch>、B<install>、 B<binary-arch>、B<binary-indep>、B<binary>とな"
"ります。"

#. type: =head1
#: dh:23
msgid "OVERRIDE TARGETS"
msgstr "上書きターゲット"

#. type: textblock
#: dh:25
msgid ""
"A F<debian/rules> file using B<dh> can override the command that is run at "
"any step in a sequence, by defining an override target."
msgstr ""
"B<dh>が利用するF<debian/rules>にて、上書きターゲットを指定することにより、呼"
"び出される一連の処理の途中にて処理を変更できます。"

#. type: textblock
#: dh:28
msgid ""
"To override I<dh_command>, add a target named B<override_>I<dh_command> to "
"the rules file. When it would normally run I<dh_command>, B<dh> will instead "
"call that target. The override target can then run the command with "
"additional options, or run entirely different commands instead. See examples "
"below.  (Note that to use this feature, you should Build-Depend on debhelper "
"7.0.50 or above.)"
msgstr ""
"ターゲットI<dh_command>を変更するためには、B<override_>I<dh_command>という"
"ターゲットをruleファイルに記載します。こちらが指定されていると、I<dh_command>"
"が動作する代わりに、B<override_>I<dh_command>ターゲットを呼び出します。上書き"
"ターゲットでは、コマンドにオプションを追加したり、あるいは、コマンド全部を置"
"き換えたりできます。後に例を上げます。（この機能を使うには、Build-Dependに"
"debhelperのバージョン7.0.50 以上というのを指定しておかなければなりません）"

#. type: textblock
#: dh:36
msgid ""
"Override targets can also be defined to run only when building architecture "
"dependent or architecture independent packages.  Use targets with names like "
"B<override_>I<dh_command>B<-arch> and B<override_>I<dh_command>B<-indep>.  "
"(Note that to use this feature, you should Build-Depend on debhelper 8.9.7 "
"or above.)"
msgstr ""
"アーキテクチャ依存パッケージを作るときのみに作用、あるいは、アーキテクチャ非"
"依存パッケージを作るときのみ作用するように上書きターゲットを定義することもで"
"きます。その場合、B<override_>I<dh_command>B<-arch>や、"
"B<override_>I<dh_command>B<-indep>を使ってください（なお、この機能を使うに"
"は、Build-Depend行にdebhelperのバージョンを8.9.7以上に指定する必要がありま"
"す。） "

#. type: =head1
#: dh:43 dh_auto_build:28 dh_auto_clean:30 dh_auto_configure:31
#: dh_auto_install:43 dh_auto_test:31 dh_bugfiles:50 dh_builddeb:24
#: dh_clean:41 dh_compress:48 dh_fixperms:31 dh_gconf:39 dh_gencontrol:26
#: dh_icons:25 dh_install:59 dh_installcatalogs:49 dh_installchangelogs:56
#: dh_installcron:40 dh_installdebconf:61 dh_installdirs:31 dh_installdocs:66
#: dh_installemacsen:48 dh_installexamples:32 dh_installifupdown:39
#: dh_installinfo:31 dh_installinit:47 dh_installlogcheck:42
#: dh_installlogrotate:22 dh_installman:61 dh_installmanpages:40
#: dh_installmenu:41 dh_installmime:41 dh_installmodules:44 dh_installpam:31
#: dh_installppp:35 dh_installudev:35 dh_installwm:34 dh_link:53
#: dh_makeshlibs:43 dh_md5sums:28 dh_movefiles:38 dh_perl:31 dh_prep:26
#: dh_python:39 dh_shlibdeps:26 dh_strip:35 dh_testdir:23 dh_usrlocal:39
msgid "OPTIONS"
msgstr "オプション"

#. type: =item
#: dh:47
msgid "B<--with> I<addon>[B<,>I<addon> ...]"
msgstr "B<--with> I<addon>[B<,>I<addon> ...]"

#. type: textblock
#: dh:49
msgid ""
"Add the debhelper commands specified by the given addon to appropriate "
"places in the sequence of commands that is run. This option can be repeated "
"more than once, or multiple addons can be listed, separated by commas.  This "
"is used when there is a third-party package that provides debhelper "
"commands. See the F<PROGRAMMING> file for documentation about the sequence "
"addon interface."
msgstr ""
"debhelperコマンドに適切な場所で一連のコマンドを実行するようなアドオンを指定し"
"ます。このオプションはオプションを繰り返し指定することもできますし、複数のア"
"ドオンをカンマで区切って列挙して指定できます。このオプションはdebhelperコマン"
"ドを提供する外部パッケージと共に利用する時に使います。F<PROGRAMMING>ファイル"
"に、一連のアドオン用インターフェースについての文章があります。"

#. type: =item
#: dh:56
msgid "B<--without> I<addon>"
msgstr "B<--without> I<addon>"

#. type: textblock
#: dh:58
msgid ""
"The inverse of B<--with>, disables using the given addon. This option can be "
"repeated more than once, or multiple addons to disable can be listed, "
"separated by commas."
msgstr ""
"B<--with>とは逆に指定されたアドオンを使わないようにします。このオプションは、"
"繰り返し指定する、あるいは、アドオン名をカンマで区切って指定することにより、"
"指定された複数のアドオンを使わないように指定できます。"

#. type: textblock
#: dh:64
msgid "List all available addons."
msgstr "利用可能なアドオン一覧。"

#. type: textblock
#: dh:68
msgid ""
"Prints commands that would run for a given sequence, but does not run them."
msgstr ""
"指定された一連の処理の内容を表示するだけコマンドとなります。表示だけして実際"
"にはコマンドを実行しません。"

#. type: textblock
#: dh:72
msgid ""
"Other options passed to B<dh> are passed on to each command it runs. This "
"can be used to set an option like B<-v> or B<-X> or B<-N>, as well as for "
"more specialised options."
msgstr ""
"B<dh>に他のオプションを渡すとそれはのちに実行する全コマンドへ引き渡されます。"
"B<-v>、B<-X>、B<-N>や、他の特別なオプションを指定するのに使われます。"

#. type: =head1
#: dh:76 dh_installdocs:105 dh_link:75 dh_makeshlibs:97 dh_shlibdeps:69
msgid "EXAMPLES"
msgstr "使用例"

#. type: textblock
#: dh:78
msgid ""
"To see what commands are included in a sequence, without actually doing "
"anything:"
msgstr ""
"一連の動作で何のコマンドが実行されるかを、これらのコマンドが実際に実行されな"
"いようにして見るには："

#. type: verbatim
#: dh:81
#, no-wrap
msgid ""
"\tdh binary-arch --no-act\n"
"\n"
msgstr ""
"\tdh binary-arch --no-act\n"
"\n"

#. type: textblock
#: dh:83
msgid ""
"This is a very simple rules file, for packages where the default sequences "
"of commands work with no additional options."
msgstr ""
"以下は非常に簡単なrulesファイルです。ここでは、追加オプション無しで、かつ、特"
"に指定が無い場合に呼び出される一連のコマンドが呼び出され、パッケージに対して"
"処理が行われます。"

#. type: verbatim
#: dh:86 dh:107 dh:120
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\n"

#. type: textblock
#: dh:90
msgid ""
"Often you'll want to pass an option to a specific debhelper command. The "
"easy way to do with is by adding an override target for that command."
msgstr ""
"特定のdebhelperコマンドへオプションを渡したい事がよくあります。こちらを行う簡"
"単な方法は、オプション渡したいコマンドに関する上書きターゲットに記載する事に"
"より行います。"

#. type: verbatim
#: dh:93 dh:178 dh:189
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\t\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\t\n"

#. type: verbatim
#: dh:97
#, no-wrap
msgid ""
"\toverride_dh_strip:\n"
"\t\tdh_strip -Xfoo\n"
"\t\n"
msgstr ""
"\toverride_dh_strip:\n"
"\t\tdh_strip -Xfoo\n"
"\t\n"

#. type: verbatim
#: dh:100
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\tdh_auto_configure -- --with-foo --disable-bar\n"
"\n"
msgstr ""
"\toverride_dh_auto_configure:\n"
"\t\tdh_auto_configure -- --with-foo --disable-bar\n"
"\n"

#. type: textblock
#: dh:103
msgid ""
"Sometimes the automated L<dh_auto_configure(1)> and L<dh_auto_build(1)> "
"can't guess what to do for a strange package. Here's how to avoid running "
"either and instead run your own commands."
msgstr ""
"L<dh_auto_configure(1)>やL<dh_auto_build(1)>が処理をする際、何を処理すればよ"
"いか判断できないような変わったパッケージがたまに存在します。ここでは、"
"L<dh_auto_configure(1)>やL<dh_auto_build(1)>を実行せずに、代わりのコマンドを"
"実行させる方法を示します。 "

#. type: verbatim
#: dh:111
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\t./mondoconfig\n"
"\n"
msgstr ""
"\toverride_dh_auto_configure:\n"
"\t\t./mondoconfig\n"
"\n"

#. type: verbatim
#: dh:114
#, no-wrap
msgid ""
"\toverride_dh_auto_build:\n"
"\t\tmake universe-explode-in-delight\n"
"\n"
msgstr ""
"\toverride_dh_auto_build:\n"
"\t\tmake universe-explode-in-delight\n"
"\n"

#. type: textblock
#: dh:117
msgid ""
"Another common case is wanting to do something manually before or after a "
"particular debhelper command is run."
msgstr ""
"別のよくある例として、特定のdebhelperコマンドが実行される直前、あるいは、直後"
"に手動にて何かしたいような事があります。その場合は以下のようにすると良いで"
"す。"

#. type: verbatim
#: dh:124
#, no-wrap
msgid ""
"\toverride_dh_fixperms:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""
"\toverride_dh_fixperms:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"

#. type: textblock
#: dh:128
msgid ""
"If your package uses autotools and you want to freshen F<config.sub> and "
"F<config.guess> with newer versions from the B<autotools-dev> package at "
"build time, you can use some commands provided in B<autotools-dev> that "
"automate it, like this."
msgstr ""
"もしパッケージがautotoolsを利用しており、パッケージ構築時にF<config.sub>や"
"F<config.guess>ファイルをより新しいバージョンのB<autotools-dev>で一旦生成しな"
"おしたい場合があります。この場合、B<autotools-dev>で提供されているコマンドを"
"使って処理する事ができます。その場合以下のようにします："

#. type: verbatim
#: dh:133
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with autotools_dev\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with autotools_dev\n"
"\n"

#. type: textblock
#: dh:137
msgid ""
"Python tools are not run by dh by default, due to the continual change in "
"that area. (Before compatibility level v9, dh does run B<dh_pysupport>.)  "
"Here is how to use B<dh_python2>."
msgstr ""
"状況は常に変わってはいますが、特に指定無き場合python toolはdhによって起動され"
"ません（互換性レベルのv9以前であれば、dhはB<dh_pysupport>を起動します。)ここ"
"では、B<dh_python2>どう使うかを示します:"

#. type: verbatim
#: dh:141
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with python2\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with python2\n"
"\n"

#. type: textblock
#: dh:145
msgid ""
"Here is how to force use of Perl's B<Module::Build> build system, which can "
"be necessary if debhelper wrongly detects that the package uses MakeMaker."
msgstr ""
"perlによるB<Module::Build>ビルドシステムを無理やり使わせる方法を載せます。こ"
"れは、debhelperが間違ってパッケージがMakeMakerを使っていると誤認識する場合に"
"必要となります。"

#. type: verbatim
#: dh:149
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --buildsystem=perl_build\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --buildsystem=perl_build\n"
"\n"

#. type: textblock
#: dh:153
msgid ""
"Here is an example of overriding where the B<dh_auto_>I<*> commands find the "
"package's source, for a package where the source is located in a "
"subdirectory."
msgstr ""
"以下にB<dh_auto_>I<*>コマンドがどこにパッケージソースがあるかを変更する例を載"
"せます。これはサブディレクトリにソースが存在するようなパッケージで使います："

#. type: verbatim
#: dh:157
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --sourcedirectory=src\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --sourcedirectory=src\n"
"\n"

#. type: textblock
#: dh:161
msgid ""
"And here is an example of how to tell the B<dh_auto_>I<*> commands to build "
"in a subdirectory, which will be removed on B<clean>."
msgstr ""
"B<dh_auto_>I<*>にサブディレクトリで構築するように指定する方法を以下に示しま"
"す。こちらを指定すると、B<clean>手続きでこれらディレクトリが取り除かれるよう"
"になります："

#. type: verbatim
#: dh:164
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --builddirectory=build\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --builddirectory=build\n"
"\n"

#. type: textblock
#: dh:168
msgid ""
"If your package can be built in parallel, you can support parallel building "
"as follows. Then B<dpkg-buildpackage -j> will work."
msgstr ""
"もしパッケージが並列処理が可能であれば、以下のようにして並列ビルドをサポート"
"することができます。こうすれば、B<dpkg-buildpackage -j> が使えるようになりま"
"す："

#. type: verbatim
#: dh:171
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --parallel\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --parallel\n"
"\n"

#. type: textblock
#: dh:175
msgid ""
"Here is a way to prevent B<dh> from running several commands that you don't "
"want it to run, by defining empty override targets for each command."
msgstr ""
"ここでは、B<dh>に、実行してほしくないコマンドを実行させないようにする方法を示"
"します。その場合、それらコマンドに対する上書きターゲットを空にすることにより"
"行います。"

#. type: verbatim
#: dh:182
#, no-wrap
msgid ""
"\t# Commands not to run:\n"
"\toverride_dh_auto_test override_dh_compress override_dh_fixperms:\n"
"\n"
msgstr ""
"\t# 実行させたくないコマンド:\n"
"\toverride_dh_auto_test override_dh_compress override_dh_fixperms:\n"
"\n"

#. type: textblock
#: dh:185
msgid ""
"A long build process for a separate documentation package can be separated "
"out using architecture independent overrides.  These will be skipped when "
"running build-arch and binary-arch sequences."
msgstr ""
"ドキュメントパッケージを作成するのに時間がかかる場合があります。この場合、"
"アーキテクチャ非依存用の上書きターゲットを使って構築を分離することができま"
"す。こうすると、build-archやbinary-archを実行するとき、ドキュメントパッケージ"
"の構築が省略されます。"

#. type: verbatim
#: dh:193
#, no-wrap
msgid ""
"\toverride_dh_auto_build-indep:\n"
"\t\t$(MAKE) -C docs\n"
"\n"
msgstr ""
"\toverride_dh_auto_build-indep:\n"
"\t\t$(MAKE) -C docs\n"
"\n"

#. type: verbatim
#: dh:196
#, no-wrap
msgid ""
"\t# No tests needed for docs\n"
"\toverride_dh_auto_test-indep:\n"
"\n"
msgstr ""
"\t# docsターゲット実行時はテストは不要\n"
"\toverride_dh_auto_test-indep:\n"
"\n"

#. type: verbatim
#: dh:199
#, no-wrap
msgid ""
"\toverride_dh_auto_install-indep:\n"
"\t\t$(MAKE) -C docs install\n"
"\n"
msgstr ""
"\toverride_dh_auto_install-indep:\n"
"\t\t$(MAKE) -C docs install\n"
"\n"

#. type: textblock
#: dh:202
msgid ""
"Adding to the example above, suppose you need to chmod a file, but only when "
"building the architecture dependent package, as it's not present when "
"building only documentation."
msgstr ""
"上の例に加え、ファイルにchmodを発行する必要があるとします。この時、アーキテク"
"チャ依存パッケージを構築する際にのみ実行してほしくて、代わりに文章パッケージ"
"を構築する時には実行して欲しくないような時に記載すべき内容は以下のとおりで"
"す。"

#. type: verbatim
#: dh:206
#, no-wrap
msgid ""
"\toverride_dh_fixperms-arch:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""
"\toverride_dh_fixperms-arch:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"

#. type: =head1
#: dh:210
msgid "INTERNALS"
msgstr "内部動作"

#. type: textblock
#: dh:212
msgid ""
"If you're curious about B<dh>'s internals, here's how it works under the "
"hood."
msgstr ""
"B<dh>の内部動作に興味がある人向けに、以下に内部でどう動作しているのかを記載し"
"ます。"

#. type: textblock
#: dh:214
msgid ""
"Each debhelper command will record when it's successfully run in F<debian/"
"package.debhelper.log>. (Which B<dh_clean> deletes.) So B<dh> can tell which "
"commands have already been run, for which packages, and skip running those "
"commands again."
msgstr ""
"debhelperコマンドはF<debian/package.debhelper.log>に実行がうまく行ったものを"
"記録します（B<dh_clean>により消去されますが。）B<dh>により、すでにどんなコマ"
"ンドが実行されたか、あるいは、どんなパッケージに対して実行されたか、何のコマ"
"ンドを再びスキップすればよいのかを知る事ができます。"

#. type: textblock
#: dh:219
msgid ""
"Each time B<dh> is run, it examines the log, and finds the last logged "
"command that is in the specified sequence. It then continues with the next "
"command in the sequence. The B<--until>, B<--before>, B<--after>, and B<--"
"remaining> options can override this behavior."
msgstr ""
"B<dh>が動作すると、ログを検査し、指定された一連の処理にてどんなコマンドが最後"
"に実行されたと記録されているかを調べます。そして、次に実行すべきコマンドを実"
"行します。 B<--until>、B<--before>、B<--after>、B<--remaining>オプションによ"
"り、この振る舞いを変更できます。"

#. type: textblock
#: dh:224
msgid ""
"A sequence can also run dependent targets in debian/rules.  For example, the "
"\"binary\" sequence runs the \"install\" target."
msgstr ""
"dhに処理の流れの名前を指定することにより、debian/rulesに記載した依存関係にあ"
"るターゲットも実行されます。例えば、\"binary\"という処理の流れを指定する"
"と、\"install\"ターゲットも実行されます。"

#. type: textblock
#: dh:227
msgid ""
"B<dh> uses the B<DH_INTERNAL_OPTIONS> environment variable to pass "
"information through to debhelper commands that are run inside override "
"targets. The contents (and indeed, existence) of this environment variable, "
"as the name might suggest, is subject to change at any time."
msgstr ""
"B<dh>は、B<DH_INTERNAL_OPTIONS> 環境変数をチェックし、上書き用ターゲットの中"
"で実行されるdebhelperコマンドに情報を引き渡します。この環境変数に記載されてい"
"る内容（実際には、環境変数が存在していると）、その環境変数の名前が示唆すると"
"おり、いつでもdebhelperコマンドの動作に影響を与えます。"

#. type: textblock
#: dh:232
msgid ""
"Commands in the B<build-indep>, B<install-indep> and B<binary-indep> "
"sequences are passed the B<-i> option to ensure they only work on "
"architecture independent packages, and commands in the B<build-arch>, "
"B<install-arch> and B<binary-arch> sequences are passed the B<-a> option to "
"ensure they only work on architecture dependent packages."
msgstr ""
"B<build-indep>、B<install-indep>、B<binary-indep>の一連の処理に記載されている"
"コマンドには、アーキテクチャ非依存パッケージを構築する時にだけ確実に作用する"
"ようにB<-i>オプションを使って情報が引き渡されます。B<build-arch>、B<install-"
"arch>、B<binary-arch>の一連の処理に対しては、B<-a>にて引き渡され、アーキテク"
"チャ依存パッケージにのみ確実に作用するように動作します。 "

#. type: =head1
#: dh:238
msgid "DEPRECATED OPTIONS"
msgstr "廃止されたオプション"

#. type: textblock
#: dh:240
msgid ""
"The following options are deprecated. It's much better to use override "
"targets instead."
msgstr ""
"以下のオプションは廃止されました。代わりに上書きターゲットを使う事を強く推奨"
"します。"

#. type: =item
#: dh:245
msgid "B<--until> I<cmd>"
msgstr "B<--until> I<cmd>"

#. type: textblock
#: dh:247
msgid "Run commands in the sequence until and including I<cmd>, then stop."
msgstr ""
"処理中、I<cmd>で指定されたコマンドに遭遇するまで実行し、最後にI<cmd>を実行し"
"て停止します。"

#. type: =item
#: dh:249
msgid "B<--before> I<cmd>"
msgstr "B<--before> I<cmd>"

#. type: textblock
#: dh:251
msgid "Run commands in the sequence before I<cmd>, then stop."
msgstr ""
"処理中、I<cmd>で指定されたコマンドに遭遇するまで実行し、最後にI<cmd>を実行せ"
"ずに停止します。"

#. type: =item
#: dh:253
msgid "B<--after> I<cmd>"
msgstr "B<--after> I<cmd>"

#. type: textblock
#: dh:255
msgid "Run commands in the sequence that come after I<cmd>."
msgstr "I<cmd>で指定されたコマンドに続いてコマンドを実行します。"

#. type: =item
#: dh:257
msgid "B<--remaining>"
msgstr "B<--remaining>"

#. type: textblock
#: dh:259
msgid "Run all commands in the sequence that have yet to be run."
msgstr "一連の処理のうち、未だ実行していないコマンドを実行します。"

#. type: textblock
#: dh:263
msgid ""
"In the above options, I<cmd> can be a full name of a debhelper command, or a "
"substring. It'll first search for a command in the sequence exactly matching "
"the name, to avoid any ambiguity. If there are multiple substring matches, "
"the last one in the sequence will be used."
msgstr ""
"以上のオプションでは、I<cmd> はdebhelperコマンドの完全な名前を指定するか、そ"
"の一部の名前を指定することになります。あいまいさを排除するため、最初に完全な"
"名前で検索が行われます。名前が名前の一部で指定の場合に、複数の候補が見つかる"
"ことがありますが、その場合は処理の一連の流れの中で一番最後に見つかったものが"
"利用されます。"

#. type: textblock
#: dh:895 dh_auto_build:49 dh_auto_clean:52 dh_auto_configure:54
#: dh_auto_install:87 dh_auto_test:61 dh_builddeb:126 dh_clean:144
#: dh_compress:208 dh_fixperms:129 dh_gconf:101 dh_gencontrol:84
#: dh_install:260 dh_installcatalogs:118 dh_installchangelogs:173
#: dh_installcron:79 dh_installdeb:146 dh_installdebconf:128 dh_installdirs:88
#: dh_installdocs:309 dh_installemacsen:126 dh_installexamples:108
#: dh_installifupdown:71 dh_installinfo:79 dh_installinit:258
#: dh_installlogcheck:80 dh_installlogrotate:52 dh_installman:263
#: dh_installmanpages:199 dh_installmime:97 dh_installmodules:126
#: dh_installpam:61 dh_installppp:67 dh_installudev:117 dh_installwm:110
#: dh_installxfonts:89 dh_link:230 dh_listpackages:32 dh_makeshlibs:260
#: dh_md5sums:92 dh_movefiles:172 dh_perl:148 dh_prep:62 dh_python:282
#: dh_strip:244 dh_suidregister:119 dh_testdir:46 dh_testroot:29
#: dh_undocumented:30 dh_usrlocal:116
msgid "L<debhelper(7)>"
msgstr "L<debhelper(7)>"

#. type: textblock
#: dh:897 dh_auto_build:51 dh_auto_clean:54 dh_auto_configure:56
#: dh_auto_install:89 dh_auto_test:63 dh_bugfiles:128 dh_builddeb:128
#: dh_clean:146 dh_compress:210 dh_desktop:35 dh_fixperms:131 dh_gconf:103
#: dh_gencontrol:86 dh_icons:69 dh_install:262 dh_installchangelogs:175
#: dh_installcron:81 dh_installdeb:148 dh_installdebconf:130 dh_installdirs:90
#: dh_installdocs:311 dh_installemacsen:128 dh_installexamples:110
#: dh_installifupdown:73 dh_installinfo:81 dh_installinit:260
#: dh_installlogrotate:54 dh_installman:265 dh_installmanpages:201
#: dh_installmenu:93 dh_installmime:99 dh_installmodules:128 dh_installpam:63
#: dh_installppp:69 dh_installudev:119 dh_installwm:112 dh_installxfonts:91
#: dh_link:232 dh_lintian:61 dh_listpackages:34 dh_makeshlibs:262
#: dh_md5sums:94 dh_movefiles:174 dh_perl:150 dh_prep:64 dh_python:284
#: dh_scrollkeeper:32 dh_shlibdeps:175 dh_strip:246 dh_suidregister:121
#: dh_testdir:48 dh_testroot:31 dh_undocumented:32 dh_usrlocal:118
msgid "This program is a part of debhelper."
msgstr "このプログラムはdebhelperの一部です。"

#. type: textblock
#: dh_auto_build:5
msgid "dh_auto_build - automatically builds a package"
msgstr "dh_auto_build - パッケージの機械的な構築を行います"

#. type: textblock
#: dh_auto_build:14
msgid ""
"B<dh_auto_build> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_build> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_build:18
msgid ""
"B<dh_auto_build> is a debhelper program that tries to automatically build a "
"package. It does so by running the appropriate command for the build system "
"it detects the package uses. For example, if a F<Makefile> is found, this is "
"done by running B<make> (or B<MAKE>, if the environment variable is set). If "
"there's a F<setup.py>, or F<Build.PL>, it is run to build the package."
msgstr ""
"B<dh_auto_build>は、パッケージを機械的に構築しようとするdebhelperプログラムと"
"なります。パッケージが利用していると判断したビルドシステムの適切なコマンドを"
"実行することにより構築を行います。例えばもしF<Makefile>が見つかるような事があ"
"れば、B<make>を実行することにより処理を行います（あるいは、B<MAKE>環境変数が"
"設定されている場合です。）F<setup.py>が存在する、あるいはF<Build.PL>が存在す"
"れば、これらファイルが実行されます。"

#. type: textblock
#: dh_auto_build:24
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_build> at all, and just run the "
"build process manually."
msgstr ""
"本コマンドは約90%のパッケージについて処理が行えるようにしています。もしうまく"
"動作しないようなパッケージに遭遇した場合は、B<dh_auto_build>を完全に省略し"
"て、手動で構築手続きを指定するようにしてください。"

#. type: textblock
#: dh_auto_build:30 dh_auto_clean:32 dh_auto_configure:33 dh_auto_install:45
#: dh_auto_test:33
msgid ""
"See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build "
"system selection and control options."
msgstr ""
"L<debhelper(7)/B<ビルドシステム用オプション>>には、よく使われるビルドシステム"
"と、制御オプションが列挙されています。"

#. type: =item
#: dh_auto_build:35 dh_auto_clean:37 dh_auto_configure:38 dh_auto_install:56
#: dh_auto_test:38 dh_builddeb:38 dh_gencontrol:30 dh_installdebconf:69
#: dh_installinit:93 dh_makeshlibs:91 dh_shlibdeps:37
msgid "B<--> I<params>"
msgstr "B<--> I<params>"

#. type: textblock
#: dh_auto_build:37
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_build> usually passes."
msgstr ""
"I<params>をB<dh_autobuild>にて実行しようとしているプログラムへ引き渡します。"
"このB<-->の後に指定したパラメタが引き渡されます。"

#. type: textblock
#: dh_auto_clean:5
msgid "dh_auto_clean - automatically cleans up after a build"
msgstr "dh_auto_clean - 構築後、機械的にビルドディレクトリを消去します"

#. type: textblock
#: dh_auto_clean:15
msgid ""
"B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_clean:19
msgid ""
"B<dh_auto_clean> is a debhelper program that tries to automatically clean up "
"after a package build. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<distclean>, B<realclean>, or B<clean> "
"target, then this is done by running B<make> (or B<MAKE>, if the environment "
"variable is set). If there is a F<setup.py> or F<Build.PL>, it is run to "
"clean the package."
msgstr ""
"B<dh_auto_clean>はパッケージが構築完了後に機械的にディレクトリを消去しようと"
"するdebhelprプログラムです。このプログラムはパッケージの構築に必要なビルドシ"
"ステムを割り出し、こちらに適したコマンドを実行する事により消去を行います。例"
"えば、F<Makefile>が存在し、かつ、そのファイルの中にB<distclean>、"
"B<realclean>、B<clean>ターゲットが存在する場合、B<make>を起動することにより消"
"去を行います（あるいは、B<MAKE>環境変数が設定されている時も同様です。）もし"
"F<setup.py>や、F<Build.PL>が存在するのであれば、これらを起動してパッケージビ"
"ルドディレクトリを消去します。"

#. type: textblock
#: dh_auto_clean:26
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong clean target, you're encouraged to skip using "
"B<dh_auto_clean> at all, and just run B<make clean> manually."
msgstr ""
"本コマンドは約90%のパッケージにて動作するように作られています。もし、うまく動"
"作しないようなパッケージに遭遇した場合、間違ったcleanターゲットを使おうとして"
"しまうような場合、B<dh_auto_clean> を使うのを止め、B<makeclean>を自分で記載し"
"て呼び出すことを勧めます。"

#. type: textblock
#: dh_auto_clean:39
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_clean> usually passes."
msgstr ""
"I<params>を起動するプログラムに引き渡すには、B<dh_auto_clean>に通常指定するパ"
"ラメタの後に、B<-->を指定してI<params>を指定するように願います。"

#. type: textblock
#: dh_auto_configure:5
msgid "dh_auto_configure - automatically configure a package prior to building"
msgstr "dh_auto_configure - パッケージ構築前に機械的にconfigure行います"

#. type: textblock
#: dh_auto_configure:14
msgid ""
"B<dh_auto_configure> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_configure> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_configure:18
msgid ""
"B<dh_auto_configure> is a debhelper program that tries to automatically "
"configure a package prior to building. It does so by running the appropriate "
"command for the build system it detects the package uses.  For example, it "
"looks for and runs a F<./configure> script, F<Makefile.PL>, F<Build.PL>, or "
"F<cmake>. A standard set of parameters is determined and passed to the "
"program that is run. Some build systems, such as make, do not need a "
"configure step; for these B<dh_auto_configure> will exit without doing "
"anything."
msgstr ""
"B<dh_auto_configure>はパッケージを構築する前に機械的にconfigureを実行する"
"debhelperプログラムとなります。このプログラムはパッケージの構築に必要なビルド"
"システムを割り出し、こちらに適したコマンドを実行して設定を行います。例えば、"
"F<./configure>スクリプト、F<Makefile.PL>、F<Build.PL>、F<cmake>を探し、これら"
"が存在するようであれば実行します。一連の標準のパラメタが決定され、起動するプ"
"ログラムに引き渡されます。なお、makeのようなビルドシステムの場合、事前に"
"configureの起動が不要の場合があります。この場合B<dh_auto_configure>は何もせず"
"に終了します。"

#. type: textblock
#: dh_auto_configure:27
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_configure> at all, and just run "
"F<./configure> or its equivalent manually."
msgstr ""
"本コマンドは90%のパッケージで動作するように作られています。もし、動作しないよ"
"うなパッケージがあった場合は、B<dh_auto_configure>を利用するのを完全に省略"
"し、代わりに、F<./configure>や、同等の動作を行うコマンドを自分で記述願いま"
"す。"

#. type: textblock
#: dh_auto_configure:40
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_configure> usually passes. For example:"
msgstr ""
"I<params>を起動するプログラムに引き渡すには、B<dh_auto_configure>に通常指定す"
"るパラメタの後に、B<-->を指定し、I<params>を指定するように願います。以下に例"
"を示します："

#. type: verbatim
#: dh_auto_configure:43
#, no-wrap
msgid ""
"  dh_auto_configure -- --with-foo --enable-bar\n"
"\n"
msgstr ""
"  dh_auto_configure -- --with-foo --enable-bar\n"
"\n"

#. type: textblock
#: dh_auto_install:5
msgid "dh_auto_install - automatically runs make install or similar"
msgstr "dh_auto_install - make installや同様のコマンドを機械的に実行します"

#. type: textblock
#: dh_auto_install:17
msgid ""
"B<dh_auto_install> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_install> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_install:21
msgid ""
"B<dh_auto_install> is a debhelper program that tries to automatically "
"install built files. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<install> target, then this is done by "
"running B<make> (or B<MAKE>, if the environment variable is set). If there "
"is a F<setup.py> or F<Build.PL>, it is used. Note that the Ant build system "
"does not support installation, so B<dh_auto_install> will not install files "
"built using Ant."
msgstr ""
"B<dh_auto_install>プログラムは、構築済みのファイルを機械的にインストールしよ"
"うとするdebhelperプログラムとなります。パッケージが利用するビルドシステムを判"
"定し、適切なコマンドを発行する事によりインストールを実行します。例えば、"
"F<Makefile>が存在し、中にB<install>ターゲットが存在するようであれば、B<make>"
"を実行してインストールを行います（あるいは、B<MAKE>環境変数が設定されている場"
"合B<make>を実行します。）もし、F<setup.py>やF<Build.PL>が存在すれば、こちらが"
"利用されます。なお、Antビルドシステムはインストールに関してサポートされませ"
"ん。そのため、B<dh_auto_install>はAntを使って構築したファイルをインストールし"
"ないことに留意してください。"

#. type: textblock
#: dh_auto_install:29
msgid ""
"Unless B<--destdir> option is specified, the files are installed into debian/"
"I<package>/ if there is only one binary package. In the multiple binary "
"package case, the files are instead installed into F<debian/tmp/>, and "
"should be moved from there to the appropriate package build directory using "
"L<dh_install(1)>."
msgstr ""
"B<--destdir>オプションを指定しない場合でかつ、単一のバイナリのみ生成する場"
"合、ファイルはdebian/I<package>/以下にインストールされます。また、B<--"
"destdir>オプションを指定しない場合でかつ、複数のバイナリパッケージを生成する"
"場合は、代わりにF<debian/tmp/>以下にインストールされます。この場合、生成した"
"ファイルは、L<dh_install(1)>を使って適切なパッケージビルドディレクトリに移動"
"させなければなりません。"

#. type: textblock
#: dh_auto_install:35
msgid ""
"B<DESTDIR> is used to tell make where to install the files.  If the Makefile "
"was generated by MakeMaker from a F<Makefile.PL>, it will automatically set "
"B<PREFIX=/usr> too, since such Makefiles need that."
msgstr ""
"B<DESTDIR>は生成したファイルをどこに置くべきかを指定する時に利用します。もし"
"MakefileがF<Makefile.PL>を使ってMakeMakerから生成される場合、生成された"
"Makefileの為に、さらに機械的にB<PREFIX=/usr>がインストールディレクトリとして"
"指定されます。"

#. type: textblock
#: dh_auto_install:39
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong install target, you're encouraged to skip using "
"B<dh_auto_install> at all, and just run make install manually."
msgstr ""
"このコマンドはほぼ90%のパッケージに対してうまく動作するように設計されていま"
"す。もしうまく動かないようなパッケージを相手にする場合、あるいは、間違ったイ"
"ンストールターゲットを使ってしまうような場合には、B<dh_auto_install> を完全に"
"省略し、逐次手続きを指定してインストールが行われるように記述する必要がありま"
"す。"

#. type: =item
#: dh_auto_install:50 dh_builddeb:28
msgid "B<--destdir=>I<directory>"
msgstr "B<--destdir=>I<directory>"

#. type: textblock
#: dh_auto_install:52
msgid ""
"Install files into the specified I<directory>. If this option is not "
"specified, destination directory is determined automatically as described in "
"the L</B<DESCRIPTION>> section."
msgstr ""
"指定したI<directory>のディレクトリ以下にファイルをインストールします。このオ"
"プションを指定しないと、インストール先ディレクトリはL</B<説明>>章で説明するよ"
"うな場所になるように機械的に指定されます。"

#. type: textblock
#: dh_auto_install:58
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_install> usually passes."
msgstr ""
"I<params>を起動するプログラムに引き渡すには、B<dh_auto_install>に通常指定する"
"パラメタの後に、B<-->を指定し、I<param>を指定するように願います。"

#. type: textblock
#: dh_auto_test:5
msgid "dh_auto_test - automatically runs a package's test suites"
msgstr "dh_auto_test - パッケージに一揃いのテストを機械的に実行します"

#. type: textblock
#: dh_auto_test:15
msgid ""
"B<dh_auto_test> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_test> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_test:19
msgid ""
"B<dh_auto_test> is a debhelper program that tries to automatically run a "
"package's test suite. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a Makefile "
"and it contains a B<test> or B<check> target, then this is done by running "
"B<make> (or B<MAKE>, if the environment variable is set). If the test suite "
"fails, the command will exit nonzero. If there's no test suite, it will exit "
"zero without doing anything."
msgstr ""
"B<dh_auto_test>はパッケージ付属のテストの一揃いを機械的に実行しようとするプロ"
"グラムです。パッケージがどのようなビルドシステムを必要とするかを判定し、適切"
"なコマンドを実行する事によりこちらを行います。例えば、もしMakefileが存在し、"
"B<test>やB<check>ターゲットが存在する場合は、B<make>を実行します（環境変数"
"B<MAKE>が設定されている場合も同様です。）もし、一揃いのテストが失敗に終わった"
"場合、本コマンドはOSへのコマンドのステータスとして、非ゼロを返却して終了しま"
"す。もし、テスト用のターゲットが全く存在しなければ、何もせずゼロを返却して終"
"了します。"

#. type: textblock
#: dh_auto_test:27
msgid ""
"This is intended to work for about 90% of packages with a test suite. If it "
"doesn't work, you're encouraged to skip using B<dh_auto_test> at all, and "
"just run the test suite manually."
msgstr ""
"このコマンドは一揃いのテストを含む90%のパッケージのに対して、動作するように作"
"られています。もしうまく動作しないようであれば、B<dh_auto_test>を完全に省略"
"し、一揃いのテストを手動で実行するように記載願います。"

#. type: textblock
#: dh_auto_test:40
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_test> usually passes."
msgstr ""
"I<params>を本コマンドが起動するコマンドに対して渡したければ、B<dh_auto_test>"
"に通常指定するパラメタの後に、B<-->を指定し、さらにI<params>を指定願います。"

#. type: textblock
#: dh_auto_test:47
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nocheck>, no "
"tests will be performed."
msgstr ""
"B<DEB_BUILD_OPTIONS>環境変数にB<nocheck>が指定されていれば、B<dh_auto_test>は"
"予定されているテスト全部を実行しません。"

#. type: textblock
#: dh_bugfiles:5
msgid ""
"dh_bugfiles - install bug reporting customization files into package build "
"directories"
msgstr ""
"dh_bugfiles - パッケージビルドディレクトリに、バグレポートを変更する為のファ"
"イルをインストールします"

#. type: textblock
#: dh_bugfiles:14
msgid "B<dh_bugfiles> [B<-A>] [S<I<debhelper options>>]"
msgstr "B<dh_bugfiles> [B<-A>] [S<I<debhelper options>>]"

#. type: textblock
#: dh_bugfiles:18
msgid ""
"B<dh_bugfiles> is a debhelper program that is responsible for installing bug "
"reporting customization files (bug scripts and/or bug control files and/or "
"presubj files) into package build directories."
msgstr ""
"B<dh_bugfiles>は、バグレポートの個別変更用ファイル（バグスクリプト、バグコン"
"トロールファイル、バグレポートの際あらかじめ指定した表題を指定するファイル）"
"をパッケージビルドディレクトリへインストールする役目のdebhelperコマンドとなり"
"ます。"

#. type: =head1
#: dh_bugfiles:22 dh_clean:31 dh_compress:31 dh_gconf:23 dh_install:38
#: dh_installcatalogs:35 dh_installchangelogs:32 dh_installcron:21
#: dh_installdeb:22 dh_installdebconf:34 dh_installdirs:21 dh_installdocs:21
#: dh_installemacsen:27 dh_installexamples:22 dh_installifupdown:22
#: dh_installinfo:21 dh_installinit:26 dh_installlogcheck:21 dh_installman:51
#: dh_installmenu:25 dh_installmime:25 dh_installmodules:29 dh_installpam:21
#: dh_installppp:21 dh_installudev:25 dh_installwm:24 dh_link:41 dh_lintian:21
#: dh_makeshlibs:29 dh_movefiles:26
msgid "FILES"
msgstr "ファイル群"

#. type: =item
#: dh_bugfiles:26
msgid "debian/I<package>.bug-script"
msgstr "debian/I<package>.bug-script"

#. type: textblock
#: dh_bugfiles:28
msgid ""
"This is the script to be run by the bug reporting program for generating a "
"bug report template. This file is installed as F<usr/share/bug/package> in "
"the package build directory if no other types of bug reporting customization "
"files are going to be installed for the package in question. Otherwise, this "
"file is installed as F<usr/share/bug/package/script>. Finally, the installed "
"script is given execute permissions."
msgstr ""
"このファイルは、バグレポートの雛形を生成するバグ報告プログラムによって実行さ"
"れるスクリプトファイルとなります。処理対象のパッケージについて、他にバグレ"
"ポート変更用ファイルがインストールされない場合、このスクリプトファイルがパッ"
"ケージビルドディレクトリ以下のF<usr/share/bug/package>としてインストールされ"
"ます。インストールされるべきバグレポート変更用ファイルが他にある場合、このス"
"クリプトファイルはF<usr/share/bug/package/script>としてインストールされます。"
"最後に、インストールされたファイルには実行権限が付与されます。"

#. type: =item
#: dh_bugfiles:35
msgid "debian/I<package>.bug-control"
msgstr "debian/I<package>.bug-control"

#. type: textblock
#: dh_bugfiles:37
msgid ""
"It is the bug control file containing some directions for the bug reporting "
"tool. This file is installed as F<usr/share/bug/package/control> in the "
"package build directory."
msgstr ""
"バグレポート用ツールのディレクトリ群の名前が記載されるバグコントロールファイ"
"ルとなります。このファイルは、パッケージビルドディレクトリへF<usr/share/bug/"
"package/control> としてインストールされます。"

#. type: =item
#: dh_bugfiles:41
msgid "debian/I<package>.bug-presubj"
msgstr "debian/I<package>.bug-presubj"

#. type: textblock
#: dh_bugfiles:43
msgid ""
"The contents of this file are displayed to the user by the bug reporting "
"tool before allowing the user to write a bug report on the package to the "
"Debian Bug Tracking System. This file is installed as F<usr/share/bug/"
"package/presubj> in the package build directory."
msgstr ""
"ユーザにDebian Bug Tracking Systemへバグレポートを記入させる前に、本ファイル"
"の中身がバグレポートツールにて表示されます。このファイルはF<usr/share/bug/"
"package/presubj>としてパッケージビルドディレクトリ以下にインストールされま"
"す。"

#. type: textblock
#: dh_bugfiles:56
msgid ""
"Install F<debian/bug-*> files to ALL packages acted on when respective "
"F<debian/package.bug-*> files do not exist. Normally, F<debian/bug-*> will "
"be installed to the first package only."
msgstr ""
"F<debian/package.bug-*> が存在しない場合、構築される全パッケージにF<debian/"
"bug-*>がインストールされます。通常なら、F<debian/bug-*>はF<debian/control>に"
"記載されている、最初のパッケージへのみインストールされるものです。"

#. type: textblock
#: dh_bugfiles:124
msgid "F</usr/share/doc/reportbug/README.developers.gz>"
msgstr "F</usr/share/doc/reportbug/README.developers.gz>"

#. type: textblock
#: dh_bugfiles:126 dh_lintian:59
msgid "L<debhelper(1)>"
msgstr "L<debhelper(1)>"

#. type: textblock
#: dh_bugfiles:132
msgid "Modestas Vainius <modestas@vainius.eu>"
msgstr "Modestas Vainius <modestas@vainius.eu>"

#. type: textblock
#: dh_builddeb:5
msgid "dh_builddeb - build Debian binary packages"
msgstr "dh_builddeb - Debianバイナリパッケージの構築を行います"

#. type: textblock
#: dh_builddeb:14
msgid ""
"B<dh_builddeb> [S<I<debhelper options>>] [B<--destdir=>I<directory>] [B<--"
"filename=>I<name>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_builddeb> [S<I<debhelper options>>] [B<--destdir=>I<directory>] [B<--"
"filename=>I<name>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_builddeb:18
msgid ""
"B<dh_builddeb> simply calls L<dpkg-deb(1)> to build a Debian package or "
"packages."
msgstr ""
"B<dh_builddeb>は、Debianパッケージもしくはパッケージ群を構築するためL<dpkg-"
"deb(1)>を単に呼び出すコマンドです。"

#. type: textblock
#: dh_builddeb:21
msgid ""
"It supports building multiple binary packages in parallel, when enabled by "
"DEB_BUILD_OPTIONS."
msgstr ""
"本コマンドは、DEB_BUILD_OPTIONS環境変数に並列実行のオプションを設定する"
"ことにより、複数のバイナリを並行して構築することができます。"

#. type: textblock
#: dh_builddeb:30
msgid ""
"Use this if you want the generated F<.deb> files to be put in a directory "
"other than the default of \"F<..>\"."
msgstr ""
"もし指定無き場合に利用されるディレクトリである\"F<..>\"以外の場所に、生成され"
"たF<.deb>ファイル群を置きたい場合、本オプションを使ってください。"

#. type: =item
#: dh_builddeb:33
msgid "B<--filename=>I<name>"
msgstr "B<--filename=>I<name>"

#. type: textblock
#: dh_builddeb:35
msgid ""
"Use this if you want to force the generated .deb file to have a particular "
"file name. Does not work well if more than one .deb is generated!"
msgstr ""
"生成する.debファイルに特定のファイル名をなんとかして指定したければ、このオプ"
"ションを利用してください。しかしながら、複数の.debファイルが生成される場合に"
"は、うまく動作しません!"

#. type: textblock
#: dh_builddeb:40
msgid "Pass I<params> to L<dpkg-deb(1)> when it is used to build the package."
msgstr "パッケージを構築する時に、I<params>をL<dpkg-deb(1)>へ引き渡します。"

#. type: =item
#: dh_builddeb:43
msgid "B<-u>I<params>"
msgstr "B<-u>I<params>"

#. type: textblock
#: dh_builddeb:45
msgid ""
"This is another way to pass I<params> to L<dpkg-deb(1)>.  It is deprecated; "
"use B<--> instead."
msgstr ""
"これはI<params>をL<dpkg-deb(1)>へ引き渡す為の別の手段となります。しかしなが"
"ら、本オプションは廃止されています。ですので、代わりにB<-->を使ってください。"

#. type: textblock
#: dh_clean:5
msgid "dh_clean - clean up package build directories"
msgstr "dh_clean - パッケージビルドディレクトリを消去します"

#. type: textblock
#: dh_clean:14
msgid ""
"B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] "
"[S<I<file> ...>]"

#. type: verbatim
#: dh_clean:18
#, no-wrap
msgid ""
"B<dh_clean> is a debhelper program that is responsible for cleaning up after a\n"
"package is built. It removes the package build directories, and removes some\n"
"other files including F<debian/files>, and any detritus left behind by other\n"
"debhelper commands. It also removes common files that should not appear in a\n"
"Debian diff:\n"
"  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp\n"
"\n"
msgstr ""
"B<dh_clean>はパッケージ構築後にディレクトリを消去する役目のコマンドです。\n"
"これはパッケージビルドディレクトリや、F<debian/files>に含まれている\n"
"いくつかのファイル、他のdebhelperコマンドが残してしまったゴミファイルを\n"
"取り除きます。以下のような、Debian diffに含まれてはならないようなありふれた\n"
"ファイルも取り除きます。\n"
"  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp\n"
"\n"

#. type: textblock
#: dh_clean:25
msgid ""
"It does not run \"make clean\" to clean up after the build process. Use "
"L<dh_auto_clean(1)> to do things like that."
msgstr ""
"本コマンドは構築が完了後、消去をするために\"make clean\"を実行しませ"
"ん。\"make clean\"を実行するような事がしたければ、L<dh_auto_clean(1)>を利用し"
"てください。"

#. type: textblock
#: dh_clean:28
msgid ""
"B<dh_clean> (or \"B<dh clean>\") should be the last debhelper command run in "
"the B<clean> target in F<debian/rules>."
msgstr ""
"F<debian/rules>のB<clean>ターゲットで実行されるコマンドの最後にB<dh_clean>(あ"
"るいは\"B<dh clean>\")を指定願います。"

#. type: =item
#: dh_clean:35
msgid "F<debian/clean>"
msgstr "F<debian/clean>"

#. type: textblock
#: dh_clean:37
msgid "Can list other files to be removed."
msgstr "消去してもよいファイルのリスト"

#. type: =item
#: dh_clean:45 dh_installchangelogs:60
msgid "B<-k>, B<--keep>"
msgstr "B<-k>, B<--keep>"

#. type: textblock
#: dh_clean:47
msgid "This is deprecated, use L<dh_prep(1)> instead."
msgstr "これは廃止されています。代わりにL<dh_prep(1)>を利用願います。"

#. type: =item
#: dh_clean:49
msgid "B<-d>, B<--dirs-only>"
msgstr "B<-d>, B<--dirs-only>"

#. type: textblock
#: dh_clean:51
msgid ""
"Only clean the package build directories, do not clean up any other files at "
"all."
msgstr ""
"パッケージビルドディレクトリを削除するだけで、他のファイルは一切手をつけませ"
"ん。"

#. type: =item
#: dh_clean:54 dh_prep:30
msgid "B<-X>I<item> B<--exclude=>I<item>"
msgstr "B<-X>I<item> B<--exclude=>I<item>"

#. type: textblock
#: dh_clean:56
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""
"通常は消されるはずのファイルであっても、I<item>をファイル名の一部として含むも"
"の全部を消去候補から除外します。本オプションを何度も指定することにより、除外"
"候補を複数指定することが可能です。"

#. type: =item
#: dh_clean:60 dh_compress:64 dh_installdocs:98 dh_installexamples:46
#: dh_installinfo:40 dh_installmanpages:44 dh_movefiles:55 dh_testdir:27
msgid "I<file> ..."
msgstr "I<file> ..."

#. type: textblock
#: dh_clean:62
msgid "Delete these I<file>s too."
msgstr "これらI<file>も消去します。"

#. type: textblock
#: dh_compress:5
msgid ""
"dh_compress - compress files and fix symlinks in package build directories"
msgstr ""
"dh_compress - パッケージビルドディレクトリにてファイルの圧縮、シンボリックリ"
"ンクの修正を行います"

#. type: textblock
#: dh_compress:15
msgid ""
"B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] "
"[S<I<file> ...>]"

#. type: textblock
#: dh_compress:19
msgid ""
"B<dh_compress> is a debhelper program that is responsible for compressing "
"the files in package build directories, and makes sure that any symlinks "
"that pointed to the files before they were compressed are updated to point "
"to the new files."
msgstr ""
"B<dh_compress>はパッケージビルドディレクトリにあるファイルを圧縮する役割を担"
"うdebhelperプログラムです。また、圧縮されるファイルをシンボリックリンクが指し"
"示していた場合、圧縮後も正しく指すようにシンボリックリンクを更新します。"

#. type: textblock
#: dh_compress:24
msgid ""
"By default, B<dh_compress> compresses files that Debian policy mandates "
"should be compressed, namely all files in F<usr/share/info>, F<usr/share/"
"man>, files in F<usr/share/doc> that are larger than 4k in size, (except the "
"F<copyright> file, F<.html> and other web files, image files, and files that "
"appear to be already compressed based on their extensions), and all "
"F<changelog> files. Plus PCF fonts underneath F<usr/share/fonts/X11/>"
msgstr ""
"特に指定無き場合、B<dh_compress> はDebianポリシーマニュアルの規則に従い圧縮す"
"べきとされるファイルを圧縮します。この場合の圧縮対象のファイルの例としては、"
"F<usr/share/info>、F<usr/share/man>の以下の全ファイル、F<usr/share/doc>以下に"
"ある4kbytesを越えるサイズの全ファイル（但し、F<copyright>、F<.html>ファイル、"
"画像ファイル、また拡張子からすでに圧縮されていることがすでに明らかなファイル"
"は対象から除外されます）、全F<changelog>ファイルとなります。加えてF<usr/"
"share/fonts/X11/>以下のPCFフォントファイルも圧縮対象となります。"

#. type: =item
#: dh_compress:35
msgid "debian/I<package>.compress"
msgstr "debian/I<package>.compress"

#. type: textblock
#: dh_compress:37
msgid "These files are deprecated."
msgstr "このファイル群は廃止されました。"

#. type: textblock
#: dh_compress:39
msgid ""
"If this file exists, the default files are not compressed. Instead, the file "
"is ran as a shell script, and all filenames that the shell script outputs "
"will be compressed. The shell script will be run from inside the package "
"build directory. Note though that using B<-X> is a much better idea in "
"general; you should only use a F<debian/package.compress> file if you really "
"need to."
msgstr ""
"このファイルが存在すると、特に指定無き場合に圧縮対象となるファイルは、圧縮さ"
"れなくなります。代わりにこのファイルはシェルスクリプトとして起動され、シェル"
"スクリプトの実行結果として得られるファイル名が圧縮対象となります。このシェル"
"スクリプトはパッケージビルドディレクトリ以下で実行されます。とはいえ、注意し"
"て欲しいのは、通常の用途ではB<-X>の方が適しています。その為、F<debian/"
"package.compress>を使いたい場合は、本当に必要な時に限るべきです。"

#. type: textblock
#: dh_compress:54
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"compressed. For example, B<-X.tiff> will exclude TIFF files from "
"compression.  You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""
"ファイル名にF<item>が含まれると、このファイルは圧縮対象から除外されます。たと"
"えば、B<-X.tiff>を指定すると、TIFFファイルは圧縮されなくなります。また除外す"
"るものを複数指定するには、このオプションを複数並べることにより指定できます。"

#. type: textblock
#: dh_compress:61
msgid ""
"Compress all files specified by command line parameters in ALL packages "
"acted on."
msgstr ""
"処理対象となる全パッケージを対象に、コマンドラインパラメタで指定したファイル"
"全部を圧縮します。"

#. type: textblock
#: dh_compress:66
msgid "Add these files to the list of files to compress."
msgstr "これらファイルを圧縮対象のファイルとして指定します。"

#. type: =head1
#: dh_compress:70 dh_perl:61 dh_python:66 dh_strip:74 dh_usrlocal:55
msgid "CONFORMS TO"
msgstr "確認すべき事"

#. type: textblock
#: dh_compress:72
msgid "Debian policy, version 3.0"
msgstr "Debian policy, version 3.0"

#. type: textblock
#: dh_desktop:5
msgid "dh_desktop - deprecated no-op"
msgstr "dh_desktop - 廃止されており、なにもしません"

#. type: textblock
#: dh_desktop:14
msgid "B<dh_desktop> [S<I<debhelper options>>]"
msgstr "B<dh_desktop> [S<I<debhelper options>>]"

#. type: textblock
#: dh_desktop:18
msgid ""
"B<dh_desktop> was a debhelper program that registers F<.desktop> files.  "
"However, it no longer does anything, and is now deprecated."
msgstr ""
"B<dh_desktop> はF<.desktop>ファイルを登録するdebhelperプログラムでした。しか"
"しながら、もはや今では何もしないプログラムであり、廃止となりました。"

#. type: textblock
#: dh_desktop:21
msgid ""
"If a package ships F<desktop> files, they just need to be installed in the "
"correct location (F</usr/share/applications>) and they will be registered by "
"the appropriate tools for the corresponding desktop environments."
msgstr ""
"F<desktop>ファイルをパッケージが提供したい場合、単にこのファイルを正しい位置"
"(F</usr/share/applications>)にインストールし、このファイルが対象とするデスク"
"トップ環境の適切なツールを使って登録をすることになります。"

#. type: textblock
#: dh_desktop:33 dh_icons:67 dh_scrollkeeper:30
msgid "L<debhelper>"
msgstr "L<debhelper>"

#. type: textblock
#: dh_desktop:39 dh_scrollkeeper:36
msgid "Ross Burton <ross@burtonini.com>"
msgstr "Ross Burton <ross@burtonini.com>"

#. type: textblock
#: dh_fixperms:5
msgid "dh_fixperms - fix permissions of files in package build directories"
msgstr ""
"dh_fixperms - パッケージビルドディレクトリ以下でファイルの権限を修正します"

#. type: textblock
#: dh_fixperms:14
msgid "B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr "B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]"

#. type: textblock
#: dh_fixperms:18
msgid ""
"B<dh_fixperms> is a debhelper program that is responsible for setting the "
"permissions of files and directories in package build directories to a sane "
"state -- a state that complies with Debian policy."
msgstr ""
"B<dh_fixperms>はパッケージビルドディレクトリ配下でファイルとディレクトリの権"
"限を設定する役割のdebhelperプログラムです。また、設定される権限は正しいもの、"
"つまりは、Debianポリシーに従った形で設定されます。"

#. type: textblock
#: dh_fixperms:22
msgid ""
"B<dh_fixperms> makes all files in F<usr/share/doc> in the package build "
"directory (excluding files in the F<examples/> directory) be mode 644. It "
"also changes the permissions of all man pages to mode 644. It makes all "
"files be owned by root, and it removes group and other write permission from "
"all files. It removes execute permissions from any libraries, headers, Perl "
"modules, or desktop files that have it set. It makes all files in the "
"standard F<bin> and F<sbin> directories, F<usr/games/> and F<etc/init.d> "
"executable (since v4). Finally, it removes the setuid and setgid bits from "
"all files in the package."
msgstr ""
"B<dh_fixperms>はパッケージビルドディレクトリ以下のF<usr/share/doc>にあるすべ"
"てのファイル（それでもF<examples/>以下のファイルは除きます）を権限644に設定し"
"ます。また、すべてのmanページの権限も644に変更します。さらにこれらファイルの"
"所有者をrootに設定し、全てのファイルからgroup,othersに対する書き込み権限の除"
"去を行います。また、ライブラリ、ヘッダファイル、Perlのモジュール、desktopファ"
"イルにて、実行権限が付与されていればこの権限を取り除きます。F<bin>、F<sbin>、"
"F<usr/games/>、F<etc/init.d>ディレクトリ以下にあるファイルについては実行権限"
"を付与します（互換性レベルv4から利用できます。）最後に、パッケージ内の全ての"
"ファイルからsetuidとsetgidビットが付与されている場合はこれらビットを取り除き"
"ます。"

#. type: =item
#: dh_fixperms:35
msgid "B<-X>I<item>, B<--exclude> I<item>"
msgstr "B<-X>I<item>, B<--exclude> I<item>"

#. type: textblock
#: dh_fixperms:37
msgid ""
"Exclude files that contain I<item> anywhere in their filename from having "
"their permissions changed. You may use this option multiple times to build "
"up a list of things to exclude."
msgstr ""
"パーミッションの変更対象のファイルからI<item>をファイル名の一部に持つ物全部を"
"除外します。複数の除外を列挙したければ、本オプションを複数回指定することによ"
"り行います。"

#. type: textblock
#: dh_gconf:5
msgid "dh_gconf - install GConf defaults files and register schemas"
msgstr ""
"dh_gconf - GConf デフォルトファイルをインストールし、スキーマに登録します"

#. type: textblock
#: dh_gconf:14
msgid "B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]"
msgstr "B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]"

#. type: textblock
#: dh_gconf:18
msgid ""
"B<dh_gconf> is a debhelper program that is responsible for installing GConf "
"defaults files and registering GConf schemas."
msgstr ""
"B<dh_gconf>はGConf用デフォルトファイルをインストールし、GConfスキーマに登録す"
"る役割を担うdebhelperプログラムとなります。"

#. type: textblock
#: dh_gconf:21
msgid ""
"An appropriate dependency on gconf2 will be generated in B<${misc:Depends}>."
msgstr ""
"gconf2に関する適切な依存関係については、B<${misc:Depends}>へ生成されます。"

#. type: =item
#: dh_gconf:27
msgid "debian/I<package>.gconf-defaults"
msgstr "debian/I<package>.gconf-defaults"

#. type: textblock
#: dh_gconf:29
msgid ""
"Installed into F<usr/share/gconf/defaults/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""
"パッケージビルドディレクトリにあるF<usr/share/gconf/defaults/10_package>へイ"
"ンストールが行われます。なお、I<package>はパッケージ名で置き換えられます。"

#. type: =item
#: dh_gconf:32
msgid "debian/I<package>.gconf-mandatory"
msgstr "debian/I<package>.gconf-mandatory"

#. type: textblock
#: dh_gconf:34
msgid ""
"Installed into F<usr/share/gconf/mandatory/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""
"パッケージビルドディレクトリにあるF<usr/share/gconf/mandatory/10_package>へイ"
"ンストールされます。なお、I<package>はパッケージ名で置き換えられます。"

#. type: =item
#: dh_gconf:43
msgid "B<--priority> I<priority>"
msgstr "B<--priority> I<priority>"

#. type: textblock
#: dh_gconf:45
msgid ""
"Use I<priority> (which should be a 2-digit number) as the defaults priority "
"instead of B<10>. Higher values than ten can be used by derived "
"distributions (B<20>), CDD distributions (B<50>), or site-specific packages "
"(B<90>)."
msgstr ""
"I<priority>(これは2桁の数字でなければなりません）を特に指定無き場合の優先順位"
"であるB<10>の代わりに利用します。用途によっては10より大きな値を利用することが"
"できます。例えば、debianから派生したディストリビューションの場合(B<20>)、CDD"
"ディストリビューション(B<50>)、あるいは、サイト独自のパッケージ（B<90>)となり"
"ます。"

#. type: textblock
#: dh_gconf:107
msgid "Ross Burton <ross@burtonini.com> Josselin Mouette <joss@debian.org>"
msgstr "Ross Burton <ross@burtonini.com> Josselin Mouette <joss@debian.org>"

#. type: textblock
#: dh_gencontrol:5
msgid "dh_gencontrol - generate and install control file"
msgstr "dh_gencontrol - controlファイルを生成し、インストールします"

#. type: textblock
#: dh_gencontrol:14
msgid "B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]"
msgstr "B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_gencontrol:18
msgid ""
"B<dh_gencontrol> is a debhelper program that is responsible for generating "
"control files, and installing them into the I<DEBIAN> directory with the "
"proper permissions."
msgstr ""
"B<dh_gencontrol> はI<DEBIAN>ディレクトリ以下にcontrolファイルを生成し、適切な"
"権限を持つようにインストールする役目を持つdebhelperプログラムとなります。"

#. type: textblock
#: dh_gencontrol:22
msgid ""
"This program is merely a wrapper around L<dpkg-gencontrol(1)>, which calls "
"it once for each package being acted on, and passes in some additional "
"useful flags."
msgstr ""
"このプログラムは単にL<dpkg-gencontrol(1)>のラッパーとなります。処理を行うべき"
"パッケージ各々に対しL<dpkg-gencontrol(1)>を都度呼び出し、同時にいくつかの便利"
"なフラグも渡すプログラムとなります。"

#. type: textblock
#: dh_gencontrol:32
msgid "Pass I<params> to L<dpkg-gencontrol(1)>."
msgstr "I<params>をL<dpkg-gencontrol(1)>へ渡します。"

#. type: =item
#: dh_gencontrol:34
msgid "B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>"
msgstr "B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>"

#. type: textblock
#: dh_gencontrol:36
msgid ""
"This is another way to pass I<params> to L<dpkg-gencontrol(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""
"これは、I<params>をL<dpkg-gencontrol(1)>へ引き渡す別のやり方となります。しか"
"しながら、このオプションは廃止されました。今では、B<-->を代わりに使ってくださ"
"い。"

#. type: textblock
#: dh_icons:5
msgid "dh_icons - Update Freedesktop icon caches"
msgstr "dh_icons - Freedesktop規格のアイコンキャッシュを更新します"

#. type: textblock
#: dh_icons:15
msgid "B<dh_icons> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_icons> [S<I<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_icons:19
msgid ""
"B<dh_icons> is a debhelper program that updates Freedesktop icon caches when "
"needed, using the B<update-icon-caches> program provided by GTK+2.12.  "
"Currently this program does not handle installation of the files, though it "
"may do so at a later date. It takes care of adding maintainer script "
"fragments to call B<update-icon-caches>."
msgstr ""
"B<dh_icons>は、GTK+2.12により提供されるコマンドであるB<update-icon-caches>を"
"使って、必要に応じてFreedesktop規格のアイコンキャッシュを更新するdebhelperプ"
"ログラムとなります。現在では、本プログラムは、アイコンキャッシュファイルをイ"
"ンストールしたりはしませんが、将来ではインストールまで担当する事になると思い"
"ます。本コマンドは数々のメンテナスクリプトの断片の管理を行い、B<update-icon-"
"caches>を呼び出します。"

#. type: =item
#: dh_icons:29 dh_installcatalogs:53 dh_installdebconf:65 dh_installemacsen:52
#: dh_installinit:51 dh_installmenu:45 dh_installmime:45 dh_installmodules:48
#: dh_installudev:49 dh_installwm:44 dh_makeshlibs:77 dh_python:60
#: dh_usrlocal:43
msgid "B<-n>, B<--noscripts>"
msgstr "B<-n>, B<--noscripts>"

#. type: textblock
#: dh_icons:31
msgid "Do not modify maintainer scripts."
msgstr "メンテナスクリプトの修正を行いません。"

#. type: textblock
#: dh_icons:73
msgid ""
"Ross Burton <ross@burtonini.com> Jordi Mallach <jordi@debian.org> Josselin "
"Mouette <joss@debian.org>"
msgstr ""
"Ross Burton <ross@burtonini.com> Jordi Mallach <jordi@debian.org> "
"JosselinMouette <joss@debian.org>"

#. type: textblock
#: dh_install:5
msgid "dh_install - install files into package build directories"
msgstr ""
"dh_install - パッケージビルドディレクトリにファイルをインストールします"

#. type: textblock
#: dh_install:15
msgid ""
"B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] "
"[S<I<debhelper options>>] [S<I<file|dir> ... I<destdir>>]"
msgstr ""
"B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] "
"[S<I<debhelper options>>] [S<I<file|dir> ... I<destdir>>]"

#. type: textblock
#: dh_install:19
msgid ""
"B<dh_install> is a debhelper program that handles installing files into "
"package build directories. There are many B<dh_install>I<*> commands that "
"handle installing specific types of files such as documentation, examples, "
"man pages, and so on, and they should be used when possible as they often "
"have extra intelligence for those particular tasks. B<dh_install>, then, is "
"useful for installing everything else, for which no particular intelligence "
"is needed. It is a replacement for the old B<dh_movefiles> command."
msgstr ""
"B<dh_install>はパッケージビルドディレクトリにファイルをインストールする事を行"
"うdebhelperプログラムとなります。なお、沢山のB<dh_install>I<*>コマンドは、文"
"章や、例や、manページ等のファイルの種類に応じたインストールを担います。こちら"
"のコマンドは、特定の処理を行う為に各々専用の処理を持っていますので、可能な限"
"り、これらのファイルをインストールするときには、B<dh_install>I<*>コマンドを"
"使ってください。なお、B<dh_install>は、ファイルにあわせた特別な処理が不要な"
"ファイルをインストールする時に使うと良いです。B<dh_install>は、以前存在した"
"B<dh_movefiles>コマンドを置き換えるコマンドとなります。"

#. type: textblock
#: dh_install:27
msgid ""
"This program may be used in one of two ways. If you just have a file or two "
"that the upstream Makefile does not install for you, you can run "
"B<dh_install> on them to move them into place. On the other hand, maybe you "
"have a large package that builds multiple binary packages. You can use the "
"upstream F<Makefile> to install it all into F<debian/tmp>, and then use "
"B<dh_install> to copy directories and files from there into the proper "
"package build directories."
msgstr ""
"このプログラムは２つの用途で利用されます。１つ目は、単に１つ２つのファイルに"
"ついてアップストリームのMakefileがインストールをしようとしない時、"
"B<dh_install>を使ってこれらファイルの移動をすることができます。２つ目として"
"は、複数のバイナリパッケージを構築するような大きなパッケージの元で利用する場"
"合であり、アップストリームのMakefileにより、F<debian/tmp>へ一一旦インストール"
"してから、B<dh_install>を使って適切なパッケージビルドディレクトリへディレクト"
"リとファイルをコピーするのに使うというものです。"

#. type: textblock
#: dh_install:34
msgid ""
"From debhelper compatibility level 7 on, B<dh_install> will fall back to "
"looking in F<debian/tmp> for files, if it doesn't find them in the current "
"directory (or whereever you've told it to look using B<--sourcedir>)."
msgstr ""
"debhelperの互換性レベルがv7から、 B<dh_install>はファイルを現在のディレクトリ"
"で見つけられなければ（あるいは、B<--sourcedir>オプションを使って指定したディ"
"レクトリの中を探してファイルが見けられなければ）、自動的にF<debian/tmp>を探し"
"にいくようになりました"

#. type: =item
#: dh_install:42
msgid "debian/I<package>.install"
msgstr "debian/I<package>.install"

#. type: textblock
#: dh_install:44
msgid ""
"List the files to install into each package and the directory they should be "
"installed to. The format is a set of lines, where each line lists a file or "
"files to install, and at the end of the line tells the directory it should "
"be installed in. The name of the files (or directories) to install should be "
"given relative to the current directory, while the installation directory is "
"given relative to the package build directory. You may use wildcards in the "
"names of the files to install (in v3 mode and above)."
msgstr ""
"各々のパッケージにインストールすべきファイルと、これらファイルがインストール"
"されるべきディレクトリを列挙します。フォーマットとしては、一連の行から成り、"
"１つの行には、最初に１つもしくは複数のインストールしたいファイルを書き、行の"
"最後の部分には、インストールされる先のディレクトリ名を書いていきます。ファイ"
"ルの名前（あるいはディレクトリの名前）について、インストールしたい側は現在の"
"ディレクトリからの相対パスで、また、インストールされる側のディレクトリの場合"
"はパッケージビルドディレクトリからの相対パスで記載する必要があります。インス"
"トールする側のファイル名にはワイルドカードを使う事ができます（この機能は互換"
"性レベルv3以上で利用可能です。）"

#. type: textblock
#: dh_install:52
#, fuzzy
msgid ""
"Note that if you list exactly one filename or wildcard-pattern on a line by "
"itself, with no explicit destination, then B<dh_install> will automatically "
"guess the destination to use, the same as if the --autodest option were used."
msgstr ""
"F<debian/package.install> に正確にインストール元ファイル名のみ指定、あるいは"
"インストール元ファイルとしてワイルドカードのみ指定の場合のように、明確なイン"
"ストール先ディレクトリの指定を全く行わないと、本フラグが設定されていようがい"
"まいが、B<dh_install>は機械的にインストール先ディレクトリを推定しようとしま"
"す。"

#. type: =item
#: dh_install:63
msgid "B<--list-missing>"
msgstr "B<--list-missing>"

#. type: textblock
#: dh_install:65
msgid ""
"This option makes B<dh_install> keep track of the files it installs, and "
"then at the end, compare that list with the files in the source directory. "
"If any of the files (and symlinks) in the source directory were not "
"installed to somewhere, it will warn on stderr about that."
msgstr ""
"このオプションにより、B<dh_install>はインストールするファイル群を追跡し、そし"
"て処理の終わりに、ソースディレクトリにあるファイルの一覧と比較します。もし、"
"ソースファイル中のファイル（もしくはシンボリックリンク）でインストールされて"
"いないものが発見されると、警告を標準エラー出力に表示します。"

#. type: textblock
#: dh_install:70
msgid ""
"This may be useful if you have a large package and want to make sure that "
"you don't miss installing newly added files in new upstream releases."
msgstr ""
"このオプションは大きなパッケージをつくろうとしていたり、アップストリームの新"
"しいリリースにて新たに増えたファイルをインストールし忘れないようにする時に便"
"利です。"

#. type: textblock
#: dh_install:73
msgid ""
"Note that files that are excluded from being moved via the B<-X> option are "
"not warned about."
msgstr ""
"ただ、B<-X>オプションで除外したファイルがあると、このファイルは本警告対象から"
"外される事にご注意ください。"

#. type: =item
#: dh_install:76
msgid "B<--fail-missing>"
msgstr "B<--fail-missing>"

#. type: textblock
#: dh_install:78
msgid ""
"This option is like B<--list-missing>, except if a file was missed, it will "
"not only list the missing files, but also fail with a nonzero exit code."
msgstr ""
"このオプションはB<--list-missing>と同じようなものですが、ファイルがインストー"
"ルされていないものがあるのを発見すると、そのファイルを列挙して教えてくれるだ"
"けでなく、OSへの終了ステータスとして非ゼロを返却して処理を終了します。"

#. type: textblock
#: dh_install:83 dh_installexamples:43
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed."
msgstr ""
"I<item>をファイル名の一部として含んでいるファイルをインストール候補から除外し"
"ます。"

#. type: =item
#: dh_install:86 dh_movefiles:42
msgid "B<--sourcedir=>I<dir>"
msgstr "B<--sourcedir=>I<dir>"

#. type: textblock
#: dh_install:88
msgid "Look in the specified directory for files to be installed."
msgstr ""
"本オプションにより、インストールすべきファイルを、指定されたディレクトリへ探"
"しに行くようになります。"

#. type: textblock
#: dh_install:90
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_install> automatically looks for files in F<debian/tmp> in debhelper "
"compatibility level 7 and above."
msgstr ""
"このオプションは、B<dh_auto_>I<*>にあるようなB<--sourcedirectory>とは異なる事"
"に注意が必要です。本コマンドではあまりこのオプションは利用する機会がありませ"
"ん。というのもB<dh_install>は互換性レベルv7以上では自動的にF<debian/tmp>へ"
"ファイルを探しに行く為です。"

#. type: =item
#: dh_install:95
msgid "B<--autodest>"
msgstr "B<--autodest>"

#. type: textblock
#: dh_install:97
msgid ""
"Guess as the destination directory to install things to. If this is "
"specified, you should not list destination directories in F<debian/package."
"install> files or on the command line. Instead, B<dh_install> will guess as "
"follows:"
msgstr ""
"ファイルをインストールする先のディレクトリを推定します。もしこのオプションを"
"指定すると、F<debian/package.install>ファイルや、コマンドラインにインストール"
"先のディレクトリを列挙してはいけません。この状況の元で、B<dh_install>は以下の"
"ルールに従いインストール先ディレクトリを推定します。"

#. type: textblock
#: dh_install:102
msgid ""
"Strip off F<debian/tmp> (or the sourcedir if one is given) from the front of "
"the filename, if it is present, and install into the dirname of the "
"filename. So if the filename is F<debian/tmp/usr/bin>, then that directory "
"will be copied to F<debian/package/usr/>. If the filename is F<debian/tmp/"
"etc/passwd>, it will be copied to F<debian/package/etc/>."
msgstr ""
"まず、インストール元のファイルのパスからF<debian/tmp>の文字列（あるいは、別に"
"指定されていれば、ソースディレクトリ名）を取り除き、残ったパスが存在すればで"
"すが、こちらをインストールディレクトリとしてみなします。例をあげると、ソース"
"ディレクトリとしてF<debian/tmp/usr/bin>が与えられると、ファイルがコピーされる"
"先のディレクトリはF<debian/package/usr/>となります。もしF<debian/tmp/etc/"
"passwd>がソース側のファイルとして与えられると、ファイルのインストールは"
"F<debian/package/etc/>へ行われます。"

#. type: =item
#: dh_install:108
msgid "I<file|dir> ... I<destdir>"
msgstr "I<file|dir> ... I<destdir>"

#. type: textblock
#: dh_install:110
msgid ""
"Lists files (or directories) to install and where to install them to.  The "
"files will be installed into the first package F<dh_install> acts on."
msgstr ""
"インストールすべきファイル（あるいはディレクトリ）とどこへインストールするか"
"について列挙します。なおこれらファイルはF<dh_install>が処理する最初のパッケー"
"ジへインストールされます。"

#. type: =head1
#: dh_install:252
msgid "LIMITATIONS"
msgstr "制限事項"

#. type: verbatim
#: dh_install:254
#, no-wrap
msgid ""
"B<dh_install> cannot rename files or directories, it can only install them\n"
"with the names they already have into wherever you want in the package\n"
"build tree.\n"
"  \n"
msgstr ""
"B<dh_install>はファイル、ディレクトリの名前の変更ができません。\n"
"一方で、パッケージビルドツリー以下のすでに存在するファイル、ディレクトリの名前へ\n"
"ファイルをインストールすることが可能です。\n"

#. type: textblock
#: dh_installcatalogs:5
msgid "dh_installcatalogs - install and register SGML Catalogs"
msgstr "dh_installcatalogs - SGML カタログファイルをインストールし、登録します"

#. type: textblock
#: dh_installcatalogs:16
msgid "B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_installcatalogs:20
msgid ""
"B<dh_installcatalogs> is a debhelper program that installs and registers "
"SGML catalogs. It complies with the Debian XML/SGML policy."
msgstr ""
"B<dh_installcatalogs>はSGMLカタログをインストールし登録するプログラムです。本"
"コマンドの動作はDebian XML/SGMLポリシーに則って行われます。"

#. type: textblock
#: dh_installcatalogs:23
msgid ""
"Catalogs will be registered in a supercatalog, in F</etc/sgml/I<package>."
"cat>."
msgstr ""
"カタログはF</etc/sgml/I<package>.cat>にある上位カタログに登録されます。"

#. type: textblock
#: dh_installcatalogs:26
msgid ""
"This command automatically adds maintainer script snippets for registering "
"and unregistering the catalogs and supercatalogs (unless B<-n> is used). "
"These snippets are inserted into the maintainer scripts by B<dh_installdeb>; "
"see L<dh_installdeb(1)> for an explanation of Debhelper maintainer script "
"snippets."
msgstr ""
"このコマンドは、カタログや上位カタログ（B<-n>を指定しない時のみですが）を登"
"録・解除の為に用意されているメンテナ用シェルスクリプトの塊を機械的に付け加え"
"るものです。これらスクリプトの塊はB<dh_installdeb>によりメンテナスクリプトへ"
"挿入されます。Debhelperメンテナスクリプトについては、L<dh_installdeb(1)>を参"
"照ください。"

#. type: textblock
#: dh_installcatalogs:32
msgid ""
"A dependency on B<sgml-base> will be added to B<${misc:Depends}>, so be sure "
"your package uses that variable in F<debian/control>."
msgstr ""
"B<sgml-base>についての依存関係に関する情報はB<${misc:Depends}>へ挿入されま"
"す。その為、F<debian/control>にて、この変数を必ず使ってください。"

#. type: =item
#: dh_installcatalogs:39
msgid "debian/I<package>.sgmlcatalogs"
msgstr "debian/I<package>.sgmlcatalogs"

#. type: textblock
#: dh_installcatalogs:41
msgid ""
"Lists the catalogs to be installed per package. Each line in that file "
"should be of the form C<I<source> I<dest>>, where I<source> indicates where "
"the catalog resides in the source tree, and I<dest> indicates the "
"destination location for the catalog under the package build area. I<dest> "
"should start with F</usr/share/sgml/>."
msgstr ""
"パッケージ毎にインストールすべきカタログを列挙します。このファイルには、各々"
"の行がC<I<source> I<dest>>の形式で指定されていなければなりません。ここで、"
"I<source>はインストール元のカタログがソースのどこに入っているかを示し、また、"
"I<dest>にはビルド領域以下のどこにカタログをインストールすべきかを示します。"
"I<dest>はF</usr/share/sgml/>から始まっていなければなりません。"

#. type: textblock
#: dh_installcatalogs:55 dh_installinit:53
msgid "Do not modify F<postinst>/F<postrm>/F<prerm> scripts."
msgstr "F<postinst>/F<postrm>/F<prerm>スクリプトは変更しないでください。"

#. type: textblock
#: dh_installcatalogs:61 dh_installdocs:122 dh_installemacsen:69
#: dh_installinit:130 dh_installmime:53 dh_installmodules:62 dh_installudev:57
#: dh_installwm:56 dh_usrlocal:51
msgid ""
"Note that this command is not idempotent. L<dh_prep(1)> should be called "
"between invocations of this command. Otherwise, it may cause multiple "
"instances of the same text to be added to maintainer scripts."
msgstr ""
"このコマンドは複数回実行しても安全なコマンドではありません。このコマンドを複"
"数回呼び出す際には必ず間にL<dh_prep(1)>を挿入願います。さもないと、メンテナス"
"クリプト中に同じ内容のコードを繰り返し挿入してしまいます。"

#. type: textblock
#: dh_installcatalogs:120
msgid "F</usr/share/doc/sgml-base-doc/>"
msgstr "F</usr/share/doc/sgml-base-doc/>"

#. type: textblock
#: dh_installcatalogs:124
msgid "Adam Di Carlo <aph@debian.org>"
msgstr "Adam Di Carlo <aph@debian.org>"

#. type: textblock
#: dh_installchangelogs:5
msgid ""
"dh_installchangelogs - install changelogs into package build directories"
msgstr ""
"dh_installchangelogs - パッケージビルドディレクトリにchangelogをインストール"
"します"

#. type: textblock
#: dh_installchangelogs:14
msgid ""
"B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] "
"[I<upstream>]"
msgstr ""
"B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] "
"[I<upstream>]"

#. type: textblock
#: dh_installchangelogs:18
msgid ""
"B<dh_installchangelogs> is a debhelper program that is responsible for "
"installing changelogs into package build directories."
msgstr ""
"B<dh_installchangelogs>はパッケージビルドディレクトリにchangelogをインストー"
"ルする役割を担うdebhelperコマンドです。"

#. type: textblock
#: dh_installchangelogs:21
msgid ""
"An upstream F<changelog> file may be specified as an option. If none is "
"specified, it looks for files with names that seem likely to be changelogs.  "
"(In compatibility level 7 and above.)"
msgstr ""
"アップストリームに入っているF<changelog>ファイルはオプションとして指定できま"
"す。もし何も指定しないと、changelogとおぼしき名前を持つファイルを探しに行きま"
"す。(これは互換レベルv7以上で行われます）"

#. type: textblock
#: dh_installchangelogs:25
msgid ""
"If there is an upstream F<changelog> file, it will be be installed as F<usr/"
"share/doc/package/changelog> in the package build directory. If the "
"changelog is a F<html> file (determined by file extension), it will be "
"installed as F<usr/share/doc/package/changelog.html> instead, and will be "
"converted to plain text with B<html2text> to generate F<usr/share/doc/"
"package/changelog>."
msgstr ""
"アップストリーム付属のF<changelog>ファイルについては、パッケージビルドディレ"
"クトリにあるF<usr/share/doc/package/changelog>としてインストールされます。も"
"しchangelogファイルがF<html>ファイル（拡張子で判定されます）であれば、代わり"
"にF<usr/share/doc/package/changelog.html>としてインストールされ、さらに、"
"B<html2text>でF<usr/share/doc/package/changelog>へテキスト形式に変換してイン"
"ストールされます。 "

#. type: =item
#: dh_installchangelogs:36
msgid "F<debian/changelog>"
msgstr "F<debian/changelog>"

#. type: =item
#: dh_installchangelogs:38
msgid "F<debian/NEWS>"
msgstr "F<debian/NEWS>"

#. type: =item
#: dh_installchangelogs:40
msgid "debian/I<package>.changelog"
msgstr "debian/I<package>.changelog"

#. type: =item
#: dh_installchangelogs:42
msgid "debian/I<package>.NEWS"
msgstr "debian/I<package>.NEWS"

#. type: textblock
#: dh_installchangelogs:44
msgid ""
"Automatically installed into usr/share/doc/I<package>/ in the package build "
"directory."
msgstr ""
"これらファイルはパッケージビルドディレクトリ以下のusr/share/doc/I<package>/配"
"下に機械的にインストールされます。"

#. type: textblock
#: dh_installchangelogs:47
msgid ""
"Use the package specific name if I<package> needs a different F<NEWS> or "
"F<changelog> file."
msgstr ""
"I<package>がF<NEWS>やF<changelog>とは異なるファイル名をF<NEWS>やF<changelog>"
"として扱う必要があれば、パッケージで指定される名前を使ってください。"

#. type: textblock
#: dh_installchangelogs:50
msgid ""
"The F<changelog> file is installed with a name of changelog for native "
"packages, and F<changelog.Debian> for non-native packages.  The F<NEWS> file "
"is always installed with a name of F<NEWS.Debian>."
msgstr ""
" F<changelog>ファイルはネイティブパッケージ向けにはchangelogの名前でイ ンス"
"トールされ、F<changelog.Debian>はノンネイティブパッケージの向けに インストー"
"ルされます。F<NEWS>は必ずF<NEWS.Debian>の名前でインストール されます。"

#. type: textblock
#: dh_installchangelogs:62
msgid ""
"Keep the original name of the upstream changelog. This will be accomplished "
"by installing the upstream changelog as F<changelog>, and making a symlink "
"from that to the original name of the F<changelog> file. This can be useful "
"if the upstream changelog has an unusual name, or if other documentation in "
"the package refers to the F<changelog> file."
msgstr ""
"アップストリーム付属のchangelogの名前を維持します。これはアップストリーム付属"
"のchangelogをF<changelog>としてインストールしてしまい、F<changelog>ファイルの"
"元の名前でそのファイルにシンボリックリンクを張ります。これはアップストリーム"
"のchangelogが通常ではない名前の場合、あるいは、パッケージに含まれる別の文章が"
"F<changelog> ファイルを参照している時に便利かもしれません。"

#. type: textblock
#: dh_installchangelogs:70
msgid ""
"Exclude upstream F<changelog> files that contain I<item> anywhere in their "
"filename from being installed."
msgstr ""
"I<item>をファイル名に含むアップストリームのF<changelog>ファイルをインストール"
"候補から除外します。"

#. type: =item
#: dh_installchangelogs:73
msgid "I<upstream>"
msgstr "I<upstream>"

#. type: textblock
#: dh_installchangelogs:75
msgid "Install this file as the upstream changelog."
msgstr "このファイルをアップストリームのchangelogとしてインストールします。"

#. type: textblock
#: dh_installcron:5
msgid "dh_installcron - install cron scripts into etc/cron.*"
msgstr "dh_installcron - cronの定義ファイルをetc/cron.*へインストールします"

#. type: textblock
#: dh_installcron:14
msgid "B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installcron:18
msgid ""
"B<dh_installcron> is a debhelper program that is responsible for installing "
"cron scripts."
msgstr ""
"B<dh_installcron>はcronの定義ファイルをインストールする役目のdebhelperのプロ"
"グラムです。"

#. type: =item
#: dh_installcron:25
msgid "debian/I<package>.cron.daily"
msgstr "debian/I<package>.cron.daily"

#. type: =item
#: dh_installcron:27
msgid "debian/I<package>.cron.weekly"
msgstr "debian/I<package>.cron.weekly"

#. type: =item
#: dh_installcron:29
msgid "debian/I<package>.cron.monthly"
msgstr "debian/I<package>.cron.monthly"

#. type: =item
#: dh_installcron:31
msgid "debian/I<package>.cron.hourly"
msgstr "debian/I<package>.cron.hourly"

#. type: =item
#: dh_installcron:33
msgid "debian/I<package>.cron.d"
msgstr "debian/I<package>.cron.d"

#. type: textblock
#: dh_installcron:35
msgid ""
"Installed into the appropriate F<etc/cron.*/> directory in the package build "
"directory."
msgstr ""
"これはそれぞれパッケージビルドディレクトリ以下にある適切なF<etc/cron.*/>にイ"
"ンストールされます。"

#. type: =item
#: dh_installcron:44 dh_installifupdown:43 dh_installinit:98
#: dh_installlogcheck:46 dh_installlogrotate:26 dh_installmodules:52
#: dh_installpam:35 dh_installppp:39 dh_installudev:39
msgid "B<--name=>I<name>"
msgstr "B<--name=>I<name>"

#. type: textblock
#: dh_installcron:46
msgid ""
"Look for files named F<debian/package.name.cron.*> and install them as F<etc/"
"cron.*/name>, instead of using the usual files and installing them as the "
"package name."
msgstr ""
"F<debian/package.name.cron.*>という名前のファイルを探し、F<etc/cron.*/name>と"
"してインストールします。これは、通常のファイルを使わず、また、パッケージの名"
"前でインストールしたく無い時に使います。"

#. type: textblock
#: dh_installdeb:5
msgid "dh_installdeb - install files into the DEBIAN directory"
msgstr "dh_installdeb - DEBIANディレクトリにファイルをインストールします"

#. type: textblock
#: dh_installdeb:14
msgid "B<dh_installdeb> [S<I<debhelper options>>]"
msgstr "B<dh_installdeb> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installdeb:18
msgid ""
"B<dh_installdeb> is a debhelper program that is responsible for installing "
"files into the F<DEBIAN> directories in package build directories with the "
"correct permissions."
msgstr ""
"B<dh_installdeb>はパッケージビルドディレクトリにあるF<DEBIAN>ディレクトリ以下"
"にファイルを正しい権限を持つようにしてインストールする役目のdebhelperプログラ"
"ムです。"

#. type: =item
#: dh_installdeb:26
msgid "I<package>.postinst"
msgstr "I<package>.postinst"

#. type: =item
#: dh_installdeb:28
msgid "I<package>.preinst"
msgstr "I<package>.preinst"

#. type: =item
#: dh_installdeb:30
msgid "I<package>.postrm"
msgstr "I<package>.postrm"

#. type: =item
#: dh_installdeb:32
msgid "I<package>.prerm"
msgstr "I<package>.prerm"

#. type: textblock
#: dh_installdeb:34
msgid "These maintainer scripts are installed into the F<DEBIAN> directory."
msgstr ""
"これらメンテナスクリプトはF<DEBIAN>ディレクトリ以下にインストールされます。"

#. type: textblock
#: dh_installdeb:36
msgid ""
"Inside the scripts, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""
"スクリプト中B<#DEBHELPER#>の文言は、他のdebhelperコマンドが生成するシェルスク"
"リプトの断片で置き換えられます。"

#. type: =item
#: dh_installdeb:39
msgid "I<package>.triggers"
msgstr "I<package>.triggers"

#. type: =item
#: dh_installdeb:41
msgid "I<package>.shlibs"
msgstr "I<package>.shlibs"

#. type: textblock
#: dh_installdeb:43
msgid "These control files are installed into the F<DEBIAN> directory."
msgstr "これらファイル群はF<DEBIAN>ディレクトリ以下にインストールされます。"

#. type: =item
#: dh_installdeb:45
msgid "I<package>.conffiles"
msgstr "I<package>.conffiles"

#. type: textblock
#: dh_installdeb:47
msgid "This control file will be installed into the F<DEBIAN> directory."
msgstr "このcontrolファイルはF<DEBIAN>ディレクトリ以下にインストールされます。"

#. type: textblock
#: dh_installdeb:49
msgid ""
"In v3 compatibility mode and higher, all files in the F<etc/> directory in a "
"package will automatically be flagged as conffiles by this program, so there "
"is no need to list them manually here."
msgstr ""
"互換性レベルがv3以上の場合、パッケージ内のF<etc/>以下の全ファイルは、このプロ"
"グラムによりconffileと機械的に印がつけらます。その為、自分でいちいちこれら"
"ファイルを、このファイルに列挙する必要はありません。"

#. type: =item
#: dh_installdeb:53
msgid "I<package>.maintscript"
msgstr "I<package>.maintscript"

#. type: textblock
#: dh_installdeb:55
msgid ""
"Lines in this file correspond to L<dpkg-maintscript-helper(1)> commands and "
"parameters.  Any shell metacharacters will be escaped, so arbitrary shell "
"code cannot be inserted here.  For example, a line such as C<mv_conffile /"
"etc/oldconffile /etc/newconffile> will insert maintainer script snippets "
"into all maintainer scripts sufficient to move that conffile."
msgstr ""
"このファイルに入っている各行はL<dpkg-maintscript-helper(1)>コマンドとパラメタ"
"に関するものです。シェルのメタキャラクタはエスケープされるため、任意のシェル"
"スクリプトをここに挿入することはできません。例えば、C<mv_conffile /etc/"
"oldconffile /etc/newconffile>のような行は、F</etc/oldconffile>をこの行で示さ"
"れるF</etc/newconffile>へ移動できるように、全てのメンテナスクリプトに追加のス"
"クリプトを挿入することを意味します。"

#. type: textblock
#: dh_installdeb:61
msgid ""
"A versioned Pre-Dependency on dpkg is needed to use L<dpkg-maintscript-helper"
"(1)>. An appropriate Pre-Dependency is set in ${misc:Pre-Depends} ; you "
"should make sure to put that token into an appropriate place in your debian/"
"control file."
msgstr ""
"L<dpkg-maintscript-helper(1)>を使うには、前もって特定のバージョンのdpkgが必要"
"となります。こちらに関する依存関係をあらかじめ正しくしておくには、${misc:Pre-"
"Depends}を設定願います。つまり、debian/controlファイルの適切な場所に${misc:"
"Pre-Depends}が入っているか確かめてください。"

#. type: textblock
#: dh_installdebconf:5
msgid ""
"dh_installdebconf - install files used by debconf in package build "
"directories"
msgstr ""
"dh_installdebconf - パッケージビルドディレクトリにあるdebconfにより利用される"
"ファイルが挿入されます"

#. type: textblock
#: dh_installdebconf:14
msgid ""
"B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_installdebconf:18
msgid ""
"B<dh_installdebconf> is a debhelper program that is responsible for "
"installing files used by debconf into package build directories."
msgstr ""
"B<dh_installdebconf>は、debconfにより使われるファイルをパッケージビルドディレ"
"クトリへインストールする役割を持つdebhelperプログラムです。"

#. type: textblock
#: dh_installdebconf:21
msgid ""
"It also automatically generates the F<postrm> commands needed to interface "
"with debconf. The commands are added to the maintainer scripts by "
"B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of how that "
"works."
msgstr ""
"本コマンドはdebconfに整合するのに必要なF<postrm>ファイルを機械的に生成しま"
"す。このコマンドはB<dh_installdeb>によりメンテナスクリプトへ追加されます。こ"
"の追加に関する動作についての説明は、L<dh_installdeb(1)>にあります。"

#. type: textblock
#: dh_installdebconf:26
msgid ""
"Note that if you use debconf, your package probably needs to depend on it "
"(it will be added to B<${misc:Depends}> by this program)."
msgstr ""
"debconfを使うと、パッケージはdebconfに対して依存関係が発生するという事です"
"（この依存関係の指定については、本プログラムにより、B<${misc:Depends}>へ追加"
"が行われます）"

#. type: textblock
#: dh_installdebconf:29
msgid ""
"Note that for your config script to be called by B<dpkg>, your F<postinst> "
"needs to source debconf's confmodule. B<dh_installdebconf> does not install "
"this statement into the F<postinst> automatically as it is too hard to do it "
"right."
msgstr ""
"また、B<dpkg>により設定用スクリプトが呼び出されることになりますが、"
"F<postinst>ファイルはdebconfのconfmoduleに関する設定が必要となります。"
"B<dh_installdebconf>はこちらの作業を機械的にF<postinst>へ挿入することはしませ"
"ん。というのも、これを機械的に正しく行うのは非常に難しいからです。"

#. type: =item
#: dh_installdebconf:38
msgid "debian/I<package>.config"
msgstr "debian/I<package>.config"

#. type: textblock
#: dh_installdebconf:40
msgid ""
"This is the debconf F<config> script, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""
"これはdebconfのF<config>スクリプトです。こちらはパッケージビルドディレクトリ"
"以下にあるF<DEBIAN>ディレクトリにインストールされます。"

#. type: textblock
#: dh_installdebconf:43
msgid ""
"Inside the script, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""
"本スクリプト内に記載されているB<#DEBHELPER#>という文言は他のdebhelperコマンド"
"により生成されたシェルスクリプトの断片によって置き換えられます。"

#. type: =item
#: dh_installdebconf:46
msgid "debian/I<package>.templates"
msgstr "debian/I<package>.templates"

#. type: textblock
#: dh_installdebconf:48
msgid ""
"This is the debconf F<templates> file, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""
"これはdebconfのF<templates>ファイルとなります。パッケージビルドディレクトリの"
"F<DEBIAN>ディレクトリ以下にインストールされます。 "

#. type: =item
#: dh_installdebconf:51
msgid "F<debian/po/>"
msgstr "F<debian/po/>"

#. type: textblock
#: dh_installdebconf:53
msgid ""
"If this directory is present, this program will automatically use "
"L<po2debconf(1)> to generate merged templates files that include the "
"translations from there."
msgstr ""
"もしこのディレクトリが存在すれば、このプログラムは機械的にL<po2debconf(1)> を"
"呼び出し、このディレクトリ以下にある翻訳されたファイルを含む結合されたdebconf"
"テンプレートファイルを生成します。"

#. type: textblock
#: dh_installdebconf:57
msgid "For this to work, your package should build-depend on F<po-debconf>."
msgstr ""
"こちらが動作する為には、F<po-debconf>に関するビルド依存の指定がパッケージに必"
"要となります。"

#. type: textblock
#: dh_installdebconf:67
msgid "Do not modify F<postrm> script."
msgstr "F<postrm>ファイルの変更を行いません。"

#. type: textblock
#: dh_installdebconf:71
msgid "Pass the params to B<po2debconf>."
msgstr "B<po2debconf>へパラメタを引き渡します。"

#. type: textblock
#: dh_installdirs:5
msgid "dh_installdirs - create subdirectories in package build directories"
msgstr ""
"dh_installdirs - パッケージビルドディレクトリ以下にサブディレクトリを作成しま"
"す"

#. type: textblock
#: dh_installdirs:14
msgid "B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir> ...>]"
msgstr "B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir> ...>]"

#. type: textblock
#: dh_installdirs:18
msgid ""
"B<dh_installdirs> is a debhelper program that is responsible for creating "
"subdirectories in package build directories."
msgstr ""
"B<dh_installdirs>はパッケージビルドディレクトリ以下にサブディレクトリを作成す"
"る役目を持つdebhelperプログラムとなります。"

#. type: =item
#: dh_installdirs:25
msgid "debian/I<package>.dirs"
msgstr "debian/I<package>.dirs"

#. type: textblock
#: dh_installdirs:27
msgid "Lists directories to be created in I<package>."
msgstr "I<package>以下に作るディレクトリを列挙します"

#. type: textblock
#: dh_installdirs:37
msgid ""
"Create any directories specified by command line parameters in ALL packages "
"acted on, not just the first."
msgstr ""
"コマンドラインパラメタに指定されたディレクトリを作成します。また、この場合、"
"最初のパッケージに作用するのみならず、全パッケージに作用します。"

#. type: =item
#: dh_installdirs:40
msgid "I<dir> ..."
msgstr "I<dir> ..."

#. type: textblock
#: dh_installdirs:42
msgid ""
"Create these directories in the package build directory of the first package "
"acted on. (Or in all packages if B<-A> is specified.)"
msgstr ""
"動作する最初のパッケージのパッケージビルドディレクトリ以下に指定されたディレ"
"クトリを作成します（あるいは、B<-A>が指定されれば、全パッケージのパッケージビ"
"ルドディレクトリに対して行われます。）"

#. type: textblock
#: dh_installdocs:5
msgid "dh_installdocs - install documentation into package build directories"
msgstr ""
"dh_installdocs - パッケージビルドディレクトリ以下に文章をインストールします"

#. type: textblock
#: dh_installdocs:14
msgid ""
"B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"

#. type: textblock
#: dh_installdocs:18
msgid ""
"B<dh_installdocs> is a debhelper program that is responsible for installing "
"documentation into F<usr/share/doc/package> in package build directories."
msgstr ""
"B<dh_installdocs>はパッケージビルドディレクトリ以下にあるF<usr/share/doc/"
"package>ディレクトリへ文章をインストールする役割を持つdebhelperプログラムとな"
"ります。"

#. type: =item
#: dh_installdocs:25
msgid "debian/I<package>.docs"
msgstr "debian/I<package>.docs"

#. type: textblock
#: dh_installdocs:27
msgid "List documentation files to be installed into I<package>."
msgstr "I<package>にインストールすべき文章ファイルの一覧を列挙します。"

#. type: =item
#: dh_installdocs:29
msgid "F<debian/copyright>"
msgstr "F<debian/copyright>"

#. type: textblock
#: dh_installdocs:31
msgid ""
"The copyright file is installed into all packages, unless a more specific "
"copyright file is available."
msgstr ""
"特に他に指定がない時に全パッケージにインストールされるcopyrightファイルとなり"
"ます。"

#. type: =item
#: dh_installdocs:34
msgid "debian/I<package>.copyright"
msgstr "debian/I<package>.copyright"

#. type: =item
#: dh_installdocs:36
msgid "debian/I<package>.README.Debian"
msgstr "debian/I<package>.README.Debian"

#. type: =item
#: dh_installdocs:38
msgid "debian/I<package>.TODO"
msgstr "debian/I<package>.TODO"

#. type: textblock
#: dh_installdocs:40
msgid ""
"Each of these files is automatically installed if present for a I<package>."
msgstr ""
"もし存在すれば、I<package>へこれらのファイルは機械的にインストールされます。"

#. type: =item
#: dh_installdocs:43
msgid "F<debian/README.Debian>"
msgstr "F<debian/README.Debian>"

#. type: =item
#: dh_installdocs:45
msgid "F<debian/TODO>"
msgstr "F<debian/TODO>"

#. type: textblock
#: dh_installdocs:47
msgid ""
"These files are installed into the first binary package listed in debian/"
"control."
msgstr ""
"これらファイルはdebian/controlに最初に指定されているバイナリパッケージへイン"
"ストールされます。"

#. type: textblock
#: dh_installdocs:50
msgid ""
"Note that F<README.debian> files are also installed as F<README.Debian>, and "
"F<TODO> files will be installed as F<TODO.Debian> in non-native packages."
msgstr ""
"ノンネイティブパッケージの元では、F<README.debian>ファイルはF<README.Debian>"
"としてインストールされ、また、F<TODO>ファイルではF<TODO.Debian>としてインス"
"トールされます。"

#. type: =item
#: dh_installdocs:53
msgid "debian/I<package>.doc-base"
msgstr "debian/I<package>.doc-base"

#. type: textblock
#: dh_installdocs:55
msgid ""
"Installed as doc-base control files. Note that the doc-id will be determined "
"from the B<Document:> entry in the doc-base control file in question."
msgstr ""
"doc-base制御ファイルとしてインストールされます。なお、doc-idはdoc-base制御"
"ファイル中のB<Document:>エントリから決定されます。"

#. type: =item
#: dh_installdocs:59
msgid "debian/I<package>.doc-base.*"
msgstr "debian/I<package>.doc-base.*"

#. type: textblock
#: dh_installdocs:61
msgid ""
"If your package needs to register more than one document, you need multiple "
"doc-base files, and can name them like this."
msgstr ""
"もし、パッケージが２つ以上のドキュメントを登録する必要があるのであれば、複数"
"のdoc-baseファイルが必要となります。また、これらファイルは各々debian/"
"I<package>.doc-base.*で指定し、doc-base.*という名前でインストールされます。"

#. type: textblock
#: dh_installdocs:72 dh_installinfo:37 dh_installman:67
msgid ""
"Install all files specified by command line parameters in ALL packages acted "
"on."
msgstr ""
"コマンドラインパラメタに指定されたファイル全部をインストールします。これは処"
"理対象の全パッケージに対して動作します＜"

#. type: textblock
#: dh_installdocs:77
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed. Note that this includes doc-base files."
msgstr ""
"インストール予定のファイルから、I<item>をファイル名の一部に持つものを除外しま"
"す。doc-baseファイルも条件が合致すると除外対象となります。"

#. type: =item
#: dh_installdocs:80
msgid "B<--link-doc=>I<package>"
msgstr "B<--link-doc=>I<package>"

#. type: textblock
#: dh_installdocs:82
msgid ""
"Make the documentation directory of all packages acted on be a symlink to "
"the documentation directory of I<package>. This has no effect when acting on "
"I<package> itself, or if the documentation directory to be created already "
"exists when B<dh_installdocs> is run. To comply with policy, I<package> must "
"be a binary package that comes from the same source package."
msgstr ""
"処理対象の全パッケージの文章ディレクトリを、I<package>の文章ディレクトリへの"
"シンボリックリンクを張ることにより作成します。この動作はI<package>そのものに"
"は行われず、また、B<dh_installdocs>が動作する時にすでに存在しているディレクト"
"リに対しては行われません。ポリシーに準拠する為、I<package>は同じソースパッ"
"ケージから構築されるバイナリパッケージでなければなりません。"

#. type: textblock
#: dh_installdocs:88
msgid ""
"debhelper will try to avoid installing files into linked documentation "
"directories that would cause conflicts with the linked package. The B<-A> "
"option will have no effect on packages with linked documentation "
"directories, and F<copyright>, F<changelog>, F<README.Debian>, and F<TODO> "
"files will not be installed."
msgstr ""
"debhelperはファイルをインストール時にシンボリックリンク先のパッケージとの競合"
"を避ける為、シンボリックリンクで作成されている文章ディレクトリにはファイルを"
"インストールしません。B<-A>オプションはシンボリックリンクで作成されたディレク"
"トリには作用しません。さらに、この場合、F<copyright>、F<changelog>、F<README."
"Debian>、F<TODO>ファイルはインストールされません。"

#. type: textblock
#: dh_installdocs:94
msgid ""
"(An older method to accomplish the same thing, which is still supported, is "
"to make the documentation directory of a package be a dangling symlink, "
"before calling B<dh_installdocs>.)"
msgstr ""
"(同じ作用をする古い手法で、かつ、現在もなおサポートされているやり方として、"
"B<dh_installdocs>を起動する前に、シンボリックリンクの指し示す先が実際には存在"
"しないディレクトリへのシンボリックリンクをパッケージの文章ディレクトリとし"
"て、あらかじめ作成しておくという手があります。）"

#. type: textblock
#: dh_installdocs:100
msgid ""
"Install these files as documentation into the first package acted on. (Or in "
"all packages if B<-A> is specified)."
msgstr ""
"作業予定の最初のパッケージに、これらのファイルを文章ファイルとしてインストー"
"ルします（あるいは、B<-A>が指定されている場合は、構築予定の全てのパッケージに"
"対してインストールします）"

#. type: textblock
#: dh_installdocs:107
msgid "This is an example of a F<debian/package.docs> file:"
msgstr "以下にF<debian/package.docs>ファイルの中身の例を載せます："

#. type: verbatim
#: dh_installdocs:109
#, no-wrap
msgid ""
"  README\n"
"  TODO\n"
"  debian/notes-for-maintainers.txt\n"
"  docs/manual.txt\n"
"  docs/manual.pdf\n"
"  docs/manual-html/\n"
"\n"
msgstr ""
"  README\n"
"  TODO\n"
"  debian/notes-for-maintainers.txt\n"
"  docs/manual.txt\n"
"  docs/manual.pdf\n"
"  docs/manual-html/\n"
"\n"

#. type: textblock
#: dh_installdocs:118
msgid ""
"Note that B<dh_installdocs> will happily copy entire directory hierarchies "
"if you ask it to (similar to B<cp -a>). If it is asked to install a "
"directory, it will install the complete contents of the directory."
msgstr ""
"B<dh_installdocs>は、B<cp -a>と同じようにディレクトリ全体の階層まるごとコピー"
"するように指定するのが良いと思われます。これはディレクトリをインストールする"
"ように指定する事により行い、この場合、ディレクトリの中身全部がインストールさ"
"れます。"

#. type: textblock
#: dh_installemacsen:5
msgid "dh_installemacsen - register an Emacs add on package"
msgstr "dh_installemacsen - Emacsのアドオンパッケージを登録します"

#. type: textblock
#: dh_installemacsen:14
msgid ""
"B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[B<--flavor=>I<foo>]"
msgstr ""
"B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[B<--flavor=>I<foo>]"

#. type: textblock
#: dh_installemacsen:18
msgid ""
"B<dh_installemacsen> is a debhelper program that is responsible for "
"installing files used by the Debian B<emacsen-common> package into package "
"build directories."
msgstr ""
"B<dh_installemacsen>は、Debian B<emacsen-common>パッケージに利用されるファイ"
"ルをパッケージビルドディレクトリへインストールする役目のdebhelperプログラムで"
"す。"

#. type: textblock
#: dh_installemacsen:22
msgid ""
"It also automatically generates the F<postinst> and F<prerm> commands needed "
"to register a package as an Emacs add on package. The commands are added to "
"the maintainer scripts by B<dh_installdeb>. See L<dh_installdeb(1)> for an "
"explanation of how this works."
msgstr ""
"Emacsアドオンパッケージを登録するのに必要なF<postinst>やF<prerm>を機械的に生"
"成します。B<dh_installdeb>により、これらコマンドはメンテナスクリプトに追加さ"
"れます。どのような動作を行うかについての説明は、L<dh_installdeb(1)>を参照くだ"
"さい。"

#. type: =item
#: dh_installemacsen:31
msgid "debian/I<package>.emacsen-install"
msgstr "debian/I<package>.emacsen-install"

#. type: textblock
#: dh_installemacsen:33
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/install/package> in the "
"package build directory."
msgstr ""
"パッケージビルドディレクトリにあるF<usr/lib/emacsen-common/packages/install/"
"package>へインストールするものを指定します。"

#. type: =item
#: dh_installemacsen:36
msgid "debian/I<package>.emacsen-remove"
msgstr "debian/I<package>.emacsen-remove"

#. type: textblock
#: dh_installemacsen:38
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/remove/package> in the "
"package build directory."
msgstr ""
"パッケージビルドディレクトリにある、F<usr/lib/emacsen-common/packages/remove/"
"package>へインストールするものを指定します。"

#. type: =item
#: dh_installemacsen:41
msgid "debian/I<package>.emacsen-startup"
msgstr "debian/I<package>.emacsen-startup"

#. type: textblock
#: dh_installemacsen:43
msgid ""
"Installed into etc/emacs/site-start.d/50I<package>.el in the package build "
"directory. Use B<--priority> to use a different priority than 50."
msgstr ""
"パッケージビルドディレクトリのetc/emacs/site-start.d/50I<package>.elへインス"
"トールするものを指定します。B<--priority>を使うと優先順位50以外を指定できま"
"す。"

#. type: textblock
#: dh_installemacsen:54 dh_python:62 dh_usrlocal:45
msgid "Do not modify F<postinst>/F<prerm> scripts."
msgstr "F<postinst>/F<prerm>を変更しません。"

#. type: =item
#: dh_installemacsen:56 dh_installwm:38
msgid "B<--priority=>I<n>"
msgstr "B<--priority=>I<n>"

#. type: textblock
#: dh_installemacsen:58
msgid "Sets the priority number of a F<site-start.d> file. Default is 50."
msgstr ""
"F<site-start.d>ファイルに関して、優先順位を指定します。特に指定無き場合、50が"
"指定されます。"

#. type: =item
#: dh_installemacsen:60
msgid "B<--flavor=>I<foo>"
msgstr "B<--flavor=>I<foo>"

#. type: textblock
#: dh_installemacsen:62
msgid ""
"Sets the flavor a F<site-start.d> file will be installed in. Default is "
"B<emacs>, alternatives include B<xemacs> and B<emacs20>."
msgstr ""
"インストール予定のF<site-start.d>ファイルの形式を設定します。特に指定無き場"
"合、B<emacs>が利用されます。他には、B<xemacs>、B<emacs20>形式が存在します。"

#. type: textblock
#: dh_installexamples:5
msgid ""
"dh_installexamples - install example files into package build directories"
msgstr ""
"dh_installexamples - 例を示すファイルをビルドディレクトリへインストールします"

#. type: textblock
#: dh_installexamples:14
msgid ""
"B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"

#. type: textblock
#: dh_installexamples:18
msgid ""
"B<dh_installexamples> is a debhelper program that is responsible for "
"installing examples into F<usr/share/doc/package/examples> in package build "
"directories."
msgstr ""
"B<dh_installexamples>はパッケージビルドディレクトリにあるF<usr/share/doc/"
"package/examples>へ例を示すファイルをインストールする役割のdebhelperプログラ"
"ムとなります。"

#. type: =item
#: dh_installexamples:26
msgid "debian/I<package>.examples"
msgstr "debian/I<package>.examples"

#. type: textblock
#: dh_installexamples:28
msgid "Lists example files or directories to be installed."
msgstr ""
"インストールする予定の例を示すファイルもしくは、ディレクトリを指定します。"

#. type: textblock
#: dh_installexamples:38
msgid ""
"Install any files specified by command line parameters in ALL packages acted "
"on."
msgstr ""
"作業予定の全てのパッケージに対して、コマンドラインパラメタで指定されたファイ"
"ルをインストールします。"

#. type: textblock
#: dh_installexamples:48
msgid ""
"Install these files (or directories) as examples into the first package "
"acted on. (Or into all packages if B<-A> is specified.)"
msgstr ""
"作業を行う最初のパッケージに、指定されたファイル（あるいはディレクトリ）を例"
"を示す物としてインストールします（あるいは、B<-A>が指定された場合は、全ての"
"パッケージに対してインストールを行います。）"

#. type: textblock
#: dh_installexamples:55
msgid ""
"Note that B<dh_installexamples> will happily copy entire directory "
"hierarchies if you ask it to (similar to B<cp -a>). If it is asked to "
"install a directory, it will install the complete contents of the directory."
msgstr ""
"特記すべき事として、もし指定されれば（B<cp -a>のように）、ディレクトリ以下ま"
"るごとコピーするようにすると便利です。もし、インストールもとディレクトリを指"
"定すれば、本コマンドはディレクトリ以下全部をインストールします。"

#. type: textblock
#: dh_installifupdown:5
msgid "dh_installifupdown - install if-up and if-down hooks"
msgstr "dh_installifupdown - if-up、if-downフックをインストールします"

#. type: textblock
#: dh_installifupdown:14
msgid "B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installifupdown:18
msgid ""
"B<dh_installifupdown> is a debhelper program that is responsible for "
"installing F<if-up>, F<if-down>, F<if-pre-up>, and F<if-post-down> hook "
"scripts into package build directories."
msgstr ""
"B<dh_installifupdown>はF<if-up>、F<if-down>、F<if-pre-up>、F<if-post-down>"
"フックをパッケージビルドディレクトリ以下にインストールする為のdebhelperプログ"
"ラムです。"

#. type: =item
#: dh_installifupdown:26
msgid "debian/I<package>.if-up"
msgstr "debian/I<package>.if-up"

#. type: =item
#: dh_installifupdown:28
msgid "debian/I<package>.if-down"
msgstr "debian/I<package>.if-down"

#. type: =item
#: dh_installifupdown:30
msgid "debian/I<package>.if-pre-up"
msgstr "debian/I<package>.if-pre-up"

#. type: =item
#: dh_installifupdown:32
msgid "debian/I<package>.if-post-down"
msgstr "debian/I<package>.if-post-down"

#. type: textblock
#: dh_installifupdown:34
msgid ""
"These files are installed into etc/network/if-*.d/I<package> in the package "
"build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ以下にある、etc/network/if-*.d/"
"I<package>以下にインストールされます。"

#. type: textblock
#: dh_installifupdown:45
msgid ""
"Look for files named F<debian/package.name.if-*> and install them as F<etc/"
"network/if-*/name>, instead of using the usual files and installing them as "
"the package name."
msgstr ""
"F<debian/package.name.if-*>ファイルを見つけ出し、F<etc/network/if-*/name>へイ"
"ンストールします。この時、本オプションを指定しない時に行われるような、通常"
"ファイルのインストールとは違い、ファイルがパッケージ名としてインストールされ"
"る事はありません。"

#. type: textblock
#: dh_installinfo:5
msgid "dh_installinfo - install info files"
msgstr "dh_installinfo - infoファイルのインストールを行います"

#. type: textblock
#: dh_installinfo:14
msgid "B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]"
msgstr "B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]"

#. type: textblock
#: dh_installinfo:18
msgid ""
"B<dh_installinfo> is a debhelper program that is responsible for installing "
"info files into F<usr/share/info> in the package build directory."
msgstr ""
"B<dh_installinfo>は、パッケージビルドディレクトリ内のF<usr/share/info>ディレ"
"クトリ以下にinfoファイルをインストールします。"

#. type: =item
#: dh_installinfo:25
msgid "debian/I<package>.info"
msgstr "debian/I<package>.info"

#. type: textblock
#: dh_installinfo:27
msgid "List info files to be installed."
msgstr "インストールすべきinfoファイルを列挙したものです。"

#. type: textblock
#: dh_installinfo:42
msgid ""
"Install these info files into the first package acted on. (Or in all "
"packages if B<-A> is specified)."
msgstr ""
"こちらにて指定されるinfoファイルを、処理を行う最初のパッケージにインストール"
"します（B<-A>が指定されていれば、全パッケージに対してインストールされます）"

#. type: textblock
#: dh_installinit:5
#, fuzzy
msgid ""
"dh_installinit - install init scripts and/or upstart jobs into package build "
"directories"
msgstr ""
"dh_installinit - ビルドディレクトリへ、upstart用のjobファイルあるいは、initス"
"クリプトをインストールします"

#. type: textblock
#: dh_installinit:14
msgid ""
"B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] [B<-"
"R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] [B<-"
"R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_installinit:18
#, fuzzy
msgid ""
"B<dh_installinit> is a debhelper program that is responsible for installing "
"init scripts with associated defaults files, as well as upstart job files "
"into package build directories."
msgstr ""
"B<dh_installmime>はパッケージビルドディレクトリ以下にmimeファイル群をインス"
"トールする役目のdebhelperプログラムとなります。"

#. type: textblock
#: dh_installinit:22
msgid ""
"It also automatically generates the F<postinst> and F<postrm> and F<prerm> "
"commands needed to set up the symlinks in F</etc/rc*.d/> to start and stop "
"the init scripts."
msgstr ""
"本コマンドは、F</etc/rc*.d/>以下にシンボリックリンクを張り、startとstop手続き"
"を持つようなinitスクリプトをセットアップするのに必要なF<postinst>、"
"F<postrm>、F<prerm>コマンドを機械的に生成します。"

#. type: =item
#: dh_installinit:30
msgid "debian/I<package>.init"
msgstr "debian/I<package>.init"

#. type: textblock
#: dh_installinit:32
#, fuzzy
msgid ""
"If this exists, it is installed into etc/init.d/I<package> in the package "
"build directory."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下にetc/init/"
"I<package>.confファイルとしてインストールされます。"

#. type: =item
#: dh_installinit:35
msgid "debian/I<package>.default"
msgstr "debian/I<package>.default"

#. type: textblock
#: dh_installinit:37
msgid ""
"If this exists, it is installed into etc/default/I<package> in the package "
"build directory."
msgstr ""
"もしこちらが存在すれば、パッケージビルドディレクトリ内のetc/default/"
"I<package>へこのファイルをインストールします。"

#. type: =item
#: dh_installinit:40
msgid "debian/I<package>.upstart"
msgstr "debian/I<package>.upstart"

#. type: textblock
#: dh_installinit:42
msgid ""
"If this exists, it is installed into etc/init/I<package>.conf in the package "
"build directory."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下にetc/init/"
"I<package>.confファイルとしてインストールされます。"

#. type: =item
#: dh_installinit:55
msgid "B<-o>, B<--onlyscripts>"
msgstr "B<-o>, B<--onlyscripts>"

#. type: textblock
#: dh_installinit:57
msgid ""
"Only modify F<postinst>/F<postrm>/F<prerm> scripts, do not actually install "
"any init script, default files, or upstart job. May be useful if the init "
"script or upstart job is shipped and/or installed by upstream in a way that "
"doesn't make it easy to let B<dh_installinit> find it."
msgstr ""
"本オプションが指定されていると、実際にinitスクリプト、特に指定無き場合に使う"
"ファイル、upstart用jobファイルをインストールせず、F<postinst>/F<postrm>/"
"F<prerm>スクリプトを変更するだけの動作となります。もし、initスクリプトや、"
"upstart用jobファイルが、B<dh_installinit>にて容易に見つけられないようなやり方"
"で、アップストリームに含まれていたり、あるいはインストールされているような場"
"合に都合が良いです。"

#. type: =item
#: dh_installinit:62
msgid "B<-R>, B<--restart-after-upgrade>"
msgstr "B<-R>, B<--restart-after-upgrade>"

#. type: textblock
#: dh_installinit:64
msgid ""
"Do not stop the init script until after the package upgrade has been "
"completed. This is different than the default behavior, which stops the "
"script in the F<prerm>, and starts it again in the F<postinst>."
msgstr ""
"パッケージのアップグレードが完了するまでinitスクリプトのstop手続きを呼び出さ"
"ないようにします。これは本コマンドについて、特に指定無き場合の振る舞いとは異"
"なります。通常は、F<prerm>にてstop手続きが呼ばれ、F<postinst>がstart手続きを"
"再び呼び出します。"

#. type: textblock
#: dh_installinit:68
msgid ""
"This can be useful for daemons that should not have a possibly long downtime "
"during upgrade. But you should make sure that the daemon will not get "
"confused by the package being upgraded while it's running before using this "
"option."
msgstr ""
"このオプションは、アップグレード中に長く動作が停止してはいけないようなdaemon"
"を扱う際に便利です。しかしながら、このオプションを利用してdh_installinitが処"
"理をしている間のアップグレード途中のパッケージをdaemonが参照して混乱しないこ"
"とを保証する必要があります。"

#. type: =item
#: dh_installinit:73
msgid "B<-r>, B<--no-restart-on-upgrade>"
msgstr "B<-r>, B<--no-restart-on-upgrade>"

#. type: textblock
#: dh_installinit:75
msgid "Do not stop init script on upgrade."
msgstr "initスクリプトをアップグレード中には停止させません。"

#. type: =item
#: dh_installinit:77
msgid "B<--no-start>"
msgstr "B<--no-start>"

#. type: textblock
#: dh_installinit:79
msgid ""
"Do not start the init script on install or upgrade, or stop it on removal.  "
"Only call B<update-rc.d>. Useful for rcS scripts."
msgstr ""
"インストール時、あるいはアップグレード時にinitスクリプトをstartさせません。あ"
"るいは、パッケージを削除する時にもstop手続きが呼ばれなくなります。その一方"
"で、B<update-rc.d>のみ呼び出されます。本オプションはrcSスクリプトをインストー"
"ルする際に便利です。"

#. type: =item
#: dh_installinit:82
msgid "B<-d>, B<--remove-d>"
msgstr "B<-d>, B<--remove-d>"

#. type: textblock
#: dh_installinit:84
#, fuzzy
msgid ""
"Remove trailing B<d> from the name of the package, and use the result for "
"the filename the upstart job file is installed as in F<etc/init/> , and for "
"the filename the init script is installed as in etc/init.d and the default "
"file is installed as in F<etc/default/> . This may be useful for daemons "
"with names ending in B<d>. (Note: this takes precedence over the B<--init-"
"script> parameter described below.)"
msgstr ""
"パッケージ名の最後のB<d>を取り除いたものをF<etc/init/>以下にインストールする"
"upstart用jobファイルの名前として利用します。あるいは、etc/init.d以下にインス"
"トールするinitスクリプトの名前として利用します。さらに、F<etc/default/>以下に"
"インストールされる特に指定無き場合のファイルとしても利用します。これは、名前"
"の最後がB<d>で終わるようなdaemonプログラムに便利な場合があります（後に述べる"
"B<--init-script>パラメタが作用するより前に実行されます。）"

#. type: =item
#: dh_installinit:91
msgid "B<-u>I<params> B<--update-rcd-params=>I<params>"
msgstr "B<-u>I<params> B<--update-rcd-params=>I<params>"

#. type: textblock
#: dh_installinit:95
msgid ""
"Pass I<params> to L<update-rc.d(8)>. If not specified, B<defaults> will be "
"passed to L<update-rc.d(8)>."
msgstr ""
"I<params>をL<update-rc.d(8)>へ引き渡します。もし指定されていなければ、"
"B<defaults>パラメタがL<update-rc.d(8)>へ引き渡されます。"

#. type: textblock
#: dh_installinit:100
#, fuzzy
msgid ""
"Install the init script (and default file) as well as upstart job file using "
"the filename I<name> instead of the default filename, which is the package "
"name. When this parameter is used, B<dh_installinit> looks for and installs "
"files named F<debian/package.name.init>, F<debian/package.name.default> and "
"F<debian/package.name.upstart> instead of the usual F<debian/package.init>, "
"F<debian/package.default> and F<debian/package.upstart>."
msgstr ""
"パッケージの名前を持つ特に指定無き場合のファイルの代わりに、I<name>をファイル"
"名とするファイルを、upstart用jobファイルや、initスクリプト（あるいは特に指定"
"無き場合のファイル）として利用します。このパラメタが利用されると、"
"B<dh_installinit>はF<debian/package.name.upstart>、F<debian/package.name."
"init>、F<debian/package.name.default>を探し、インストールを行います。この場"
"合、通常使われるF<debian/package.upstart>、F<debian/package.init>、F<debian/"
"package.default>は利用されません。"

#. type: =item
#: dh_installinit:108
msgid "B<--init-script=>I<scriptname>"
msgstr "B<--init-script=>I<scriptname>"

#. type: textblock
#: dh_installinit:110
msgid ""
"Use I<scriptname> as the filename the init script is installed as in F<etc/"
"init.d/> (and also use it as the filename for the defaults file, if it is "
"installed). If you use this parameter, B<dh_installinit> will look to see if "
"a file in the F<debian/> directory exists that looks like F<package."
"scriptname> and if so will install it as the init script in preference to "
"the files it normally installs."
msgstr ""
"I<scriptname>をF<etc/init.d/>以下にインストールするinitスクリプトのファイル名"
"として利用します（特に指定無き場合のファイルがインストールされるなら、その時"
"の名前として利用する場合もあります）。もしこのパラメタを利用すると、"
"B<dh_installinit>はF<debian/>ディレクトリ以下にF<package.scriptname>のような"
"名前のファイルがあるかどうかを探し、通常インストールするファイルよりも、優先"
"してこのような名前を持つファイルをinitスクリプトとして扱うようになります。"

#. type: textblock
#: dh_installinit:117
#, fuzzy
msgid ""
"This parameter is deprecated, use the B<--name> parameter instead. This "
"parameter is incompatible with the use of upstart jobs."
msgstr ""
"このパラメタは廃止されています。代わりにB<--name>パラメタを利用ください。なお"
"このパラメタはupstart用jobファイルをインストールする際には完全に無視されま"
"す。"

#. type: =item
#: dh_installinit:120
msgid "B<--error-handler=>I<function>"
msgstr "B<--error-handler=>I<function>"

#. type: textblock
#: dh_installinit:122
msgid ""
"Call the named shell I<function> if running the init script fails. The "
"function should be provided in the F<prerm> and F<postinst> scripts, before "
"the B<#DEBHELPER#> token."
msgstr ""
"もしinitスクリプトの動作が失敗に終わった時、シェル関数のI<function>を呼び出す"
"ようにします。この関数は、F<prerm>やF<postinst>の中で定義されていなければなら"
"ず、また、B<#DEBHELPER#>句が現れるよりも前に定義されている必要があります。 "

#. type: =head1
#: dh_installinit:262
msgid "AUTHORS"
msgstr "作者"

#. type: textblock
#: dh_installinit:266
msgid "Steve Langasek <steve.langasek@canonical.com>"
msgstr "Steve Langasek <steve.langasek@canonical.com>"

#. type: textblock
#: dh_installlogcheck:5
msgid "dh_installlogcheck - install logcheck rulefiles into etc/logcheck/"
msgstr ""
"dh_installlogcheck - etc/logcheck/以下にlogcheck用ルール定義ファイルをインス"
"トールします"

#. type: textblock
#: dh_installlogcheck:14
msgid "B<dh_installlogcheck> [S<I<debhelper options>>]"
msgstr "B<dh_installlogcheck> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installlogcheck:18
msgid ""
"B<dh_installlogcheck> is a debhelper program that is responsible for "
"installing logcheck rule files."
msgstr ""
"B<dh_installlogcheck>はlogcheck用ルール定義ファイルをインストールする役目の"
"debhelperプログラムとなります。"

#. type: =item
#: dh_installlogcheck:25
msgid "debian/I<package>.logcheck.cracking"
msgstr "debian/I<package>.logcheck.cracking"

#. type: =item
#: dh_installlogcheck:27
msgid "debian/I<package>.logcheck.violations"
msgstr "debian/I<package>.logcheck.violations"

#. type: =item
#: dh_installlogcheck:29
msgid "debian/I<package>.logcheck.violations.ignore"
msgstr "debian/I<package>.logcheck.violations.ignore"

#. type: =item
#: dh_installlogcheck:31
msgid "debian/I<package>.logcheck.ignore.workstation"
msgstr "debian/I<package>.logcheck.ignore.workstation"

#. type: =item
#: dh_installlogcheck:33
msgid "debian/I<package>.logcheck.ignore.server"
msgstr "debian/I<package>.logcheck.ignore.server"

#. type: =item
#: dh_installlogcheck:35
msgid "debian/I<package>.logcheck.ignore.paranoid"
msgstr "debian/I<package>.logcheck.ignore.paranoid"

#. type: textblock
#: dh_installlogcheck:37
msgid ""
"Each of these files, if present, are installed into corresponding "
"subdirectories of F<etc/logcheck/> in package build directories."
msgstr ""
"もし、これらファイルが存在すれば、パッケージビルドディレクトリ内のF<etc/"
"logcheck/>サブディレクトリ以下にファイルに応じてインストールされます。"

#. type: textblock
#: dh_installlogcheck:48
msgid ""
"Look for files named F<debian/package.name.logcheck.*> and install them into "
"the corresponding subdirectories of F<etc/logcheck/>, but use the specified "
"name instead of that of the package."
msgstr ""
"F<debian/package.name.logcheck.*>の名前を持つファイルを探し、これらをF<etc/"
"logcheck/>以下の各ファイルに応じた場所へインストールします。この時、パッケー"
"ジの名前を使わず指定された名前を利用します。"

#. type: verbatim
#: dh_installlogcheck:82
#, no-wrap
msgid ""
"This program is a part of debhelper.\n"
"    \n"
msgstr ""
"このプログラムはdebhelperの一部です。\n"
"\n"

#. type: textblock
#: dh_installlogcheck:86
msgid "Jon Middleton <jjm@debian.org>"
msgstr "Jon Middleton <jjm@debian.org>"

#. type: textblock
#: dh_installlogrotate:5
msgid "dh_installlogrotate - install logrotate config files"
msgstr "dh_installlogrotate - logrotate用設定ファイルをインストールします"

#. type: textblock
#: dh_installlogrotate:14
msgid "B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installlogrotate:18
msgid ""
"B<dh_installlogrotate> is a debhelper program that is responsible for "
"installing logrotate config files into F<etc/logrotate.d> in package build "
"directories.  Files named F<debian/package.logrotate> are installed."
msgstr ""
"B<dh_installlogrotate>はパッケージビルドディレクトリ内にあるF<etc/logrotate."
"d>へlogrotate用設定ファイルをインストールする役目のdebhelperプログラムとなり"
"ます。F<debian/package.logrotate>という名前を持つファイル群がインストールされ"
"ます。"

#. type: textblock
#: dh_installlogrotate:28
msgid ""
"Look for files named F<debian/package.name.logrotate> and install them as "
"F<etc/logrotate.d/name>, instead of using the usual files and installing "
"them as the package name."
msgstr ""
"F<debian/package.name.logrotate>という名前を持つファイルを探し、F<etc/"
"logrotate.d/name>としてインストールを行います。この場合、通常使うファイルを利"
"用せず、パッケージ名を持つファイルとしてインストールは行いません。"

#. type: textblock
#: dh_installman:5
msgid "dh_installman - install man pages into package build directories"
msgstr ""
"dh_installman - パッケージビルドディレクトリ以下にmanページをインストールしま"
"す"

#. type: textblock
#: dh_installman:15
msgid "B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]"
msgstr "B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]"

#. type: textblock
#: dh_installman:19
#, fuzzy
msgid ""
"B<dh_installman> is a debhelper program that handles installing man pages "
"into the correct locations in package build directories. You tell it what "
"man pages go in your packages, and it figures out where to install them "
"based on the section field in their B<.TH> or B<.Dt> line. If you have a "
"properly formatted B<.TH> or B<.Dt> line, your man page will be installed "
"into the right directory, with the right name (this includes proper handling "
"of pages with a subsection, like B<3perl>, which are placed in F<man3>, and "
"given an extension of F<.3perl>). If your B<.TH> or B<.Dt> line is incorrect "
"or missing, the program may guess wrong based on the file extension."
msgstr ""
"B<dh_installman>は、パッケージビルドディレクトリ内の正しい位置にmanページをイ"
"ンストールするdebhelperプログラムです。パッケージにどんなmanページが入ってい"
"るかを指定すると、各manページに記載されているB<.TH>行にある章番号に基づきman"
"ページをどこにインストールすれば良いかを見つけ出します。書式どおりの正しいB<."
"TH>があれば、そのmanページは正しいディレクトリに、正しい名前でインストールさ"
"れます（これは、例えばB<3perl>であれば、適切なサブセクションに対するmanページ"
"として扱われ、F<man3>以下にインストールされ、F<.3perl>という拡張子が与えられ"
"るという事も含みます。）もし、B<.TH>が間違っていたり、あるいはなかったりした"
"場合、プログラムはインストールしようとしているmanページのファイルの拡張子か"
"ら、間違った判断をする可能性があります。"

#. type: textblock
#: dh_installman:29
msgid ""
"It also supports translated man pages, by looking for extensions like F<."
"ll.8> and F<.ll_LL.8>, or by use of the B<--language> switch."
msgstr ""
"このコマンドは翻訳されたmanページについても、F<.ll.8>やF<.ll_LL.8>の拡張子に"
"持つファイルを探す事により、あるいは、B<--language>を指定することによって扱い"
"ます。"

#. type: textblock
#: dh_installman:32
#, fuzzy
msgid ""
"If B<dh_installman> seems to install a man page into the wrong section or "
"with the wrong extension, this is because the man page has the wrong section "
"listed in its B<.TH> or B<.Dt> line. Edit the man page and correct the "
"section, and B<dh_installman> will follow suit. See L<man(7)> for details "
"about the B<.TH> section, and L<mdoc(7)> for the B<.Dt> section. If "
"B<dh_installman> seems to install a man page into a directory like F</usr/"
"share/man/pl/man1/>, that is because your program has a name like F<foo.pl>, "
"and B<dh_installman> assumes that means it is translated into Polish. Use "
"B<--language=C> to avoid this."
msgstr ""
"B<dh_installman>が間違った章番号や、間違った拡張子をつけてmanページをインス"
"トールするように見えるときがあります。これは、manページが間違った章番号をB<."
"TH>行に列挙しているのが原因となります。この場合、manページを編集して、章番号"
"を正しくすれば、B<dh_installman>は意図どおりに動作するようになります。B<.TH>"
"章についての詳細はL<man(7)>を参照ください。また、B<dh_installman>がF</usr/"
"share/man/pl/man1/>のようなディレクトリへmanページをインストールしてしまう場"
"合があります。これは、パッケージにF<foo.pl>のような名前を持つファイルがあり、"
"B<dh_installman>がこれをポーランド語への翻訳済みmanページと勘違いする時となり"
"ます。この動作を避けるには、B<--language=C>を利用してください。"

#. type: textblock
#: dh_installman:42
msgid ""
"After the man page installation step, B<dh_installman> will check to see if "
"any of the man pages in the temporary directories of any of the packages it "
"is acting on contain F<.so> links. If so, it changes them to symlinks."
msgstr ""
"B<dh_installman>は、manページをインストールした後に、処理を行ったパッケージ内"
"の一時ディレクトリ以下にある全manページを対象に、F<.so>リンクを含むかどうかを"
"確認します。もし存在するようであれば、そのmanページ本体をシンボリックリンクへ"
"変更します。"

#. type: textblock
#: dh_installman:46
msgid ""
"Also, B<dh_installman> will use man to guess the character encoding of each "
"manual page and convert it to UTF-8. If the guesswork fails for some reason, "
"you can override it using an encoding declaration. See L<manconv(1)> for "
"details."
msgstr ""
"また、B<dh_installman>はmanコマンドを使って、manページの文字コードを推定し、"
"UTF-8に変換します。この推定作業は失敗に終わる事があるので、文字コード宣言文を"
"使って検出されるべき文字コードの情報を上書きできます。詳細についてはL<manconv"
"(1)>を参照ください。"

#. type: =item
#: dh_installman:55
msgid "debian/I<package>.manpages"
msgstr "debian/I<package>.manpages"

#. type: textblock
#: dh_installman:57
msgid "Lists man pages to be installed."
msgstr "インストールされるべきmanページを列挙したものとなります。"

#. type: =item
#: dh_installman:70
msgid "B<--language=>I<ll>"
msgstr "B<--language=>I<ll>"

#. type: textblock
#: dh_installman:72
msgid ""
"Use this to specify that the man pages being acted on are written in the "
"specified language."
msgstr ""
"処理予定のmanページがどんな言語で記載されているかをこちらのオプションを使って"
"指定します。"

#. type: =item
#: dh_installman:75
msgid "I<manpage> ..."
msgstr "I<manpage> ..."

#. type: textblock
#: dh_installman:77
msgid ""
"Install these man pages into the first package acted on. (Or in all packages "
"if B<-A> is specified)."
msgstr ""
"最初に処理するパッケージにこれらのmanページをインストールします（あるいは、"
"B<-A>が指定された場合は、全パッケージにインストールを行います）"

#. type: textblock
#: dh_installman:84
msgid ""
"An older version of this program, L<dh_installmanpages(1)>, is still used by "
"some packages, and so is still included in debhelper.  It is, however, "
"deprecated, due to its counterintuitive and inconsistent interface. Use this "
"program instead."
msgstr ""
"本プログラムの昔のバージョンのプログラムであるL<dh_installmanpages(1)>を未だ"
"に利用しているパッケージが存在します。また、L<dh_installmanpages(1)>は未だに"
"debhelperに梱包されています。しかしながら、このプログラムは、非直感的で統一さ"
"れていないインターフェースの為に、すでに廃止となっています。代わりに本プログ"
"ラムを使ってください。"

#. type: textblock
#: dh_installmanpages:5
msgid "dh_installmanpages - old-style man page installer (deprecated)"
msgstr ""
"dh_installmanpages - 以前のバージョンのmanページのインストール用プログラムで"
"す(廃止)"

#. type: textblock
#: dh_installmanpages:15
msgid "B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr "B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]"

#. type: textblock
#: dh_installmanpages:19
msgid ""
"B<dh_installmanpages> is a debhelper program that is responsible for "
"automatically installing man pages into F<usr/share/man/> in package build "
"directories."
msgstr ""
"B<dh_installmanpages>はパッケージビルドディレクトリ以下にあるF<usr/share/man/"
">ディレクトリへmanページを機械的にインストールする役目のdebhelperプログラムで"
"す。"

#. type: textblock
#: dh_installmanpages:23
msgid ""
"This is a DWIM-style program, with an interface unlike the rest of "
"debhelper. It is deprecated, and you are encouraged to use L<dh_installman(1)"
"> instead."
msgstr ""
"これは、いわゆる「良きに計らえ(DWIM)」という能力を持つプログラムです。その"
"為、他のdebhelperとはインターフェース仕様が異なります。本プログラムは廃止され"
"ており、できる限りL<dh_installman(1)>コマンドを使ってください。"

#. type: textblock
#: dh_installmanpages:27
msgid ""
"B<dh_installmanpages> scans the current directory and all subdirectories for "
"filenames that look like man pages. (Note that only real files are looked "
"at; symlinks are ignored.) It uses L<file(1)> to verify that the files are "
"in the correct format. Then, based on the files' extensions, it installs "
"them into the correct man directory."
msgstr ""
"B<dh_installmanpages>はmanページらしき名前を持つファイルを、現在のディレクト"
"リや、現在のディレクトリ以下の全てのサブディレクトリで探し回ります（ファイル"
"の実体のみ対象となります。つまり、シンボリックリンクは無視されます。）本プロ"
"グラムは、L<file(1)> コマンドを使ってファイルが正しいフォーマットであるかを検"
"証します。その為、拡張子にしたがい、処理対象のmanページを正しいmanページ用"
"ディレクトリへインストールします。"

#. type: textblock
#: dh_installmanpages:33
msgid ""
"All filenames specified as parameters will be skipped by "
"B<dh_installmanpages>.  This is useful if by default it installs some man "
"pages that you do not want to be installed."
msgstr ""
"パラメタとして指定されているファイルは、全てB<dh_installmanpages>により無視さ"
"れます。もし、特に指定無き場合に意図しない場所にmanページがインストールされて"
"しまう場合に便利です。"

#. type: textblock
#: dh_installmanpages:37
msgid ""
"After the man page installation step, B<dh_installmanpages> will check to "
"see if any of the man pages are F<.so> links. If so, it changes them to "
"symlinks."
msgstr ""
"manページのインストールが終わったあと、B<dh_installmanpages>は処理対象のman"
"ページがF<.so>リンクの対象であるかどうかを調べます。もしそうであれば、こちら"
"をシンボリックリンクへ変更します。"

#. type: textblock
#: dh_installmanpages:46
msgid ""
"Do not install these files as man pages, even if they look like valid man "
"pages."
msgstr ""
"有効なmanページのようにみえても、これらファイルをmanページとしてインストール"
"しないようにします。"

#. type: =head1
#: dh_installmanpages:51
msgid "BUGS"
msgstr "バグ"

#. type: textblock
#: dh_installmanpages:53
msgid ""
"B<dh_installmanpages> will install the man pages it finds into B<all> "
"packages you tell it to act on, since it can't tell what package the man "
"pages belong in. This is almost never what you really want (use B<-p> to "
"work around this, or use the much better L<dh_installman(1)> program "
"instead)."
msgstr ""
"B<dh_installmanpages>は作業するように指定したB<全パッケージ>で発見したmanペー"
"ジをいっぺんにインストールしてしまいます。これは、どのパッケージにどのmanペー"
"ジが対応しているかについて指定する方法がない為です。この動作は多くのケースで"
"必ずしも望ましくない動作となります（B<-p>を指定する事により、本問題を回避でき"
"ますが、もっと良いのは、L<dh_installman(1)>を代わりに使う事です。）"

#. type: textblock
#: dh_installmanpages:58
msgid "Files ending in F<.man> will be ignored."
msgstr "F<.man>でファイル名が終わっているファイルは無視されます。"

#. type: textblock
#: dh_installmanpages:60
msgid ""
"Files specified as parameters that contain spaces in their filenames will "
"not be processed properly."
msgstr ""
"スペースを含むファイル名を持つファイルをパラメタに指定すると、正しく扱われま"
"せん。"

#. type: textblock
#: dh_installmenu:5
msgid ""
"dh_installmenu - install Debian menu files into package build directories"
msgstr ""
"dh_installmenu - パッケージビルドディレクトリへDebianメニューファイルをインス"
"トールします"

#. type: textblock
#: dh_installmenu:14
msgid "B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]"
msgstr "B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_installmenu:18
msgid ""
"B<dh_installmenu> is a debhelper program that is responsible for installing "
"files used by the Debian B<menu> package into package build directories."
msgstr ""
"B<dh_installmenu>はDebian B<menu>パッケージを使ってパッケージビルドディレクト"
"リ以下にファイルをインストールする役目のdebhelperプログラムです。"

#. type: textblock
#: dh_installmenu:21
msgid ""
"It also automatically generates the F<postinst> and F<postrm> commands "
"needed to interface with the Debian B<menu> package. These commands are "
"inserted into the maintainer scripts by L<dh_installdeb(1)>."
msgstr ""
"このプログラムは、Debian B<menu>と連携するのに必要な内容を含むF<postinst>と"
"F<postrm>コマンドを機械的に生成します。生成されたF<postinst>とF<postrm>コマン"
"ドはL<dh_installdeb(1)>によりメンテナスクリプトへ組み込まれます。"

#. type: =item
#: dh_installmenu:29
msgid "debian/I<package>.menu"
msgstr "debian/I<package>.menu"

#. type: textblock
#: dh_installmenu:31
msgid ""
"Debian menu files, installed into usr/share/menu/I<package> in the package "
"build directory. See L<menufile(5)> for its format."
msgstr ""
"Debianメニューファイルとなります。こちらはパッケージビルドディレクトリ以下の"
"usr/share/menu/I<package>へインストールされます。フォーマットについては、"
"L<menufile(5)> を参照ください。"

#. type: =item
#: dh_installmenu:34
msgid "debian/I<package>.menu-method"
msgstr "debian/I<package>.menu-method"

#. type: textblock
#: dh_installmenu:36
msgid ""
"Debian menu method files, installed into etc/menu-methods/I<package> in the "
"package build directory."
msgstr ""
"Debianメニューメソッドファイルです。こちらはパッケージビルドディレクトリ以下"
"にあるetc/menu-methods/I<package>へインストールされます。"

#. type: textblock
#: dh_installmenu:47 dh_installmime:47 dh_makeshlibs:79
msgid "Do not modify F<postinst>/F<postrm> scripts."
msgstr "F<postinst>/F<postrm>スクリプトを変更しません。"

#. type: textblock
#: dh_installmenu:89
msgid "L<debhelper(7)> L<update-menus(1)> L<menufile(5)>"
msgstr "L<debhelper(7)> L<update-menus(1)> L<menufile(5)>"

#. type: textblock
#: dh_installmime:5
msgid "dh_installmime - install mime files into package build directories"
msgstr ""
"dh_installmime - mimeファイルをパッケージビルドディレクトリ以下へインストール"
"します"

#. type: textblock
#: dh_installmime:14
msgid "B<dh_installmime> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_installmime> [S<I<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_installmime:18
msgid ""
"B<dh_installmime> is a debhelper program that is responsible for installing "
"mime files into package build directories."
msgstr ""
"B<dh_installmime>はパッケージビルドディレクトリ以下にmimeファイル群をインス"
"トールする役目のdebhelperプログラムとなります。"

#. type: textblock
#: dh_installmime:21
msgid ""
"It also automatically generates the F<postinst> and F<postrm> commands "
"needed to interface with the debian B<mime-support> and B<shared-mime-info> "
"packages. These commands are inserted into the maintainer scripts by "
"L<dh_installdeb(1)>."
msgstr ""
"本コマンドは、debianシステムのB<mime-support>とB<shared-mime-info>パッケージ"
"と連携する為のF<postinst>とF<postrm>コマンドを機械的に生成します。これら"
"F<postinst>とF<postrm>はL<dh_installdeb(1)>によりメンテナスクリプトへ挿入され"
"ます。"

#. type: =item
#: dh_installmime:29
msgid "debian/I<package>.mime"
msgstr "debian/I<package>.mime"

#. type: textblock
#: dh_installmime:31
msgid ""
"Installed into usr/lib/mime/packages/I<package> in the package build "
"directory."
msgstr ""
"パッケージビルドディレクトリ内のusr/lib/mime/packages/I<package>へインストー"
"ルされます。"

#. type: =item
#: dh_installmime:34
msgid "debian/I<package>.sharedmimeinfo"
msgstr "debian/I<package>.sharedmimeinfo"

#. type: textblock
#: dh_installmime:36
msgid ""
"Installed into /usr/share/mime/packages/I<package>.xml in the package build "
"directory."
msgstr ""
"パッケージビルドディレクトリ内の/usr/share/mime/packages/I<package>.xmlへイン"
"ストールされます。"

#. type: textblock
#: dh_installmodules:5
msgid "dh_installmodules - register modules with modutils"
msgstr "dh_installmodules - modutilsによりカーネルモジュールを登録します"

#. type: textblock
#: dh_installmodules:16
msgid ""
"B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]"
msgstr ""
"B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installmodules:20
msgid ""
"B<dh_installmodules> is a debhelper program that is responsible for "
"registering kernel modules."
msgstr ""
"B<dh_installmodules>は、カーネルモジュールを登録する役目のdebhelperプログラム"
"です。"

#. type: textblock
#: dh_installmodules:23
msgid ""
"Kernel modules are searched for in the package build directory and if found, "
"F<preinst>, F<postinst> and F<postrm> commands are automatically generated "
"to run B<depmod> and register the modules when the package is installed.  "
"These commands are inserted into the maintainer scripts by L<dh_installdeb(1)"
">."
msgstr ""
"パッケージビルドディレクトリ以下にて、カーネルモジュールを探し、見つけると、"
"F<preinst>、F<postinst>、F<postrm>コマンドが機械的に生成されます。これらコマ"
"ンドは、パッケージをインストールする際に、B<depmod>を起動し、カーネルモジュー"
"ルを登録するような内容となっております。これらのコマンドはL<dh_installdeb(1)>"
"によりメンテナスクリプトへ挿入されます。 "

#. type: =item
#: dh_installmodules:33
msgid "debian/I<package>.modprobe"
msgstr "debian/I<package>.modprobe"

#. type: textblock
#: dh_installmodules:35
msgid ""
"Installed to etc/modprobe.d/I<package>.conf in the package build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ以下のetc/modprobe.d/"
"I<package>.confへインストールされます。"

#. type: =item
#: dh_installmodules:37
msgid "debian/I<package>.modules"
msgstr "debian/I<package>.modules"

#. type: textblock
#: dh_installmodules:39
msgid ""
"These files were installed for use by modutils, but are now not used and "
"B<dh_installmodules> will warn if these files are present."
msgstr ""
"これらファイルは、modutilsにより利用されるためにインストールされていました。"
"しかしながら、現在では、これらファイルは利用されておらず、もしこれらファイル"
"が存在するとB<dh_installmodules>は警告を発します。"

#. type: textblock
#: dh_installmodules:50
msgid "Do not modify F<preinst>/F<postinst>/F<postrm> scripts."
msgstr "F<preinst>/F<postinst>/F<postrm>スクリプトを変更しません。"

#. type: textblock
#: dh_installmodules:54
msgid ""
"When this parameter is used, B<dh_installmodules> looks for and installs "
"files named debian/I<package>.I<name>.modprobe instead of the usual debian/"
"I<package>.modprobe"
msgstr ""
"このパラメタが利用されると、B<dh_installmodules>は通常利用するdebian/"
"I<package>.modprobeファイルの代わりにdebian/I<package>.I<name>.modprobeファイ"
"ルをインストールします。"

#. type: textblock
#: dh_installpam:5
msgid "dh_installpam - install pam support files"
msgstr "dh_installpam - pamのサポートファイルをインストールします"

#. type: textblock
#: dh_installpam:14
msgid "B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installpam:18
msgid ""
"B<dh_installpam> is a debhelper program that is responsible for installing "
"files used by PAM into package build directories."
msgstr ""
"B<dh_installpam>はパッケージビルドディレクトリ以下にPAMで利用するファイルをイ"
"ンストールする役目のdebhelperプログラムとなります。"

#. type: =item
#: dh_installpam:25
msgid "debian/I<package>.pam"
msgstr "debian/I<package>.pam"

#. type: textblock
#: dh_installpam:27
msgid "Installed into etc/pam.d/I<package> in the package build directory."
msgstr ""
"これらファイルはパッケージビルドディレクトリ内のetc/pam.d/I<package>へインス"
"トールされます。"

#. type: textblock
#: dh_installpam:37
msgid ""
"Look for files named debian/I<package>.I<name>.pam and install them as etc/"
"pam.d/I<name>, instead of using the usual files and installing them using "
"the package name."
msgstr ""
"debian/I<package>.I<name>.pamと名のつくファイルを探し、etc/pam.d/I<name>以下"
"にこれらのファイルをインストールします。こちらのオプションを利用すると通常の"
"ファイルはインストール対象とはならず、パッケージの名前でインストールする動作"
"もしなくなります。"

#. type: textblock
#: dh_installppp:5
msgid "dh_installppp - install ppp ip-up and ip-down files"
msgstr "dh_installppp - ppp用のip-up、ip-downファイルをインストールします"

#. type: textblock
#: dh_installppp:14
msgid "B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installppp:18
msgid ""
"B<dh_installppp> is a debhelper program that is responsible for installing "
"ppp ip-up and ip-down scripts into package build directories."
msgstr ""
"B<dh_installppp>はppp用のip-up、ip-downスクリプトをパッケージビルドディレクト"
"リ以下にインストールする役目を持つdebhelperプログラムとなります。"

#. type: =item
#: dh_installppp:25
msgid "debian/I<package>.ppp.ip-up"
msgstr "debian/I<package>.ppp.ip-up"

#. type: textblock
#: dh_installppp:27
msgid ""
"Installed into etc/ppp/ip-up.d/I<package> in the package build directory."
msgstr ""
"これらファイルはパッケージビルドディレクトリ以下にetc/ppp/ip-up.d/I<package>"
"としてインストールされます。"

#. type: =item
#: dh_installppp:29
msgid "debian/I<package>.ppp.ip-down"
msgstr "debian/I<package>.ppp.ip-down"

#. type: textblock
#: dh_installppp:31
msgid ""
"Installed into etc/ppp/ip-down.d/I<package> in the package build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ以下にetc/ppp/ip-down.d/"
"I<package>としてインストールされます。"

#. type: textblock
#: dh_installppp:41
msgid ""
"Look for files named F<debian/package.name.ppp.ip-*> and install them as "
"F<etc/ppp/ip-*/name>, instead of using the usual files and installing them "
"as the package name."
msgstr ""
"F<debian/package.name.ppp.ip-*>と名前のつくファイルを探し、F<etc/ppp/ip-*/"
"name>以下にこれらをインストールします。こちらが指定されると、通常インストール"
"されるファイルはインストール対象とならず、また、インストールの際にパッケージ"
"の名前としてインストールする動作を行いません。"

#. type: textblock
#: dh_installudev:5
msgid "dh_installudev - install udev rules files"
msgstr "dh_installudev - udev用ルールファイルをインストールします"

#. type: textblock
#: dh_installudev:15
msgid ""
"B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] [B<--"
"priority=>I<priority>]"
msgstr ""
"B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] [B<--"
"priority=>I<priority>]"

#. type: textblock
#: dh_installudev:19
msgid ""
"B<dh_installudev> is a debhelper program that is responsible for installing "
"B<udev> rules files."
msgstr ""
"B<dh_installudev>はB<udev>用ルールファイルをインストールする役目を持つ"
"debhelperプログラムとなります。"

#. type: textblock
#: dh_installudev:22
msgid ""
"Code is added to the F<preinst> and F<postinst> to handle the upgrade from "
"the old B<udev> rules file location."
msgstr ""
"F<preinst>とF<postinst>へ、古いB<udev>ルールファイルからのアップグレードを行"
"うコードを追加します。 "

#. type: =item
#: dh_installudev:29
msgid "debian/I<package>.udev"
msgstr "debian/I<package>.udev"

#. type: textblock
#: dh_installudev:31
msgid "Installed into F<lib/udev/rules.d/> in the package build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ内のF<lib/udev/rules.d/>へイン"
"ストールされます。"

#. type: textblock
#: dh_installudev:41
msgid ""
"When this parameter is used, B<dh_installudev> looks for and installs files "
"named debian/I<package>.I<name>.udev instead of the usual debian/I<package>."
"udev."
msgstr ""
"このパラメタを利用する時は、B<dh_installudev>はdebian/I<package>.I<name>.udev"
"と名前のあるファイルを探してインストールします。通常使われるはずのdebian/"
"I<package>.udevはこのパラメタが利用されている場合は利用されません。"

#. type: =item
#: dh_installudev:45
msgid "B<--priority=>I<priority>"
msgstr "B<--priority=>I<priority>"

#. type: textblock
#: dh_installudev:47
msgid "Sets the priority string of the F<rules.d> symlink. Default is 60."
msgstr ""
"F<rules.d>シンボリックリンクの名前につける優先順位を設定します。特に指定無き"
"場合は60となります。"

#. type: textblock
#: dh_installudev:51
msgid "Do not modify F<preinst>/F<postinst> scripts."
msgstr "F<preinst>/F<postinst>スクリプトを変更しません。"

#. type: textblock
#: dh_installwm:5
msgid "dh_installwm - register a window manager"
msgstr "dh_installwm - ウィンドウマネージャを登録します"

#. type: textblock
#: dh_installwm:14
msgid ""
"B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[S<I<wm> ...>]"
msgstr ""
"B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[S<I<wm> ...>]"

#. type: textblock
#: dh_installwm:18
msgid ""
"B<dh_installwm> is a debhelper program that is responsible for generating "
"the F<postinst> and F<prerm> commands that register a window manager with "
"L<update-alternatives(8)>. The window manager's man page is also registered "
"as a slave symlink (in v6 mode and up), if it is found in F<usr/share/man/"
"man1/> in the package build directory."
msgstr ""
"B<dh_installwm>は、L<update-alternatives(8)>によりウインドウマネージャを登録"
"するようなF<postinst>とF<prerm>コマンドを生成する役割のdebhelperプログラムと"
"なります。もし、インストールしようとしているウインドウマネージャのmanページ"
"が、パッケージビルドディレクトリ以下のF<usr/share/man/man1/>に存在する場合、"
"このmanページはパッケージビルドディレクトリ以下にシンボリックリンクで登録され"
"ます(互換性レベルv6以上の場合。)"

#. type: =item
#: dh_installwm:28
msgid "debian/I<package>.wm"
msgstr "debian/I<package>.wm"

#. type: textblock
#: dh_installwm:30
msgid "List window manager programs to register."
msgstr "本プログラムが登録すべき先のウインドウマネージャを列挙したものです"

#. type: textblock
#: dh_installwm:40
msgid ""
"Set the priority of the window manager. Default is 20, which is too low for "
"most window managers; see the Debian Policy document for instructions on "
"calculating the correct value."
msgstr ""
"ウインドウマネージャの優先順位を設定します。特に指定無き場合は20であり、こち"
"らはほとんどのウインドウマネージャには低すぎる優先順位です。正しい優先順位を"
"算出する為の手順については、Debianポリシーマニュアルを参照ください。"

#. type: textblock
#: dh_installwm:46
msgid ""
"Do not modify F<postinst>/F<prerm> scripts. Turns this command into a no-op."
msgstr ""
"F<postinst>/F<prerm>スクリプトを変更しません。このコマンドにより、スクリプト"
"の動作については何も影響を与えないようにします。"

#. type: =item
#: dh_installwm:48
msgid "I<wm> ..."
msgstr "I<wm> ..."

#. type: textblock
#: dh_installwm:50
msgid "Window manager programs to register."
msgstr "登録するウインドウマネージャとなります"

#. type: textblock
#: dh_installxfonts:5
msgid "dh_installxfonts - register X fonts"
msgstr "dh_installxfonts - X用フォント群の登録を行います"

#. type: textblock
#: dh_installxfonts:14
msgid "B<dh_installxfonts> [S<I<debhelper options>>]"
msgstr "B<dh_installxfonts> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installxfonts:18
msgid ""
"B<dh_installxfonts> is a debhelper program that is responsible for "
"registering X fonts, so their corresponding F<fonts.dir>, F<fonts.alias>, "
"and F<fonts.scale> be rebuilt properly at install time."
msgstr ""
"B<dh_installxfonts>は、X用のフォントを登録し、フォントに関係するF<fonts."
"dir>、F<fonts.alias>、F<fonts.scale>を再構築して正しい内容になるようにしま"
"す。"

#. type: textblock
#: dh_installxfonts:22
msgid ""
"Before calling this program, you should have installed any X fonts provided "
"by your package into the appropriate location in the package build "
"directory, and if you have F<fonts.alias> or F<fonts.scale> files, you "
"should install them into the correct location under F<etc/X11/fonts> in your "
"package build directory."
msgstr ""
"このプログラムを呼び出す前に、パッケージビルドディレクトリ内の適切な場所に、"
"パッケージが提供しようとしているX用のフォント全部をインストールしておく必要が"
"あります。また、パッケージビルドディレクトリ以下のF<etc/X11/fonts>以下の正し"
"い場所にF<fonts.alias>やF<fonts.scale>ファイルをインストールしておく必要があ"
"ります。"

#. type: textblock
#: dh_installxfonts:28
msgid ""
"Your package should depend on B<xfonts-utils> so that the B<update-fonts-"
">I<*> commands are available. (This program adds that dependency to B<${misc:"
"Depends}>.)"
msgstr ""
"B<update-fonts->I<*>コマンドが利用可能なようにB<xfonts-utils>に対しての依存関"
"係を記載しておかなければなりません（本プログラムはB<${misc:Depends}>へ本依存"
"関係を付け加えます。）"

#. type: textblock
#: dh_installxfonts:32
msgid ""
"This program automatically generates the F<postinst> and F<postrm> commands "
"needed to register X fonts. These commands are inserted into the maintainer "
"scripts by B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of "
"how this works."
msgstr ""
"本プログラムはXフォントを登録するのに必要なF<postinst>とF<postrm>コマンドを機"
"械的に生成します。生成されるF<postinst>とF<postrm>はB<dh_installdeb>により、"
"メンテナスクリプトに挿入されます。こちらの動作については、L<dh_installdeb(1)>"
"を参照してください。"

#. type: textblock
#: dh_installxfonts:39
msgid ""
"See L<update-fonts-alias(8)>, L<update-fonts-scale(8)>, and L<update-fonts-"
"dir(8)> for more information about X font installation."
msgstr ""
"X用フォントのインストールについてさらに情報が必要な場合は、L<update-fonts-"
"alias(8)>、L<update-fonts-scale(8)>、L<update-fonts-dir(8)>を参照してくださ"
"い。"

#. type: textblock
#: dh_installxfonts:42
msgid ""
"See Debian policy, section 11.8.5. for details about doing fonts the Debian "
"way."
msgstr ""
"Debianポリシーマニュアルの11.8.5章にDebianシステム流のフォントの取扱いについ"
"ての説明がありますので参照してください。"

#. type: textblock
#: dh_link:5
msgid "dh_link - create symlinks in package build directories"
msgstr ""
"dh_link - パッケージビルドディレクトリ内でシンボリックリンクを作成します"

#. type: textblock
#: dh_link:15
msgid ""
"B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source "
"destination> ...>]"
msgstr ""
"B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source "
"destination> ...>]"

#. type: textblock
#: dh_link:19
msgid ""
"B<dh_link> is a debhelper program that creates symlinks in package build "
"directories."
msgstr ""
"B<dh_link>はパッケージビルドディレクトリ内でシンボリックリンクを作成する"
"debhelperプログラムとなります。"

#. type: textblock
#: dh_link:22
msgid ""
"B<dh_link> accepts a list of pairs of source and destination files. The "
"source files are the already existing files that will be symlinked from. The "
"destination files are the symlinks that will be created. There B<must> be an "
"equal number of source and destination files specified."
msgstr ""
"B<dh_link>コマンドはリンクを張りたい元と先のファイル名をペアにしたものの一覧"
"を受けとります。リンクを張る元のファイルはすでに実体のあるファイルを指定しま"
"す。また、リンクを張りたい先のファイル名でシンボリックリンクが作成されます。"
"リンクを張る元と先のファイル名は同じ数だけ指定B<しなければなりません。>"

#. type: textblock
#: dh_link:27
msgid ""
"Be sure you B<do> specify the full filename to both the source and "
"destination files (unlike you would do if you were using something like L<ln"
"(1)>)."
msgstr ""
"リンク元と先の完全なファイル名を指定していることをB<必ず>確かめてください"
"（L<ln(1)>か何かを使っている時とは違って入念に調べてください。）"

#. type: textblock
#: dh_link:31
msgid ""
"B<dh_link> will generate symlinks that comply with Debian policy - absolute "
"when policy says they should be absolute, and relative links with as short a "
"path as possible. It will also create any subdirectories it needs to to put "
"the symlinks in."
msgstr ""
"B<dh_link>はDebianポリシーに準拠した形でシンボリックリンクを生成します。これ"
"は、Debianポリシーで、絶対パスで指定すべきものは絶対パスで、また、相対パスの"
"場合はできる限り短いパス指定を持つシンボリックリンクを作成することになってい"
"るからです。また、シンボリックリンクを張るのにサブディレクトリの作成が必要で"
"あれば、本コマンドはサブディレクトリを作成します。"

#. type: textblock
#: dh_link:36
msgid "Any pre-existing destination files will be replaced with symlinks."
msgstr ""
"もしシンボリックリンクを作成しようとしている場所に同名のファイルが存在"
"した場合は、シンボリックリンクに置き換えられます。"

#. type: textblock
#: dh_link:38
msgid ""
"B<dh_link> also scans the package build tree for existing symlinks which do "
"not conform to Debian policy, and corrects them (v4 or later)."
msgstr ""
"B<dh_link>は、また、パッケージビルドツリー以下で、Debianポリシーマニュアル違"
"反であるようなすでに存在するシンボリックリンクを探し回り、そしてこれらを正し"
"くなるように修正します（互換性レベルv4以上で本動作となります。）"

#. type: =item
#: dh_link:45
msgid "debian/I<package>.links"
msgstr "debian/I<package>.links"

#. type: textblock
#: dh_link:47
msgid ""
"Lists pairs of source and destination files to be symlinked. Each pair "
"should be put on its own line, with the source and destination separated by "
"whitespace."
msgstr ""
"これらファイルにはお互いシンボリックリンクされるような元ファイル名と先ファイ"
"ル名のリストを列挙します。それぞれのペアは１つの行に記載されなければならず、"
"さらに元ファイル名と先ファイル名は空白で区切られていなければなりません。"

#. type: textblock
#: dh_link:59
msgid ""
"Create any links specified by command line parameters in ALL packages acted "
"on, not just the first."
msgstr ""
"コマンドラインパラメタとして指定されているリンクを、単に最初に処理するパッ"
"ケージのみではなく、作業する予定の全パッケージ対して作成します。"

#. type: textblock
#: dh_link:64
msgid ""
"Exclude symlinks that contain I<item> anywhere in their filename from being "
"corrected to comply with Debian policy."
msgstr ""
"ファイル名の一部にI<item>を含むシンボリックリンクを、Debianポリシー準拠の為の"
"リンク修正の対象から除外します。"

#. type: =item
#: dh_link:67
msgid "I<source destination> ..."
msgstr "I<source destination> ..."

#. type: textblock
#: dh_link:69
msgid ""
"Create a file named I<destination> as a link to a file named I<source>. Do "
"this in the package build directory of the first package acted on.  (Or in "
"all packages if B<-A> is specified.)"
msgstr ""
"I<source>という名前へのリンクファイルとしてI<destination>という名前のファイル"
"を作成します。最初に構築されるパッケージビルドディレクトリ以下にてこの操作を"
"行います（あるいは、B<-A>が指定されている場合は全パッケージに対して本作業を行"
"います。）"

#. type: verbatim
#: dh_link:77
#, no-wrap
msgid ""
" dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""
"dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"

#. type: textblock
#: dh_link:79
msgid "Make F<bar.1> be a symlink to F<foo.1>"
msgstr " F<foo.1>へのシンボリックリンクとしてF<bar.1>を作成します。"

#. type: verbatim
#: dh_link:81
#, no-wrap
msgid ""
" dh_link var/lib/foo usr/lib/foo \\\n"
"   usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""
"dh_link var/lib/foo usr/lib/foo \\\n"
"   usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"

#. type: textblock
#: dh_link:84
msgid ""
"Make F</usr/lib/foo/> be a link to F</var/lib/foo/>, and F<bar.1> be a "
"symlink to the F<foo.1>"
msgstr ""
"F</var/lib/foo/>へのシンボリックリンクとしてF</usr/lib/foo/>を作成します。ま"
"た、F<foo.1>へのシンボリックリンクとして、F<bar.1>を作成します。"

#. type: textblock
#: dh_lintian:5
msgid ""
"dh_lintian - install lintian override files into package build directories"
msgstr ""
"dh_lintian - パッケージビルドディレクトリ以下にlintianの振る舞いを再定義する"
"ファイルをインストールします"

#. type: textblock
#: dh_lintian:14
msgid "B<dh_lintian> [S<I<debhelper options>>]"
msgstr "B<dh_lintian> [S<I<debhelper options>>]"

#. type: textblock
#: dh_lintian:18
msgid ""
"B<dh_lintian> is a debhelper program that is responsible for installing "
"override files used by lintian into package build directories."
msgstr ""
"B<dh_lintian>は、lintianによって利用されるlintian用の再定義用ファイルを、パッ"
"ケージビルドディレクトリ以下にインストールする役目のdebhelperプログラムです。"

#. type: =item
#: dh_lintian:25
msgid "debian/I<package>.lintian-overrides"
msgstr "debian/I<package>.lintian-overrides"

#. type: textblock
#: dh_lintian:27
msgid ""
"Installed into usr/share/lintian/overrides/I<package> in the package build "
"directory. This file is used to suppress erroneous lintian diagnostics."
msgstr ""
"パッケージビルドディレクトリ以下のusr/share/lintian/overrides/I<package>へイ"
"ンストールを行います。このファイルは、lintianが誤った診断をするのを防ぐ為に利"
"用されます。"

#. type: =item
#: dh_lintian:31
msgid "F<debian/source.lintian-overrides>"
msgstr "F<debian/source.lintian-overrides>"

#. type: textblock
#: dh_lintian:33
msgid ""
"These files are not installed, but will be scanned by lintian to provide "
"overrides for the source package."
msgstr ""
"これらファイルはインストールされません。しかしながら、ソースパッケージに対す"
"る診断結果を再定義する為、lintianにて本ファイルの中身が走査されます。"

#. type: textblock
#: dh_lintian:63
msgid "L<lintian(1)>"
msgstr "L<lintian(1)>"

#. type: textblock
#: dh_lintian:67
msgid "Steve Robbins <smr@debian.org>"
msgstr "Steve Robbins <smr@debian.org>"

#. type: textblock
#: dh_listpackages:5
msgid "dh_listpackages - list binary packages debhelper will act on"
msgstr ""
"dh_listpackages - debhelperが処理するバイナリパッケージの一覧を列挙します"

#. type: textblock
#: dh_listpackages:14
msgid "B<dh_listpackages> [S<I<debhelper options>>]"
msgstr "B<dh_listpackages> [S<I<debhelper options>>]"

#. type: textblock
#: dh_listpackages:18
msgid ""
"B<dh_listpackages> is a debhelper program that outputs a list of all binary "
"packages debhelper commands will act on. If you pass it some options, it "
"will change the list to match the packages other debhelper commands would "
"act on if passed the same options."
msgstr ""
"B<dh_listpackages>は、debhelperにより処理を行う必要のある全てのバイナリパッ"
"ケージの一覧を得る事が出来るdebhelperプログラムです。このプログラムに、あるオ"
"プションを引き渡すと、同じオプションを引き渡された他のdebhelperコマンドへ処理"
"させる予定のパッケージ一覧を、変更できます。"

#. type: textblock
#: dh_makeshlibs:5
msgid ""
"dh_makeshlibs - automatically create shlibs file and call dpkg-gensymbols"
msgstr ""
"dh_makeshlibs - 機械的にshlibsファイルを作成し、dpkg-gensymbolsを呼び出します"

#. type: textblock
#: dh_makeshlibs:14
msgid ""
"B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] [B<-V>I<"
"[dependencies]>] [B<-n>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] [B<-V>I<"
"[dependencies]>] [B<-n>] [B<-X>I<item>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_makeshlibs:18
msgid ""
"B<dh_makeshlibs> is a debhelper program that automatically scans for shared "
"libraries, and generates a shlibs file for the libraries it finds."
msgstr ""
"B<dh_makeshlibs>は機械的に共有ライブラリを走査し、shlibsファイルを生成する"
"debhelperプログラムとなります。"

#. type: textblock
#: dh_makeshlibs:21
msgid ""
"It also adds a call to ldconfig in the F<postinst> and F<postrm> scripts (in "
"v3 mode and above only) to any packages in which it finds shared libraries."
msgstr ""
"走査した結果共有ライブラリを含む全部パッケージのF<postinst>、F<postrm>スクリ"
"プトにldconfigの呼び出しを行う処理を付け加えることも出来ます（互換性レベルv3"
"以上のみ本動作に対応。）"

#. type: textblock
#: dh_makeshlibs:24
msgid ""
"Packages that support multiarch are detected, and a Pre-Dependency on "
"multiarch-support is set in ${misc:Pre-Depends} ; you should make sure to "
"put that token into an appropriate place in your debian/control file for "
"packages supporting multiarch."
msgstr ""
"multiarchをサポートするパッケージが見つかると、multiarchサポートに関するPre-"
"Dependencyについては${misc:Pre-Depends}へ設定されます。そのため、multiarchを"
"サポートする場合は、debian/controlファイルの適切な場所へ、${misc:Pre-Depends}"
"句を挿入してあることを確認してください。"

#. type: =item
#: dh_makeshlibs:33
msgid "debian/I<package>.symbols"
msgstr "debian/I<package>.symbols"

#. type: =item
#: dh_makeshlibs:35
msgid "debian/I<package>.symbols.I<arch>"
msgstr "debian/I<package>.symbols.I<arch>"

#. type: textblock
#: dh_makeshlibs:37
msgid ""
"These symbols files, if present, are passed to L<dpkg-gensymbols(1)> to be "
"processed and installed. Use the I<arch> specific names if you need to "
"provide different symbols files for different architectures."
msgstr ""
"これらシンボルファイルは、もし存在すれば、L<dpkg-gensymbols(1)>へ引き渡され、"
"かかる処理とインストールが行われます。異なるアーキテクチャの元で異なるシンボ"
"ルを利用するには、I<arch>を指定願います。"

#. type: =item
#: dh_makeshlibs:47
msgid "B<-m>I<major>, B<--major=>I<major>"
msgstr "B<-m>I<major>, B<--major=>I<major>"

#. type: textblock
#: dh_makeshlibs:49
msgid ""
"Instead of trying to guess the major number of the library with objdump, use "
"the major number specified after the -m parameter. This is much less useful "
"than it used to be, back in the bad old days when this program looked at "
"library filenames rather than using objdump."
msgstr ""
"objdumpをつかってライブラリの主バージョン番号を推定する代わりに、-mパラメタの"
"あとに主バージョン番号を設定することができます。以前本プログラムはライブラリ"
"の主バージョン番号を求めるのにobjdumpを使わず、ライブラリのファイル名から判定"
"していた為、このパラメタが便利だった事があります。"

#. type: =item
#: dh_makeshlibs:54
msgid "B<-V>, B<-V>I<dependencies>"
msgstr "B<-V>, B<-V>I<dependencies>"

#. type: =item
#: dh_makeshlibs:56
msgid "B<--version-info>, B<--version-info=>I<dependencies>"
msgstr "B<--version-info>, B<--version-info=>I<dependencies>"

#. type: textblock
#: dh_makeshlibs:58
msgid ""
"By default, the shlibs file generated by this program does not make packages "
"depend on any particular version of the package containing the shared "
"library. It may be necessary for you to add some version dependency "
"information to the shlibs file. If B<-V> is specified with no dependency "
"information, the current upstream version of the package is plugged into a "
"dependency that looks like \"I<packagename> B<(E<gt>>= I<packageversion>B<)>"
"\". Note that in debhelper compatibility levels before v4, the Debian part "
"of the package version number is also included. If B<-V> is specified with "
"parameters, the parameters can be used to specify the exact dependency "
"information needed (be sure to include the package name)."
msgstr ""
"特に指定無き場合、本プログラムにより生成されるshlibsファイルは、共有ライブラ"
"リを含むパッケージの特定のバージョンに依存することが無いようにします。これは"
"shlibsファイルにバージョンに関する依存情報をパッケージ作成者により追加する必"
"要があるという事です。B<-V>が依存関係の情報無しで用いられると、アップストリー"
"ムのバージョン情報が\"I<packagename> B<(E<gt>>=I<packageversion>B<)>\"の形式"
"で依存関係へ挿入されます。debhelperの互換性レベルがv4未満の場合、パッケージの"
"バージョン番号のうちDebianのバージョンを示す部分も、この依存関係の情報として"
"含まれます。B<-V>がパラメタと共に指定されると、このパラメタは後に必要とされる"
"（また、パッケージの名前として確実に含まれるように）正確なバージョン依存情報"
"として扱われます。"

#. type: textblock
#: dh_makeshlibs:69
msgid ""
"Beware of using B<-V> without any parameters; this is a conservative setting "
"that always ensures that other packages' shared library dependencies are at "
"least as tight as they need to be (unless your library is prone to changing "
"ABI without updating the upstream version number), so that if the maintainer "
"screws up then they won't break. The flip side is that packages might end up "
"with dependencies that are too tight and so find it harder to be upgraded."
msgstr ""
"B<-V>をパラメタ無しで指定する場合の注意事項は次の通りです。この場合、依存関係"
"にあるパッケージに含まれる共有ライブラリはお互いに必要な依存関係を保っていら"
"れるという仮定に基づく保守的な設定となります（なおビルド対象のパッケージに含"
"まれるライブラリについて、アップストリームのバージョン番号が新しくならないに"
"も関わらず、あえてABIを変更しなければならない場合は除きます。）メンテナが、依"
"存関係解決が難しい為対応ができないような場合は、依存関係を破らざるを得ないと"
"きがあります。また、アップグレードが容易に出来ないほど強い依存関係を生じる場"
"合は、依存関係の変更をする必要があります。"

#. type: textblock
#: dh_makeshlibs:83
msgid ""
"Exclude files that contain I<item> anywhere in their filename or directory "
"from being treated as shared libraries."
msgstr ""
"I<item>が対象のファイルや格納されているディレクトリの名前に含まれている場合、"
"共有ファイルとして扱うのを止めます。"

#. type: =item
#: dh_makeshlibs:86
msgid "B<--add-udeb=>I<udeb>"
msgstr "B<--add-udeb=>I<udeb>"

#. type: textblock
#: dh_makeshlibs:88
msgid ""
"Create an additional line for udebs in the shlibs file and use I<udeb> as "
"the package name for udebs to depend on instead of the regular library "
"package."
msgstr ""
"shlibsファイルにudebs用途の追加情報を作成し、通常のライブラリパッケージの名前"
"を使う代わりに、I<udeb>をudebsのパッケージの名前として利用します。"

#. type: textblock
#: dh_makeshlibs:93
msgid "Pass I<params> to L<dpkg-gensymbols(1)>."
msgstr "I<params>をL<dpkg-gensymbols(1)>へ引き渡します。"

#. type: =item
#: dh_makeshlibs:101
msgid "B<dh_makeshlibs>"
msgstr "B<dh_makeshlibs>"

#. type: verbatim
#: dh_makeshlibs:103
#, no-wrap
msgid ""
"Assuming this is a package named F<libfoobar1>, generates a shlibs file that\n"
"looks something like:\n"
" libfoobar 1 libfoobar1\n"
"\n"
msgstr ""
"パッケージ名F<libfoobar1>と仮定すると、本コマンドによって作成される\n"
"shlibsファイルは以下の通りとなります: \n"
" libfoobar 1 libfoobar1\n"
"\n"

#. type: =item
#: dh_makeshlibs:107
msgid "B<dh_makeshlibs -V>"
msgstr "B<dh_makeshlibs -V>"

#. type: verbatim
#: dh_makeshlibs:109
#, no-wrap
msgid ""
"Assuming the current version of the package is 1.1-3, generates a shlibs\n"
"file that looks something like:\n"
" libfoobar 1 libfoobar1 (>= 1.1)\n"
"\n"
msgstr ""
"現在のパッケージのバージョンを1.1-3とすると、本コマンドで得られるshlibsファイル\n"
"は以下の通りです。:\n"
" libfoobar 1 libfoobar1 (>= 1.1)\n"
"\n"

#. type: =item
#: dh_makeshlibs:113
msgid "B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>"
msgstr "B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>"

#. type: verbatim
#: dh_makeshlibs:115
#, no-wrap
msgid ""
"Generates a shlibs file that looks something like:\n"
"  libfoobar 1 libfoobar1 (>= 1.0)\n"
"\n"
msgstr ""
"以下のようなshlibsファイルが生成されます。\n"
"  libfoobar 1 libfoobar1 (>= 1.0)\n"
"\n"

#. type: textblock
#: dh_md5sums:5
msgid "dh_md5sums - generate DEBIAN/md5sums file"
msgstr "dh_md5sums - DEBIAN/md5sums ファイルを生成します"

#. type: textblock
#: dh_md5sums:15
msgid ""
"B<dh_md5sums> [S<I<debhelper options>>] [B<-x>] [B<-X>I<item>] [B<--include-"
"conffiles>]"
msgstr ""
"B<dh_md5sums> [S<I<debhelper options>>] [B<-x>] [B<-X>I<item>] [B<--include-"
"conffiles>]"

#. type: textblock
#: dh_md5sums:19
msgid ""
"B<dh_md5sums> is a debhelper program that is responsible for generating a "
"F<DEBIAN/md5sums> file, which lists the md5sums of each file in the "
"package.  These files are used by the B<debsums> package."
msgstr ""
"B<dh_md5sums>はF<DEBIAN/md5sums>ファイルを生成する役目のプログラムです。な"
"お、F<DEBIAN/md5sums>ファイルとは構築対象のパッケージにあるファイルのmd5sum値"
"を列挙したものです。これらファイルはB<debsums>で利用されます。"

#. type: textblock
#: dh_md5sums:23
msgid ""
"All files in F<DEBIAN/> are omitted from the F<md5sums> file, as are all "
"conffiles (unless you use the B<--include-conffiles> switch)."
msgstr ""
"F<DEBIAN/>以下にある全ファイルは生成されるF<md5sums>ファイルからは除外されま"
"す。また同様に全てのconffileも除外されます（B<--include-conffiles>を指定した"
"場合は別です。）"

#. type: textblock
#: dh_md5sums:26
msgid "The md5sums file is installed with proper permissions and ownerships."
msgstr "md5sumsファイルは適切なパーミッションと所有者でインストールされます。"

#. type: =item
#: dh_md5sums:32
msgid "B<-x>, B<--include-conffiles>"
msgstr "B<-x>, B<--include-conffiles>"

#. type: textblock
#: dh_md5sums:34
msgid ""
"Include conffiles in the md5sums list. Note that this information is "
"redundant since it is included elsewhere in Debian packages."
msgstr ""
"md5sum値を取得するファイルとしてconffileを含めます。この情報は、Debianパッ"
"ケージとは異なる場所にインストールされる為、補助目的の情報として扱われます"

#. type: textblock
#: dh_md5sums:39
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"listed in the md5sums file."
msgstr ""
"md5sumsファイルに列挙されているファイル群から、I<item>をファイル名に持つファ"
"イルを除外します。"

#. type: textblock
#: dh_movefiles:5
msgid "dh_movefiles - move files out of debian/tmp into subpackages"
msgstr ""
"dh_movefiles - debian/tmpからサブパッケージのビルドディレクトリへファイルを移"
"動します"

#. type: textblock
#: dh_movefiles:14
msgid ""
"B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] [B<-"
"X>I<item>] S<I<file> ...>]"
msgstr ""
"B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] [B<-"
"X>I<item>] S<I<file> ...>]"

#. type: textblock
#: dh_movefiles:18
msgid ""
"B<dh_movefiles> is a debhelper program that is responsible for moving files "
"out of F<debian/tmp> or some other directory and into other package build "
"directories. This may be useful if your package has a F<Makefile> that "
"installs everything into F<debian/tmp>, and you need to break that up into "
"subpackages."
msgstr ""
"B<dh_movefiles>は、F<debian/tmp>ディレクトリや他のディレクトリから、別のパッ"
"ケージビルドディレクトリへファイルを移動する役割を持つdebhelperプログラムで"
"す。これはパッケージしようとするソフトウェアに含まれるF<Makefile>ファイルによ"
"り、インストールすべき物がF<debian/tmp>へインストールされてしまうような場合"
"に、これらを別々のディレクトリに後から仕分けたいような場合に便利です。"

#. type: textblock
#: dh_movefiles:23
msgid ""
"Note: B<dh_install> is a much better program, and you are recommended to use "
"it instead of B<dh_movefiles>."
msgstr ""
"注意：B<dh_install>はB<dh_movefiles>よりもはるかに良いプログラムなので、"
"B<dh_install>を利用することを推奨します。"

#. type: =item
#: dh_movefiles:30
msgid "debian/I<package>.files"
msgstr "debian/I<package>.files"

#. type: textblock
#: dh_movefiles:32
msgid ""
"Lists the files to be moved into a package, separated by whitespace. The "
"filenames listed should be relative to F<debian/tmp/>. You can also list "
"directory names, and the whole directory will be moved."
msgstr ""
"とあるパッケージへ移動したいファイルを、空白区切りで列挙します。ファイル名は"
"必ずF<debian/tmp/>からの相対パスで指定しなければなりません。また、ディレクト"
"リ名を指定することもでき、その場合は、ディレクトリをそのまま移動します。"

#. type: textblock
#: dh_movefiles:44
msgid ""
"Instead of moving files out of F<debian/tmp> (the default), this option "
"makes it move files out of some other directory. Since the entire contents "
"of the sourcedir is moved, specifying something like B<--sourcedir=/> is "
"very unsafe, so to prevent mistakes, the sourcedir must be a relative "
"filename; it cannot begin with a `B</>'."
msgstr ""
"F<debian/tmp>(特に指定無き場合の移動元）からファイルを移動する代わりに、別の"
"ディレクトリからファイルを移動するように指定します。なお、移動元ディレクトリ"
"にある全ファイルを移動する為、B<--sourcedir=/>のような指定は、非常に危険で"
"す。こういった間違いを防ぐ為、移動元ディレクトリは相対パスしか受け付けないよ"
"うにしてあります。つまり、'B</>'で始まるディレクトリ指定は出来ません。"

#. type: =item
#: dh_movefiles:50
msgid "B<-Xitem>, B<--exclude=item>"
msgstr "B<-Xitem>, B<--exclude=item>"

#. type: textblock
#: dh_movefiles:52
msgid ""
"Exclude files that contain B<item> anywhere in their filename from being "
"installed."
msgstr ""
"B<item>をファイル名のどこかに含むファイルはインストール候補から除外します。"

#. type: textblock
#: dh_movefiles:57
msgid ""
"Lists files to move. The filenames listed should be relative to F<debian/tmp/"
">. You can also list directory names, and the whole directory will be moved. "
"It is an error to list files here unless you use B<-p>, B<-i>, or B<-a> to "
"tell B<dh_movefiles> which subpackage to put them in."
msgstr ""
"移動すべきファイルを列挙したファイルです。列挙されているファイルはF<debian/"
"tmp/>からの相対パスでなければなりません。ディレクトリ名を列挙することも出来、"
"その場合は、各ディレクトリ全体を移動します。なお、B<-p>、B<-i>、B<-a>を使って"
"B<dh_movefiles>にどのサブパッケージに移動すべきかを指定していない場合エラーが"
"報告されます。 "

#. type: textblock
#: dh_movefiles:66
msgid ""
"Note that files are always moved out of F<debian/tmp> by default (even if "
"you have instructed debhelper to use a compatibility level higher than one, "
"which does not otherwise use debian/tmp for anything at all). The idea "
"behind this is that the package that is being built can be told to install "
"into F<debian/tmp>, and then files can be moved by B<dh_movefiles> from that "
"directory. Any files or directories that remain are ignored, and get deleted "
"by B<dh_clean> later."
msgstr ""
"特に指定無き場合F<debian/tmp>からファイルを移動するという事になっています（も"
"しdebhelperが互換性レベルv1以上で利用したとしても、debian/tmp以外は利用されま"
"せん。）本件の背景として、構築されたパッケージはF<debian/tmp>に一旦インストー"
"ルし、後でB<dh_movefiles>コマンドによりF<debian/tmp>から移動するという考え方"
"があります。なお移動されなかったファイルやディレクトリは無視され、後に"
"B<dh_clean>によって消去されることとなります。"

#. type: textblock
#: dh_perl:5
msgid "dh_perl - calculates Perl dependencies and cleans up after MakeMaker"
msgstr ""
"dh_perl - Perlに関する依存関係を検討し、MakeMakerを実行後に生成したものを消去"
"します"

#. type: textblock
#: dh_perl:16
msgid "B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs> ...>]"
msgstr "B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs> ...>]"

#. type: textblock
#: dh_perl:20
msgid ""
"B<dh_perl> is a debhelper program that is responsible for generating the B<"
"${perl:Depends}> substitutions and adding them to substvars files."
msgstr ""
"B<dh_perl>はB<${perl:Depends}の内容を生成し、この依存情報にsubstvarsファイル"
"の情報を付け加える役目のdebhelperプログラムとなります。"

#. type: textblock
#: dh_perl:23
msgid ""
"The program will look at Perl scripts and modules in your package, and will "
"use this information to generate a dependency on B<perl> or B<perlapi>. The "
"dependency will be substituted into your package's F<control> file wherever "
"you place the token B<${perl:Depends}>."
msgstr ""
"このプログラムは構築対象のパッケージにあるPerlスクリプトやPerlモジュールを検"
"査し、B<perl>やB<perlapi>の依存関係を生成します。B<${perl:Depends}>句を構築対"
"象のパッケージのF<control>に記述すると、生成した依存関係の情報に置き換えられ"
"ます。"

#. type: textblock
#: dh_perl:28
msgid ""
"B<dh_perl> also cleans up empty directories that MakeMaker can generate when "
"installing Perl modules."
msgstr ""
"B<dh_perl>は、さらに、MakeMakerがPerlモジュールをインストールする際に生成した"
"空のディレクトリを削除します。"

#. type: =item
#: dh_perl:35
msgid "B<-d>"
msgstr "B<-d>"

#. type: textblock
#: dh_perl:37
msgid ""
"In some specific cases you may want to depend on B<perl-base> rather than "
"the full B<perl> package. If so, you can pass the -d option to make "
"B<dh_perl> generate a dependency on the correct base package. This is only "
"necessary for some packages that are included in the base system."
msgstr ""
"完全なB<perl>パッケージよりもB<perl-base>に依存したいような場合があります。こ"
"の場合、-dオプションにてB<dh_perl>に正しいベースパッケージに対しての依存情報"
"を生成させるようなオプションを引き渡す箏ができます。これはベースシステムが含"
"まれるようなパッケージのみで必要です。"

#. type: textblock
#: dh_perl:42
msgid ""
"Note that this flag may cause no dependency on B<perl-base> to be generated "
"at all. B<perl-base> is Essential, so its dependency can be left out, unless "
"a versioned dependency is needed."
msgstr ""
"なお、このフラグを指定しても、B<perl-base>本体に関する依存情報は、全く生成さ"
"れません。というのも、B<perl-base>は非常に基礎的なパッケージなので、B<perl-"
"base>に関する依存関係は通常特に指定しなくても問題が無い為です。ただ、B<perl-"
"base>の特定のバージョンに依存が特に必要な場合はその限りではありません。"

#. type: =item
#: dh_perl:46
msgid "B<-V>"
msgstr "B<-V>"

#. type: textblock
#: dh_perl:48
msgid ""
"By default, scripts and architecture independent modules don't depend on any "
"specific version of B<perl>. The B<-V> option causes the current version of "
"the B<perl> (or B<perl-base> with B<-d>) package to be specified."
msgstr ""
"特に指定無き場合、スクリプト本体とアーキテクチャから独立しているモジュールに"
"ついては、特定のバージョンのB<perl>に依存するような依存情報は生成されません。"
"B<-V>オプションを指定すると、パッケージ構築中に使っているバージョンのB<perl>"
"パッケージ（あるいは、B<-d>を指定していれば、現在のB<perl-base>のバージョン）"
"を、パッケージの依存情報として設定します。"

#. type: =item
#: dh_perl:52
msgid "I<library dirs>"
msgstr "I<library dirs>"

#. type: textblock
#: dh_perl:54
msgid ""
"If your package installs Perl modules in non-standard directories, you can "
"make B<dh_perl> check those directories by passing their names on the "
"command line. It will only check the F<vendorlib> and F<vendorarch> "
"directories by default."
msgstr ""
"Perlモジュールを非標準のディレクトリにインストールするようなパッケージを構築"
"しているのであれば、コマンドラインからパッケージの名前を引き渡すことにより、"
"B<dh_perl>に、これらのディレクトリを確認させる事が出来ます。特に指定無き場"
"合、本コマンドはF<vendorlib>とF<vendorarch>ディレクトリのみ確認します。"

#. type: textblock
#: dh_perl:63
msgid "Debian policy, version 3.8.3"
msgstr "Debian policy, version 3.8.3"

#. type: textblock
#: dh_perl:65
msgid "Perl policy, version 1.20"
msgstr "Perl policy, version 1.20"

#. type: textblock
#: dh_perl:154
msgid "Brendan O'Dea <bod@debian.org>"
msgstr "Brendan O'Dea <bod@debian.org>"

#. type: textblock
#: dh_prep:5
msgid "dh_prep - perform cleanups in preparation for building a binary package"
msgstr "dh_prep - バイナリパッケージ構築の事前準備として諸々の消去を行います"

#. type: textblock
#: dh_prep:14
msgid "B<dh_prep> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr "B<dh_prep> [S<I<debhelper options>>] [B<-X>I<item>]"

#. type: textblock
#: dh_prep:18
msgid ""
"B<dh_prep> is a debhelper program that performs some file cleanups in "
"preparation for building a binary package. (This is what B<dh_clean -k> used "
"to do.) It removes the package build directories, F<debian/tmp>, and some "
"temp files that are generated when building a binary package."
msgstr ""
"B<dh_prep>はバイナリパッケージ構築の下準備時として諸々のファイル消去を行う"
"debhelperプログラムです（これはB<dh_clean -k>が昔行っていた作業となります。）"
"本プログラムはパッケージビルドディレクトリ、F<debian/tmp>、あるいは、パッケー"
"ジ構築中に生成した一時ファイルを取り除きます。"

#. type: textblock
#: dh_prep:23
msgid ""
"It is typically run at the top of the B<binary-arch> and B<binary-indep> "
"targets, or at the top of a target such as install that they depend on."
msgstr ""
"本プログラムは通常、B<binary-arch>や、B<binary-indep>ターゲット、あるいは、こ"
"れらが依存するインストール関連のターゲットの一番最初の作業にて起動されるよう"
"にします。"

#. type: textblock
#: dh_prep:32
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""
"削除対象の候補のファイルから、F<item>をファイル名に含むようなファイルを除外し"
"ます。通常では消去されるようなファイルであっても、この場合除外されます。複数"
"の除外ファイルを列挙して指定するには、本オプションを複数回指定して指定願いま"
"す。"

#. type: textblock
#: dh_python:5
msgid ""
"dh_python - calculates Python dependencies and adds postinst and prerm "
"Python scripts (deprecated)"
msgstr ""
"dh_python - Pythonスクリプトの依存関係を検討し、postinstとprermを付け加える"
"Pythonスクリプトです（廃止）"

#. type: textblock
#: dh_python:15
msgid ""
"B<dh_python> [S<I<debhelper options>>] [B<-n>] [B<-V> I<version>] "
"[S<I<module dirs> ...>]"
msgstr ""
"B<dh_python> [S<I<debhelper options>>] [B<-n>] [B<-V> I<version>] "
"[S<I<module dirs> ...>]"

#. type: textblock
#: dh_python:19
msgid ""
"Note: This program is deprecated. You should use B<dh_python2> instead.  "
"This program will do nothing if F<debian/pycompat> or a B<Python-Version> "
"F<control> file field exists."
msgstr ""
"注意：本プログラムは廃止されました。B<dh_python2>を代わりに利用してください。"
"このプログラムは、F<debian/pycompat>が存在していたり、B<Python-Version>フィー"
"ルドがF<control>ファイルに存在すると、何もしません。 "

#. type: textblock
#: dh_python:23
msgid ""
"B<dh_python> is a debhelper program that is responsible for generating the B<"
"${python:Depends}> substitutions and adding them to substvars files. It will "
"also add a F<postinst> and a F<prerm> script if required."
msgstr ""
"B<dh_python>はB<${python:Depends}>を置き換える為の情報を生成し、substvarsファ"
"イルへこの情報を付け加える役目のdebhelperプログラムです。必要に応じて、"
"F<postinst>やF<prerm>スクリプトも追加します。 "

#. type: textblock
#: dh_python:27
msgid ""
"The program will look at Python scripts and modules in your package, and "
"will use this information to generate a dependency on B<python>, with the "
"current major version, or on B<python>I<X>B<.>I<Y> if your scripts or "
"modules need a specific B<python> version. The dependency will be "
"substituted into your package's F<control> file wherever you place the token "
"B<${python:Depends}>."
msgstr ""
"このプログラムは構築対象のパッケージにPythonスクリプトやPythonモジュールが無"
"いかどうか確認し、B<python>に関する依存関係を示す情報を生成する為にこれらのス"
"クリプトやモジュールの情報を利用します。依存関係の情報を生成するにあたり利用"
"される情報として、B<python>についての現在の主バージョンや、スクリプトやモ"
"ジュールが特定のB<python>のバージョンを指定している場合はB<python>I<X>B<."
">I<Y>が利用されます。構築予定のパッケージのF<control>ファイルのどこかにB<"
"${python:Depends}>があれば、依存情報で置き換えられます。"

#. type: textblock
#: dh_python:33
msgid ""
"If some modules need to be byte-compiled at install time, appropriate "
"F<postinst> and F<prerm> scripts will be generated. If already byte-compiled "
"modules are found, they are removed."
msgstr ""
"インストール時にバイトコンパイルされる事が必要なパッケージなら、適切な"
"F<postinst>とF<prerm>スクリプトが生成されます。この場合、バイトコンパイルされ"
"たモジュールが構築中のパッケージ内部に見つかると、こちらは削除されます。"

#. type: textblock
#: dh_python:37
msgid "If you use this program, your package should build-depend on B<python>."
msgstr ""
"このプログラムを使う場合、B<python>に対するbuild-dependを宣言しておかなければ"
"なりません。"

#. type: =item
#: dh_python:43
msgid "I<module dirs>"
msgstr "I<module dirs>"

#. type: textblock
#: dh_python:45
msgid ""
"If your package installs Python modules in non-standard directories, you can "
"make F<dh_python> check those directories by passing their names on the "
"command line. By default, it will check F</usr/lib/site-python>, F</usr/lib/"
"$PACKAGE>, F</usr/share/$PACKAGE>, F</usr/lib/games/$PACKAGE>, F</usr/share/"
"games/$PACKAGE> and F</usr/lib/python?.?/site-packages>."
msgstr ""
"非標準のディレクトリにPythonモジュールをインストールする場合、 コマンドライン"
"からインストール先のディレクトリを指定する事により、F<dh_python>に検査させる"
"ことができます。特に指定無き場合、F</usr/lib/site-python>、F</usr/lib/"
"$PACKAGE>、F</usr/share/$PACKAGE>、F</usr/lib/games/$PACKAGE>、F</usr/share/"
"games/$PACKAGE>、F</usr/lib/python?.?/site-packages>が検査対象となります。"

#. type: textblock
#: dh_python:51
msgid ""
"Note: only F</usr/lib/site-python>, F</usr/lib/python?.?/site-packages> and "
"the extra names on the command line are searched for binary (F<.so>) modules."
msgstr ""
"注意：バイナリ形式の(F<.so>)モジュールの検査対象となるのは、F</usr/lib/site-"
"python>、F</usr/lib/python?.?/site-packages>及び、コマンドラインから指定され"
"たディレクトリ名のみとなります。"

#. type: =item
#: dh_python:54
msgid "B<-V> I<version>"
msgstr "B<-V> I<version>"

#. type: textblock
#: dh_python:56
msgid ""
"If the F<.py> files your package ships are meant to be used by a specific "
"B<python>I<X>B<.>I<Y> version, you can use this option to specify the "
"desired version, such as B<2.3>. Do not use if you ship modules in F</usr/"
"lib/site-python>."
msgstr ""
"構築中のパッケージが提供する予定のF<.py>ファイルが特定のB<python>I<X>B<.>I<Y>"
"バージョンの元で使われる事を意図したければ、このオプションを用いて、例えば"
"B<2.3>のように、期待されるバージョンを指定することができます。なお、F</usr/"
"lib/site-python>以下にインストール予定のモジュールに対してはこのオプションを"
"使ってバージョン指定はしないでください。"

#. type: textblock
#: dh_python:68
msgid "Debian policy, version 3.5.7"
msgstr "Debian policy, version 3.5.7"

#. type: textblock
#: dh_python:70
msgid "Python policy, version 0.3.7"
msgstr "Python policy, version 0.3.7"

#. type: textblock
#: dh_python:288
msgid "Josselin Mouette <joss@debian.org>"
msgstr "Josselin Mouette <joss@debian.org>"

#. type: textblock
#: dh_python:290
msgid "most ideas stolen from Brendan O'Dea <bod@debian.org>"
msgstr ""
"Brendan O'Dea <bod@debian.org>より、本プログラムに関するアイデアを拝借してお"
"ります"

#. type: textblock
#: dh_scrollkeeper:5
msgid "dh_scrollkeeper - deprecated no-op"
msgstr "dh_scrollkeeper - 廃止されており、何もしないコマンドです"

#. type: textblock
#: dh_scrollkeeper:14
msgid "B<dh_scrollkeeper> [S<I<debhelper options>>] [B<-n>] [S<I<directory>>]"
msgstr "B<dh_scrollkeeper> [S<I<debhelper options>>] [B<-n>] [S<I<directory>>]"

#. type: textblock
#: dh_scrollkeeper:18
msgid ""
"B<dh_scrollkeeper> was a debhelper program that handled registering OMF "
"files for ScrollKeeper. However, it no longer does anything, and is now "
"deprecated."
msgstr ""
"B<dh_scrollkeeper>はScrollKeeperに必要なOMFファイルを登録する役目のdebhelper"
"プログラムです。しかしながら、今ではもはや何もしません。本プログラムは廃止さ"
"れました。"

#. type: textblock
#: dh_shlibdeps:5
msgid "dh_shlibdeps - calculate shared library dependencies"
msgstr "dh_shlibdeps - 共有ライブラリの依存関係を検討します"

#. type: textblock
#: dh_shlibdeps:15
msgid ""
"B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] [B<-"
"l>I<directory>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] [B<-"
"l>I<directory>] [B<-X>I<item>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_shlibdeps:19
msgid ""
"B<dh_shlibdeps> is a debhelper program that is responsible for calculating "
"shared library dependencies for packages."
msgstr ""
"B<dh_shlibdeps>は、構築中のパッケージに含まれる共有ライブラリの依存関係を検討"
"する役目のdebhelperプログラムです"

#. type: textblock
#: dh_shlibdeps:22
msgid ""
"This program is merely a wrapper around L<dpkg-shlibdeps(1)> that calls it "
"once for each package listed in the F<control> file, passing it a list of "
"ELF executables and shared libraries it has found."
msgstr ""
"このプログラムはL<dpkg-shlibdeps(1)>の単なるラッパープログラムであり、L<dpkg-"
"shlibdeps(1)>をF<control>ファイルに列挙したパッケージ各々について１度呼び出す"
"ような動作をします。また、同時にL<dpkg-shlibdeps(1)>へ、動作中見つけたELF実行"
"ファイルや、共有ライブラリの一覧を引き渡します。"

#. type: textblock
#: dh_shlibdeps:32
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"passed to B<dpkg-shlibdeps>. This will make their dependencies be ignored.  "
"This may be useful in some situations, but use it with caution. This option "
"may be used more than once to exclude more than one thing."
msgstr ""
"F<item>を名前に含むファイルを、B<dpkg-shlibdeps>へ引き渡さないようにします。"
"このオプションにより、指定されたファイルの依存関係検査は無視されるようになり"
"ます。これは特定の状況下で便利な場合がありますが、気をつけて使って下さい。こ"
"のオプションを使って除外を複数指定する場合は、繰り返し指定する事により行いま"
"す。"

#. type: textblock
#: dh_shlibdeps:39
msgid "Pass I<params> to L<dpkg-shlibdeps(1)>."
msgstr "I<params>をL<dpkg-shlibdeps(1)>へ引き渡します。"

#. type: =item
#: dh_shlibdeps:41
msgid "B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>"
msgstr "B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>"

#. type: textblock
#: dh_shlibdeps:43
msgid ""
"This is another way to pass I<params> to L<dpkg-shlibdeps(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""
"このオプションはI<params>をL<dpkg-shlibdeps(1)>へ引き渡す別の方法となります。"
"しかしながら、このオプションは廃止されました。代わりにB<-->を利用願います。"

#. type: =item
#: dh_shlibdeps:46
msgid "B<-l>I<directory>[B<:>I<directory> ...]"
msgstr "B<-l>I<directory>[B<:>I<directory> ...]"

#. type: textblock
#: dh_shlibdeps:48
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed."
msgstr ""
"最近のバージョンのB<dpkg-shlibdeps>では、このオプションは概ね不要になっていま"
"す。"

#. type: textblock
#: dh_shlibdeps:51
msgid ""
"Before B<dpkg-shlibdeps> is run, B<LD_LIBRARY_PATH> will have added to it "
"the specified directory (or directories -- separate with colons). With "
"recent versions of B<dpkg-shlibdeps>, this is mostly only useful for "
"packages that build multiple flavors of the same library, or other "
"situations where the library is installed into a directory not on the "
"regular library search path."
msgstr ""
"B<dpkg-shlibdeps>を実行する前に、B<LD_LIBRARY_PATH>環境変数に、指定する予定の"
"ディレクトリ（あるいは、複数指定するならコロンで各ディレクトリ名を区切って）"
"が指定されます。最近のバージョンのB<dpkg-shlibdeps>では、いくつか異なる設定で"
"構築したライブラリを提供するパッケージを用意する場合、あるいは、通常のライブ"
"ラリ探索パスにないディレクトリへライブラリをインストールするような場合にのみ"
"役に立ちます。"

#. type: =item
#: dh_shlibdeps:58
msgid "B<-L>I<package>, B<--libpackage=>I<package>"
msgstr "B<-L>I<package>, B<--libpackage=>I<package>"

#. type: textblock
#: dh_shlibdeps:60
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed, unless your package builds multiple flavors of the same library."
msgstr ""
"最近のバージョンのB<dpkg-shlibdeps>であれば、このオプションは概ね不要となりま"
"す。ただし、複数の設定でライブラリを構築するようなパッケージではその限りでは"
"ありません。"

#. type: textblock
#: dh_shlibdeps:63
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-S> parameter) to look first in the "
"package build directory for the specified package, when searching for "
"libraries, symbol files, and shlibs files."
msgstr ""
"ライブラリ、シンボルファイル、shlibsファイルを探索する際に、B<dpkg-"
"shlibdeps> へ（B<-S>パラメタを使い）パッケージのパッケージビルドディレクトリ"
"内にて、最初に探す場所を指定するものです。"

#. type: textblock
#: dh_shlibdeps:71
msgid ""
"Suppose that your source package produces libfoo1, libfoo-dev, and libfoo-"
"bin binary packages. libfoo-bin links against libfoo1, and should depend on "
"it. In your rules file, first run B<dh_makeshlibs>, then B<dh_shlibdeps>:"
msgstr ""
"ここで、構築中のパッケージがlibfoo1、libfoo-dev、libfoo-binのバイナリパッケー"
"ジを生成すると仮定します。libfoo-binはlibfoo1にリンクしており、つまりは依存関"
"係になければならない状態です。この場合、パッケージのrulesファイルとして、最初"
"にB<dh_makeshlibs>を呼び出し、次にB<dh_shlibdeps>を呼び出す記述をしなければな"
"りません："

#. type: verbatim
#: dh_shlibdeps:75
#, no-wrap
msgid ""
"\tdh_makeshlibs\n"
"\tdh_shlibdeps\n"
"\n"
msgstr ""
"\tdh_makeshlibs\n"
"\tdh_shlibdeps\n"
"\n"

#. type: textblock
#: dh_shlibdeps:78
msgid ""
"This will have the effect of generating automatically a shlibs file for "
"libfoo1, and using that file and the libfoo1 library in the F<debian/libfoo1/"
"usr/lib> directory to calculate shared library dependency information."
msgstr ""
"こちらの記述を行うと、共有ライブラリの依存関係を検討する為に、libfoo1に関する"
"shlibsファイルを機械的に生成し、生成されたshlibsファイル及びF<debian/libfoo1/"
"usr/lib>以下のlibfoo1ライブラリを使うようになります。"

#. type: textblock
#: dh_shlibdeps:83
msgid ""
"If a libbar1 package is also produced, that is an alternate build of libfoo, "
"and is installed into F</usr/lib/bar/>, you can make libfoo-bin depend on "
"libbar1 as follows:"
msgstr ""
"libbar1パッケージをlibfooとは別に構築し、F</usr/lib/bar/>へインストールしてあ"
"るとします。この場合、libfoo-binについてlibbar1を以下のようにして依存させる事"
"ができます。"

#. type: verbatim
#: dh_shlibdeps:87
#, no-wrap
msgid ""
"\tdh_shlibdeps -Llibbar1 -l/usr/lib/bar\n"
"\t\n"
msgstr ""
"\tdh_shlibdeps -Llibbar1 -l/usr/lib/bar\n"
"\t\n"

#. type: textblock
#: dh_shlibdeps:173
msgid "L<debhelper(7)>, L<dpkg-shlibdeps(1)>"
msgstr "L<debhelper(7)>, L<dpkg-shlibdeps(1)>"

#. type: textblock
#: dh_strip:5
msgid ""
"dh_strip - strip executables, shared libraries, and some static libraries"
msgstr ""
"dh_strip - 実行ファイル、共有ファイル、静的ライブラリのいくつかについて、デ"
"バッグ情報を取り除きます"

#. type: textblock
#: dh_strip:15
msgid ""
"B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] [B<--dbg-"
"package=>I<package>] [B<--keep-debug>]"
msgstr ""
"B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] [B<--dbg-"
"package=>I<package>] [B<--keep-debug>]"

#. type: textblock
#: dh_strip:19
msgid ""
"B<dh_strip> is a debhelper program that is responsible for stripping "
"executables, shared libraries, and static libraries that are not used for "
"debugging."
msgstr ""
"B<dh_strip>は、デバッグ目的で利用する必要のない実行ファイル、共有ライブラリ、"
"静的ライブラリからデバッグ情報を取り除く役目のdebhelperプログラムです。"

#. type: textblock
#: dh_strip:23
msgid ""
"This program examines your package build directories and works out what to "
"strip on its own. It uses L<file(1)> and file permissions and filenames to "
"figure out what files are shared libraries (F<*.so>), executable binaries, "
"and static (F<lib*.a>) and debugging libraries (F<lib*_g.a>, F<debug/*.so>), "
"and strips each as much as is possible. (Which is not at all for debugging "
"libraries.) In general it seems to make very good guesses, and will do the "
"right thing in almost all cases."
msgstr ""
"本プログラムはパッケージビルドディレクトリ以下を探索し、どのファイルからデ"
"バッグ情報を取り除くべきかを見つけ出します。本プログラムは、L<file(1)>コマン"
"ドを利用し、ファイルパーミッション、ファイル名を利用して、どのファイルが共有"
"ライブラリ(F<*.so>)、実行可能バイナリ、静的ライブラリ(F<lib*.a>)、デバッグ用"
"ライブラリ(F<lib*_g.a>,F<debug/*.so>)であるかを判断し、該当する場合は、デバッ"
"グシンボルをできる限り取り除きます（デバッグ用ライブラリについては全く何もし"
"ません。）多くの場合で、本プログラムは非常に良い推定を行い、正しくデバッグシ"
"ンボルの除去を行います。"

#. type: textblock
#: dh_strip:31
msgid ""
"Since it is very hard to automatically guess if a file is a module, and hard "
"to determine how to strip a module, B<dh_strip> does not currently deal with "
"stripping binary modules such as F<.o> files."
msgstr ""
"機械的にファイルがモジュールであるかどうかを見分けるのは難しく、また、どう"
"やってモジュールからデバグ情報を除外すれば良いかを決定するのも難しい為、"
"B<dh_strip>は、F<.o>を拡張子に持つファイルのようなバイナリモジュールからデ"
"バッグ情報の除去を行う事について、未だサポートしていません。"

#. type: textblock
#: dh_strip:41
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"stripped. You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""
"I<item>を名前に含むようなファイルを、デバッグ情報除去の対象から外します。も"
"し、複数のファイルを処理させないように指定したければ、本オプションを複数回指"
"定することによって行えます。"

#. type: =item
#: dh_strip:45
msgid "B<--dbg-package=>I<package>"
msgstr "B<--dbg-package=>I<package>"

#. type: textblock
#: dh_strip:47
msgid ""
"Causes B<dh_strip> to save debug symbols stripped from the packages it acts "
"on as independent files in the package build directory of the specified "
"debugging package."
msgstr ""
"B<dh_strip>を使ってパッケージからデバッグシンボルを取き、指定のデバッグ用パッ"
"ケージのパッケージビルドディレクトリ内に独立したファイルとしてデバッグシンボ"
"ルを保存します。"

#. type: textblock
#: dh_strip:51
msgid ""
"For example, if your packages are libfoo and foo and you want to include a "
"I<foo-dbg> package with debugging symbols, use B<dh_strip --dbg-"
"package=>I<foo-dbg>."
msgstr ""
"例えば、構築予定のパッケージとして、libfoo、fooがあり、I<foo-dbg>パッケージに"
"はデバッグシンボルを含めておきたい場合、B<dh_strip--dbg-package=>I<foo-dbg>を"
"実行してください。"

#. type: textblock
#: dh_strip:54
msgid ""
"Note that this option behaves significantly different in debhelper "
"compatibility levels 4 and below. Instead of specifying the name of a debug "
"package to put symbols in, it specifies a package (or packages) which should "
"have separated debug symbols, and the separated symbols are placed in "
"packages with B<-dbg> added to their name."
msgstr ""
"このオプションはdebhelperの互換性レベルv4以下について振る舞いが大きく変わりま"
"す。この時は、引数にデバッグシンボルを残したままにしておきたいデバッグ用の"
"パッケージ名を指定する代わりに、デバッグシンボルを取り除きたいパッケージ名"
"（あるいはパッケージ群）を指定します。そうすると、取り除かれたデバッグシンボ"
"ルは、パッケージ名にB<-dbg>を付与した名前を持つパッケージに保存されます。"

#. type: =item
#: dh_strip:60
msgid "B<-k>, B<--keep-debug>"
msgstr "B<-k>, B<--keep-debug>"

#. type: textblock
#: dh_strip:62
msgid ""
"Debug symbols will be retained, but split into an independent file in F<usr/"
"lib/debug/> in the package build directory. B<--dbg-package> is easier to "
"use than this option, but this option is more flexible."
msgstr ""
"デバッグシンボルが取り除かれる一方、パッケージビルドディレクトリ以下にある"
"F<usr/lib/debug/> ディレクトリへ取り除いたデバッグシンボルを取り置きます。"
"B<--dbg-package>オプションの方が本オプションよりも使うのは易しいのですが、本"
"オプションはB<--dbg-package>オプションよりも柔軟な指定が可能です。"

#. type: textblock
#: dh_strip:70
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nostrip>, "
"nothing will be stripped, in accordance with Debian policy (section 10.1 "
"\"Binaries\")."
msgstr ""
"B<DEB_BUILD_OPTIONS>環境変数にB<nostrip>が含まれていると、デバッグシンボルは"
"まったく取り除かなくなります。Debian policy(10.1章\"Binaries\")には、本動作に"
"ついての規程があります。"

#. type: textblock
#: dh_strip:76
msgid "Debian policy, version 3.0.1"
msgstr "Debian policy, version 3.0.1"

#. type: textblock
#: dh_suidregister:5
msgid "dh_suidregister - suid registration program (deprecated)"
msgstr "dh_suidregister - suidを付与したプログラムを登録します(廃止)"

#. type: textblock
#: dh_suidregister:9 dh_undocumented:14
msgid "Do not run!"
msgstr "本コマンドを動作させてはいけません！"

#. type: textblock
#: dh_suidregister:13
msgid ""
"This program used to register suid and sgid files with L<suidregister(1)>, "
"but with the introduction of L<dpkg-statoverride(8)>, registration of files "
"in this way is unnecessary, and even harmful, so this program is deprecated "
"and should not be used."
msgstr ""
"このプログラムはL<suidregister(1)>により、suidや、sgidファイルを登録するのに"
"使われます。しかしながら、L<dpkg-statoverride(8)>の序章の通り、本コマンドが提"
"供するやり方でファイルを登録することは不必要なことであり、不具合も引き起こし"
"ます。その為、このプログラムは廃止されており、使わないようにしてください。"

#. type: =head1
#: dh_suidregister:18
msgid "CONVERTING TO STATOVERRIDE"
msgstr "STATOVERRIDE用に変換する"

#. type: textblock
#: dh_suidregister:20
msgid ""
"Converting a package that uses this program to use the new statoverride "
"mechanism is easy. Just remove the call to B<dh_suidregister> from F<debian/"
"rules>, and add a versioned conflicts into your F<control> file, as follows:"
msgstr ""
"本プログラムを利用するパッケージを、新しい仕組みであるstatoverrideを使うよう"
"に変換するのは簡単です。単にF<debian/rules>から、B<dh_suidregister>の呼び出し"
"を取り除き、F<control>ファイルにバージョンに関する衝突情報を以下のように記載"
"するだけです："

#. type: verbatim
#: dh_suidregister:25
#, no-wrap
msgid ""
"  Conflicts: suidmanager (<< 0.50)\n"
"\n"
msgstr ""
"  Conflicts: suidmanager (<< 0.50)\n"
"\n"

#. type: textblock
#: dh_suidregister:27
msgid ""
"The conflicts is only necessary if your package used to register things with "
"suidmanager; if it did not, you can just remove the call to this program "
"from your rules file."
msgstr ""
"この衝突情報は、suidmanagerを用いてsuid/guidしたファイルを登録しているような"
"パッケージについてのみ必要です。もし、suidmanagerを使っていないようであれば、"
"ruleファイルから本プログラムの呼び出しを取り除くだけで問題ありません。"

#. type: textblock
#: dh_testdir:5
msgid "dh_testdir - test directory before building Debian package"
msgstr ""
"dh_testdir - Debianパッケージを構築する前にディレクトリの状態を検証します"

#. type: textblock
#: dh_testdir:14
msgid "B<dh_testdir> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr "B<dh_testdir> [S<I<debhelper options>>] [S<I<file> ...>]"

#. type: textblock
#: dh_testdir:18
msgid ""
"B<dh_testdir> tries to make sure that you are in the correct directory when "
"building a Debian package. It makes sure that the file F<debian/control> "
"exists, as well as any other files you specify. If not, it exits with an "
"error."
msgstr ""
"B<dh_testdir>コマンドは、Debianパッケージを構築する際に、カレントディレクトリ"
"が正しいディレクトリにあるかどうかを確認しようとします。また、同様にF<debian/"
"control>ファイルや、指定されている他のファイルがきちんと存在するかどうかも確"
"かめます。もし、そうでない場合、戻り値にエラー値を指定して処理を終わります。"

#. type: textblock
#: dh_testdir:29
msgid "Test for the existence of these files too."
msgstr "これらのファイルの存在もあわせて確認します。"

#. type: textblock
#: dh_testroot:5
msgid "dh_testroot - ensure that a package is built as root"
msgstr ""
"dh_testroot - パッケージがroot権限の元で構築されようとしているかを確かめます"

#. type: textblock
#: dh_testroot:9
msgid "B<dh_testroot> [S<I<debhelper options>>]"
msgstr "B<dh_testroot> [S<I<debhelper options>>]"

#. type: textblock
#: dh_testroot:13
msgid ""
"B<dh_testroot> simply checks to see if you are root. If not, it exits with "
"an error. Debian packages must be built as root, though you can use "
"L<fakeroot(1)>"
msgstr ""
"B<dh_testroot>は単に、root権限でパッケージを構築しようとしているかどうかを確"
"かめます。もしroot権限を持っていなければ、戻り値にエラー値を指定して処理を終"
"わります。debianパッケージはroot権限の元で構築されなければなりません。もし"
"root権限で構築できないのであれば、L<fakeroot(1)>を利用してください。"

#. type: textblock
#: dh_undocumented:5
msgid "dh_undocumented - undocumented.7 symlink program (deprecated no-op)"
msgstr ""
"dh_undocumented - undocumented.7のシンボリックリンクを作成する(廃止されてお"
"り、何もしません)"

#. type: textblock
#: dh_undocumented:18
msgid ""
"This program used to make symlinks to the F<undocumented.7> man page for man "
"pages not present in a package. Debian policy now frowns on use of the "
"F<undocumented.7> man page, and so this program does nothing, and should not "
"be used."
msgstr ""
"このプログラムはかつてパッケージにmanページが存在しない場合に、"
"F<undocumented.7>へのシンボリックリンクを作成して、パッケージにmanページが無"
"い事を示すのに使われていました。現在のDebianポリシーはF<undocumented.7>のman"
"ページを利用する事について異議を唱えている為、本プログラムは何もしないプログ"
"ラムとなっており、使わないようにする必要があります。"

#. type: textblock
#: dh_usrlocal:5
msgid "dh_usrlocal - migrate usr/local directories to maintainer scripts"
msgstr "dh_usrlocal - usr/localディレクトリをメンテナスクリプトへ移行します"

#. type: textblock
#: dh_usrlocal:17
msgid "B<dh_usrlocal> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_usrlocal> [S<I<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_usrlocal:21
msgid ""
"B<dh_usrlocal> is a debhelper program that can be used for building packages "
"that will provide a subdirectory in F</usr/local> when installed."
msgstr ""
"B<dh_usrlocal>コマンドはインストールの際にF</usr/local>以下にサブディレクトリ"
"を作成するようなパッケージを構築する時に使えるようなdebhelperプログラムです。"

#. type: textblock
#: dh_usrlocal:24
msgid ""
"It finds subdirectories of F<usr/local> in the package build directory, and "
"removes them, replacing them with maintainer script snippets (unless B<-n> "
"is used) to create the directories at install time, and remove them when the "
"package is removed, in a manner compliant with Debian policy. These snippets "
"are inserted into the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of debhelper maintainer script "
"snippets."
msgstr ""
"本コマンドはパッケージビルドディレクトリにあるF<usr/local>以下のサブディレク"
"トリを探し、これらを削除し、代わりにディレクトリの中身をインストール時に改め"
"て作成するようなメンテナスクリプトのコードが作成されます（B<-n>オプションが指"
"定されていると、この動作は抑制されます。）また、これらコードの一部は、パッ"
"ケージが取り除かれるときには、同時に作成したディレクトリと中身を取り除きま"
"す。これら動作は、_Debian policyの内容に沿ったものとなります。これらコードの"
"一部はB<dh_installdeb>により、メンテナスクリプトへ挿入されます。"
"L<dh_installdeb(1)>にdebhelperのメンテナスクリプトコードの一部に関する説明が"
"あります。"

#. type: textblock
#: dh_usrlocal:32
msgid ""
"If the directories found in the build tree have unusual owners, groups, or "
"permissions, then those values will be preserved in the directories made by "
"the F<postinst> script. However, as a special exception, if a directory is "
"owned by root.root, it will be treated as if it is owned by root.staff and "
"is mode 2775. This is useful, since that is the group and mode policy "
"recommends for directories in F</usr/local>."
msgstr ""
"パッケージビルドツリー以下に通常ではない所有者、グループ、パーミッションを持"
"つサブディレクトリが存在すると、これらの情報は保存され、F<postinst>スクリプト"
"によって後で反映されます。しかしながら、特別な例外として、ディレクトリがroot."
"rootのユーザ・グループとなっている場合、ユーザ・グループはroot.staffで、パー"
"ミッションは2775であるものとして扱われます。これはF</usr/local>以下のディレク"
"トリを扱うのに都合が良い為です。"

#. type: textblock
#: dh_usrlocal:57
msgid "Debian policy, version 2.2"
msgstr "Debian policy, version 2.2"

#. type: textblock
#: dh_usrlocal:122
msgid "Andrew Stribblehill <ads@debian.org>"
msgstr "Andrew Stribblehill <ads@debian.org>"

#~ msgid ""
#~ "B<dh_installinit> is a debhelper program that is responsible for "
#~ "installing upstart job files or init scripts with associated defaults "
#~ "files into package build directories, and in the former case providing "
#~ "compatibility handling for non-upstart systems."
#~ msgstr ""
#~ "B<dh_installinit>はパッケージビルドディレクトリ以下にパッケージが必要とす"
#~ "る特に指定無き場合のファイルとして、upstart用jobファイルか、initスクリプト"
#~ "をインストールする役目のdebhelperプログラムです。upstart用jobファイルをイ"
#~ "ンストールする場合は、upstartを利用していないシステムでも動作するように扱"
#~ "います。"

#~ msgid ""
#~ "Otherwise, if this exists, it is installed into etc/init.d/I<package> in "
#~ "the package build directory."
#~ msgstr ""
#~ "一方で、本ファイルが存在すれば、パッケージビルドディレクトリ以下にあるetc/"
#~ "init.d/I<package>へ本ファイルがインストールされます。"

#~ msgid ""
#~ "If no upstart job file is installed in the target directory when "
#~ "B<dh_installinit --onlyscripts> is called, this program will assume that "
#~ "an init script is being installed and not provide the compatibility "
#~ "symlinks or upstart dependencies."
#~ msgstr ""
#~ "もし、B<dh_installinit --onlyscripts> が起動されているにもかかわらず、"
#~ "upstart用のjobファイルがインストールの元とするディレクトリに存在しないよう"
#~ "な場合、本プログラムは、何らかのinitスクリプトがインストールされているが互"
#~ "換性確保の為のシンボリックリンクがまだ張られていないか、あるいはupstart用"
#~ "jobファイルの依存関係についての設定が行われていない状態にあると仮定して動"
#~ "作します。"
